"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _emotion = require("emotion");

var _recompose = require("recompose");

var _search = _interopRequireDefault(require("react-icons/lib/fa/search"));

var _reactComponentComponent = _interopRequireDefault(require("react-component-component"));

var _SQONView = require("../../SQONView");

var _utils = require("../../SQONView/utils");

var _Input = _interopRequireDefault(require("../../Input"));

var _TextHighlight = _interopRequireDefault(require("../../TextHighlight"));

var _QuickSearchQuery = _interopRequireDefault(require("./QuickSearchQuery"));

var _QuickSearchFieldsQuery = _interopRequireDefault(require("./QuickSearchFieldsQuery"));

var _translateSQONValue = _interopRequireDefault(require("../../utils/translateSQONValue"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var currentValues = function currentValues(_ref) {
  var sqon = _ref.sqon,
      primaryKeyField = _ref.primaryKeyField;
  return (0, _utils.currentFieldValue)({
    sqon: sqon,
    dotField: primaryKeyField === null || primaryKeyField === void 0 ? void 0 : primaryKeyField.field,
    op: 'in'
  });
};

var toggleValue = function toggleValue(_ref2) {
  var sqon = _ref2.sqon,
      setSQON = _ref2.setSQON,
      primaryKeyField = _ref2.primaryKeyField,
      primaryKey = _ref2.primaryKey;
  return setSQON((0, _utils.toggleSQON)({
    op: 'and',
    content: [{
      op: 'in',
      content: {
        field: primaryKeyField === null || primaryKeyField === void 0 ? void 0 : primaryKeyField.field,
        value: [].concat(primaryKey || [])
      }
    }]
  }, sqon));
};

var enhance = (0, _recompose.compose)((0, _recompose.withState)('value', 'setValue', ''));

var DropdownItem = function DropdownItem(_ref3) {
  var entityName = _ref3.entityName,
      optionIndex = _ref3.optionIndex,
      inputValue = _ref3.inputValue,
      result = _ref3.result,
      primaryKey = _ref3.primaryKey,
      _ref3$onMouseDown = _ref3.onMouseDown,
      onMouseDown = _ref3$onMouseDown === void 0 ? function () {} : _ref3$onMouseDown;
  return _react.default.createElement("div", {
    className: "quick-search-result ".concat(
    /*#__PURE__*/
    (0, _emotion.css)("cursor:pointer;")),
    onMouseDown: onMouseDown
  }, _react.default.createElement("div", {
    className: "quick-search-result-entity quick-search-result-entity-".concat(optionIndex)
  }, _react.default.createElement("div", null, entityName.slice(0, 2).toUpperCase())), _react.default.createElement("div", {
    className: "quick-search-result-details"
  }, _react.default.createElement("div", {
    className: "quick-search-result-key"
  }, primaryKey), _react.default.createElement("div", {
    className: "quick-search-result-value"
  }, _react.default.createElement(_TextHighlight.default, {
    highlightClassName: "quick-search-result-value-highlight ".concat(
    /*#__PURE__*/
    (0, _emotion.css)("font-weight:bold;")),
    highlightText: inputValue,
    content: result
  }))));
};

var inputRef = _react.default.createRef();

var QuickSearch = function QuickSearch(_ref4) {
  var className = _ref4.className,
      sqon = _ref4.sqon,
      setSQON = _ref4.setSQON,
      value = _ref4.value,
      setValue = _ref4.setValue,
      _ref4$searchTextDelim = _ref4.searchTextDelimiters,
      searchTextDelimiters = _ref4$searchTextDelim === void 0 ? ['\\s', ','] : _ref4$searchTextDelim,
      _ref4$placeholder = _ref4.placeholder,
      placeholder = _ref4$placeholder === void 0 ? 'Quick Search' : _ref4$placeholder,
      _ref4$Icon = _ref4.Icon,
      Icon = _ref4$Icon === void 0 ? _react.default.createElement(_search.default, null) : _ref4$Icon,
      _ref4$LoadingIcon = _ref4.LoadingIcon,
      LoadingIcon = _ref4$LoadingIcon === void 0 ? _react.default.createElement(_search.default, null) : _ref4$LoadingIcon,
      _ref4$PinnedValueComp = _ref4.PinnedValueComponent,
      PinnedValueComponent = _ref4$PinnedValueComp === void 0 ? _SQONView.Value : _ref4$PinnedValueComp,
      _ref4$translateSQONVa = _ref4.translateSQONValue,
      translateSQONValue = _ref4$translateSQONVa === void 0 ? function (x) {
    return x;
  } : _ref4$translateSQONVa,
      _ref4$InputComponent = _ref4.InputComponent,
      InputComponent = _ref4$InputComponent === void 0 ? _Input.default : _ref4$InputComponent,
      _ref4$DropdownItemCom = _ref4.DropdownItemComponent,
      DropdownItemComponent = _ref4$DropdownItemCom === void 0 ? DropdownItem : _ref4$DropdownItemCom,
      props = _objectWithoutProperties(_ref4, ["className", "sqon", "setSQON", "value", "setValue", "searchTextDelimiters", "placeholder", "Icon", "LoadingIcon", "PinnedValueComponent", "translateSQONValue", "InputComponent", "DropdownItemComponent"]);

  return _react.default.createElement(_QuickSearchFieldsQuery.default, _extends({}, props, {
    render: function render(_ref5) {
      var primaryKeyField = _ref5.primaryKeyField,
          enabled = _ref5.enabled,
          quickSearchFields = _ref5.quickSearchFields,
          quickSearchEntities = _ref5.quickSearchEntities,
          _ref5$entityIndexLook = _ref5.entityIndexLookup,
          entityIndexLookup = _ref5$entityIndexLook === void 0 ? quickSearchEntities.reduce(function (obj, x, i) {
        return _objectSpread({}, obj, _defineProperty({}, x, i));
      }, {}) : _ref5$entityIndexLook;
      return _react.default.createElement(_QuickSearchQuery.default, _extends({}, props, {
        primaryKeyField: primaryKeyField,
        quickSearchFields: quickSearchFields
      }, {
        searchTextDelimiters: searchTextDelimiters,
        searchText: value,
        render: function render(_ref6) {
          var searchResults = _ref6.results,
              loading = _ref6.loading;
          return _react.default.createElement(_reactComponentComponent.default, {
            initialState: {
              dropDownExpanded: false
            }
          }, function (_ref7) {
            var _currentValues;

            var dropDownExpanded = _ref7.state.dropDownExpanded,
                setState = _ref7.setState;

            var showDropdown = function showDropdown() {
              return setState({
                dropDownExpanded: true
              });
            };

            var hideDropdown = function hideDropdown() {
              return setState({
                dropDownExpanded: false
              });
            };

            return _react.default.createElement("div", {
              className: "quick-search ".concat(className)
            }, _react.default.createElement("div", {
              className: "quick-search-pinned-values"
            }, (_currentValues = currentValues({
              sqon: sqon,
              primaryKeyField: primaryKeyField
            })) === null || _currentValues === void 0 ? void 0 : _currentValues.map(function (primaryKey) {
              return _react.default.createElement("div", {
                className: "quick-search-pinned-value"
              }, _react.default.createElement(PinnedValueComponent, {
                onClick: function onClick() {
                  return toggleValue({
                    sqon: sqon,
                    setSQON: setSQON,
                    primaryKeyField: primaryKeyField,
                    primaryKey: primaryKey
                  });
                }
              }, (0, _recompose.compose)(translateSQONValue, _translateSQONValue.default)(primaryKey)));
            })), _react.default.createElement(InputComponent, {
              disabled: !enabled,
              icon: loading ? LoadingIcon : Icon,
              onBlur: hideDropdown,
              onFocus: showDropdown,
              type: "text",
              value: value,
              componentRef: inputRef,
              placeholder: placeholder,
              onChange: function onChange(_ref8) {
                var value = _ref8.target.value;
                return setValue(value || '');
              },
              "aria-label": "Quick search"
            }), _react.default.createElement("div", {
              className:
              /*#__PURE__*/

              /*#__PURE__*/
              (0, _emotion.css)("position:relative;")
            }, !dropDownExpanded ? null : _react.default.createElement("div", {
              className: "quick-search-results ".concat(
              /*#__PURE__*/
              (0, _emotion.css)("position:absolute;top:0;left:0;margin:0;padding:0;z-index:1;background:white;width:100%;"))
            }, searchResults === null || searchResults === void 0 ? void 0 : searchResults.map(function (_ref9, i) {
              var entityName = _ref9.entityName,
                  result = _ref9.result,
                  primaryKey = _ref9.primaryKey,
                  input = _ref9.input,
                  _ref9$index = _ref9.index,
                  index = _ref9$index === void 0 ? entityIndexLookup[entityName] % 5 + 1 : _ref9$index;
              return _react.default.createElement(DropdownItemComponent, {
                entityName: entityName,
                optionIndex: index,
                primaryKey: primaryKey,
                key: "".concat(result, "-").concat(i),
                "aria-label": "".concat(result, "-").concat(i),
                result: result,
                inputValue: input,
                onMouseDown: function onMouseDown() {
                  var _currentValues2;

                  // onMouseDown because the input's onBlur would prevent onClick from triggering
                  setValue('');

                  if (!((_currentValues2 = currentValues({
                    sqon: sqon,
                    primaryKeyField: primaryKeyField
                  })) === null || _currentValues2 === void 0 ? void 0 : _currentValues2.includes(primaryKey))) {
                    toggleValue({
                      sqon: sqon,
                      setSQON: setSQON,
                      primaryKeyField: primaryKeyField,
                      primaryKey: primaryKey
                    });
                  }
                }
              });
            }))));
          });
        }
      }));
    }
  }));
};

var _default = enhance(QuickSearch);

exports.default = _default;