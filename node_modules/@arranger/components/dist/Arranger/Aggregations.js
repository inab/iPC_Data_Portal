"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AggsWrapper", {
  enumerable: true,
  get: function get() {
    return _Aggs.AggsWrapper;
  }
});
exports.default = exports.AggregationsList = exports.AggregationsListDisplay = void 0;

var _react = _interopRequireDefault(require("react"));

var _lodash = require("lodash");

var _Aggs = require("../Aggs");

var _aggComponentsMap = _interopRequireDefault(require("../Aggs/aggComponentsMap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var BaseWrapper = function BaseWrapper(_ref) {
  var className = _ref.className,
      props = _objectWithoutProperties(_ref, ["className"]);

  return _react.default.createElement("div", _extends({}, props, {
    className: "aggregations ".concat(className)
  }));
};

var AggregationsListDisplay = function AggregationsListDisplay(_ref2) {
  var data = _ref2.data,
      _ref2$onValueChange = _ref2.onValueChange,
      _onValueChange = _ref2$onValueChange === void 0 ? function () {} : _ref2$onValueChange,
      aggs = _ref2.aggs,
      graphqlField = _ref2.graphqlField,
      setSQON = _ref2.setSQON,
      sqon = _ref2.sqon,
      containerRef = _ref2.containerRef,
      _ref2$componentProps = _ref2.componentProps,
      componentProps = _ref2$componentProps === void 0 ? {
    getTermAggProps: function getTermAggProps() {
      return {};
    },
    getRangeAggProps: function getRangeAggProps() {
      return {};
    },
    getBooleanAggProps: function getBooleanAggProps() {
      return {};
    },
    getDatesAggProps: function getDatesAggProps() {
      return {};
    }
  } : _ref2$componentProps,
      _ref2$getCustomItems = _ref2.getCustomItems,
      getCustomItems = _ref2$getCustomItems === void 0 ? function (_ref3) {
    var aggs = _ref3.aggs;
    return [];
  } : _ref2$getCustomItems;

  var aggComponentInstances = data && aggs.map(function (agg) {
    return _objectSpread({}, agg, {}, data[graphqlField].aggregations[agg.field], {}, data[graphqlField].extended.find(function (x) {
      return x.field.replace(/\./g, '__') === agg.field;
    }), {
      onValueChange: function onValueChange(_ref4) {
        var sqon = _ref4.sqon,
            value = _ref4.value;

        _onValueChange(value);

        setSQON(sqon);
      },
      key: agg.field,
      sqon: sqon,
      containerRef: containerRef
    });
  }).map(function (agg) {
    var _aggComponents$agg$ty;

    return (_aggComponents$agg$ty = _aggComponentsMap.default[agg.type]) === null || _aggComponents$agg$ty === void 0 ? void 0 : _aggComponents$agg$ty.call(_aggComponentsMap.default, _objectSpread({}, agg, {}, componentProps));
  });

  if (aggComponentInstances) {
    // sort the list by the index specified for each component to prevent order bumping
    var componentListToInsert = (0, _lodash.sortBy)(getCustomItems({
      aggs: aggs
    }), 'index'); // go through the list of inserts and inject them by splitting and joining

    var inserted = componentListToInsert.reduce(function (acc, _ref5) {
      var index = _ref5.index,
          component = _ref5.component;
      var firstChunk = acc.slice(0, index);
      var secondChunk = acc.slice(index, acc.length);
      return [].concat(_toConsumableArray(firstChunk), [component()], _toConsumableArray(secondChunk));
    }, aggComponentInstances);
    return inserted;
  } else {
    return aggComponentInstances;
  }
};

exports.AggregationsListDisplay = AggregationsListDisplay;

var AggregationsList = function AggregationsList(_ref6) {
  var _ref6$onValueChange = _ref6.onValueChange,
      onValueChange = _ref6$onValueChange === void 0 ? function () {} : _ref6$onValueChange,
      setSQON = _ref6.setSQON,
      sqon = _ref6.sqon,
      projectId = _ref6.projectId,
      graphqlField = _ref6.graphqlField,
      style = _ref6.style,
      api = _ref6.api,
      _ref6$Wrapper = _ref6.Wrapper,
      Wrapper = _ref6$Wrapper === void 0 ? BaseWrapper : _ref6$Wrapper,
      containerRef = _ref6.containerRef,
      _ref6$componentProps = _ref6.componentProps,
      componentProps = _ref6$componentProps === void 0 ? {
    getTermAggProps: function getTermAggProps() {
      return {};
    },
    getRangeAggProps: function getRangeAggProps() {
      return {};
    },
    getBooleanAggProps: function getBooleanAggProps() {
      return {};
    },
    getDatesAggProps: function getDatesAggProps() {
      return {};
    }
  } : _ref6$componentProps,
      _ref6$aggs = _ref6.aggs,
      aggs = _ref6$aggs === void 0 ? [] : _ref6$aggs,
      debounceTime = _ref6.debounceTime,
      getCustomItems = _ref6.getCustomItems;
  return _react.default.createElement(_Aggs.AggsQuery, {
    api: api,
    debounceTime: 300,
    projectId: projectId,
    index: graphqlField,
    sqon: sqon,
    aggs: aggs,
    render: function render(_ref7) {
      var data = _ref7.data;
      return AggregationsListDisplay({
        data: data,
        onValueChange: onValueChange,
        aggs: aggs,
        graphqlField: graphqlField,
        setSQON: setSQON,
        sqon: sqon,
        containerRef: containerRef,
        componentProps: componentProps,
        getCustomItems: getCustomItems
      });
    }
  });
};

exports.AggregationsList = AggregationsList;

var Aggregations = function Aggregations(_ref8) {
  var _ref8$onValueChange = _ref8.onValueChange,
      onValueChange = _ref8$onValueChange === void 0 ? function () {} : _ref8$onValueChange,
      setSQON = _ref8.setSQON,
      sqon = _ref8.sqon,
      projectId = _ref8.projectId,
      graphqlField = _ref8.graphqlField,
      _ref8$className = _ref8.className,
      className = _ref8$className === void 0 ? '' : _ref8$className,
      style = _ref8.style,
      api = _ref8.api,
      _ref8$Wrapper = _ref8.Wrapper,
      Wrapper = _ref8$Wrapper === void 0 ? BaseWrapper : _ref8$Wrapper,
      containerRef = _ref8.containerRef,
      _ref8$componentProps = _ref8.componentProps,
      componentProps = _ref8$componentProps === void 0 ? {
    getTermAggProps: function getTermAggProps() {
      return {};
    },
    getRangeAggProps: function getRangeAggProps() {
      return {};
    },
    getBooleanAggProps: function getBooleanAggProps() {
      return {};
    },
    getDatesAggProps: function getDatesAggProps() {
      return {};
    }
  } : _ref8$componentProps;
  return _react.default.createElement(Wrapper, {
    style: style,
    className: className
  }, _react.default.createElement(_Aggs.AggsState, {
    api: api,
    projectId: projectId,
    graphqlField: graphqlField,
    render: function render(aggsState) {
      var aggs = aggsState.aggs.filter(function (x) {
        return x.show;
      });
      return _react.default.createElement(AggregationsList, {
        onValueChange: onValueChange,
        setSQON: setSQON,
        style: style,
        Wrapper: Wrapper,
        containerRef: containerRef,
        componentProps: componentProps,
        api: api,
        debounceTime: 300,
        projectId: projectId,
        graphqlField: graphqlField,
        sqon: sqon,
        aggs: aggs
      });
    }
  }));
};

var _default = Aggregations;
exports.default = _default;