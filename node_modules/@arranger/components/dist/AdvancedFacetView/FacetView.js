"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _lodash = require("lodash");

var _aggComponentsMap = _interopRequireDefault(require("../Aggs/aggComponentsMap"));

var _TextHighlight = _interopRequireDefault(require("../TextHighlight"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var serializeToDomId = function serializeToDomId(path) {
  return path.split('.').join('__');
};

var flattenDisplayTreeData = function flattenDisplayTreeData(displayTreeData) {
  return displayTreeData.reduce(function (acc, node) {
    return [].concat(_toConsumableArray(acc), _toConsumableArray(node.children ? flattenDisplayTreeData(node.children) : [node]));
  }, []);
};

var FacetView =
/*#__PURE__*/
function (_React$Component) {
  _inherits(FacetView, _React$Component);

  function FacetView() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, FacetView);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FacetView)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      focusedPath: null
    });

    _defineProperty(_assertThisInitialized(_this), "scrollToPath", function (_ref) {
      var path = _ref.path,
          _ref$behavior = _ref.behavior,
          behavior = _ref$behavior === void 0 ? 'smooth' : _ref$behavior,
          _ref$block = _ref.block,
          block = _ref$block === void 0 ? 'start' : _ref$block;
      var targetElementId = serializeToDomId(path);

      var targetElement = _this.root.querySelector("#".concat(targetElementId));

      if (targetElement) {
        targetElement.scrollIntoView({
          behavior: behavior,
          block: block
        });
      }
    });

    return _this;
  }

  _createClass(FacetView, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(_ref2) {
      var lastSqon = _ref2.sqon;
      var focusedPath = this.state.focusedPath;
      var sqon = this.props.sqon;

      if (!(0, _lodash.isEqual)(lastSqon, sqon) && focusedPath) {
        this.scrollToPath({
          path: focusedPath,
          block: 'start',
          behavior: 'smooth'
        });
        this.setState({
          focusedPath: null
        });
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      // performance optimization
      return !(0, _lodash.isEqual)(nextProps, this.props);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          aggregations = _this$props.aggregations,
          displayTreeData = _this$props.displayTreeData,
          _onValueChange = _this$props.onValueChange,
          _this$props$sqon = _this$props.sqon,
          sqon = _this$props$sqon === void 0 ? null : _this$props$sqon,
          extendedMapping = _this$props.extendedMapping,
          searchString = _this$props.searchString,
          onTermSelected = _this$props.onTermSelected;
      return _react.default.createElement("div", {
        className: "facetView",
        ref: function ref(el) {
          return _this2.root = el;
        }
      }, flattenDisplayTreeData(displayTreeData).map(function (_ref3) {
        var _aggComponentsMap$typ;

        var path = _ref3.path;
        var metaData = extendedMapping.find(function (_ref4) {
          var field = _ref4.field;
          return field === path;
        });

        var _ref5 = metaData || {},
            type = _ref5.type;

        var paths = path.split('.').reduce(function (acc, node, i, paths) {
          return [].concat(_toConsumableArray(acc), [[].concat(_toConsumableArray(paths.slice(0, i)), [node]).join('.')]);
        }, []);
        var pathDisplayNames = paths.map(function (path) {
          var _extendedMapping$find;

          return (_extendedMapping$find = extendedMapping.find(function (_ref6) {
            var field = _ref6.field;
            return field === path;
          })) === null || _extendedMapping$find === void 0 ? void 0 : _extendedMapping$find.displayName;
        });
        var agg = aggregations[path];
        return (_aggComponentsMap$typ = _aggComponentsMap.default[type]) === null || _aggComponentsMap$typ === void 0 ? void 0 : _aggComponentsMap$typ.call(_aggComponentsMap.default, _objectSpread({}, metaData, {}, agg, {}, type === 'keyword' ? function () {
          var columns = 4;
          var maxTerms = columns * 2;
          return {
            maxTerms: maxTerms,
            constructBucketItemClassName: function constructBucketItemClassName(_ref7) {
              var bucket = _ref7.bucket,
                  showingBuckets = _ref7.showingBuckets,
                  i = _ref7.i,
                  showingMore = _ref7.showingMore;
              return "row_".concat(Math.floor(i / columns), " col_").concat(i % columns, " ").concat(Math.floor(i / columns) === Math.floor((showingBuckets.length - 1) / columns) ? 'last_row' : '', " ").concat(showingBuckets.length <= columns ? 'only_row' : '');
            }
          };
        }() : {}, {
          key: path,
          field: path,
          getRangeAggProps: function getRangeAggProps() {
            return {
              step: metaData.rangeStep
            };
          },
          onValueChange: function onValueChange(_ref8) {
            var sqon = _ref8.sqon,
                value = _ref8.value;

            _this2.setState({
              focusedPath: path
            }, function () {
              _onValueChange({
                sqon: sqon,
                value: value
              });

              onTermSelected === null || onTermSelected === void 0 ? void 0 : onTermSelected(value);
            });
          },
          highlightText: searchString,
          sqon: sqon,
          facetView: true,
          WrapperComponent: function WrapperComponent(_ref9) {
            var displayName = _ref9.displayName,
                collapsible = _ref9.collapsible,
                children = _ref9.children;
            return _react.default.createElement("div", {
              id: serializeToDomId(path),
              className: "facetContainer"
            }, _react.default.createElement("div", {
              className: "header"
            }, _react.default.createElement("div", {
              className: "title"
            }, _react.default.createElement(_TextHighlight.default, {
              content: displayName,
              highlightText: searchString
            })), _react.default.createElement("div", {
              className: "breadscrumbs"
            }, pathDisplayNames.slice(0, -1).map(function (pathName, index, arr) {
              return _react.default.createElement("span", {
                key: index,
                className: "breadscrumb-item"
              }, pathName);
            }))), _react.default.createElement("div", {
              className: "content"
            }, children));
          }
        }));
      }));
    }
  }]);

  return FacetView;
}(_react.default.Component);

exports.default = FacetView;