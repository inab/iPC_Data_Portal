"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.generateNextSQON = void 0;

var _react = _interopRequireDefault(require("react"));

var _search = _interopRequireDefault(require("react-icons/lib/fa/search"));

var _Input = _interopRequireDefault(require("../Input"));

var _utils = require("../SQONView/utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var generateNextSQON = function generateNextSQON(value) {
  return function (_ref) {
    var sqon = _ref.sqon,
        fields = _ref.fields,
        entity = _ref.entity;
    return (0, _utils.replaceFilterSQON)({
      op: 'and',
      content: [{
        op: 'filter',
        content: _objectSpread({
          fields: fields,
          value: value
        }, entity && {
          entity: entity
        })
      }]
    }, sqon);
  };
};

exports.generateNextSQON = generateNextSQON;

var TextFilter = function TextFilter(_ref2) {
  var value = _ref2.value,
      _onChange = _ref2.onChange,
      _ref2$Icon = _ref2.Icon,
      Icon = _ref2$Icon === void 0 ? _search.default : _ref2$Icon,
      _ref2$placeholder = _ref2.placeholder,
      placeholder = _ref2$placeholder === void 0 ? 'Filter' : _ref2$placeholder,
      _ref2$InputComponent = _ref2.InputComponent,
      InputComponent = _ref2$InputComponent === void 0 ? _Input.default : _ref2$InputComponent,
      props = _objectWithoutProperties(_ref2, ["value", "onChange", "Icon", "placeholder", "InputComponent"]);

  return _react.default.createElement(InputComponent, _extends({
    icon: _react.default.createElement(Icon, null),
    type: "text",
    placeholder: placeholder,
    value: value,
    onChange: function onChange(e) {
      var value = e.target.value;

      _onChange({
        value: value,
        generateNextSQON: generateNextSQON(value)
      });
    },
    "aria-label": "Data filter"
  }, props));
};

var _default = TextFilter;
exports.default = _default;