"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.RangeFilterUi = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactComponentComponent = _interopRequireDefault(require("react-component-component"));

var _lodash = require("lodash");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _convertUnits = _interopRequireDefault(require("convert-units"));

require("./FilterContainerStyle.css");

var _utils = require("../utils");

var _common = require("./common");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SUPPORTED_CONVERSIONS = {
  time: ['d', 'month', 'year'],
  digital: ['GB', 'B']
};
var UNITS_DISPLAY_NAMES = {
  d: 'day'
};

var toUnitDisplayName = function toUnitDisplayName(unit) {
  return UNITS_DISPLAY_NAMES[unit] || unit;
};

var supportedConversionFromUnit = function supportedConversionFromUnit(unit) {
  return unit ? SUPPORTED_CONVERSIONS[(0, _convertUnits.default)().describe(unit).measure] : null;
};

var normalizeNumericFieldOp = function normalizeNumericFieldOp(fieldOp) {
  return _objectSpread({}, fieldOp, {
    content: _objectSpread({}, fieldOp.content, {
      value: Array.isArray(fieldOp.content.value) ? [(0, _lodash.min)(fieldOp.content.value), (0, _lodash.max)(fieldOp.content.value)] : [fieldOp.content.value]
    })
  });
};

var convertUnit = function convertUnit(sourceUnit, targetUnit) {
  return function (num) {
    return sourceUnit && targetUnit ? (0, _convertUnits.default)(num).from(sourceUnit).to(targetUnit) : num;
  };
};

var RangeFilterUi = function RangeFilterUi(props) {
  var _props$field = props.field,
      fieldName = _props$field === void 0 ? null : _props$field,
      _props$sqonPath = props.sqonPath,
      sqonPath = _props$sqonPath === void 0 ? [] : _props$sqonPath,
      _props$initialSqon = props.initialSqon,
      initialSqon = _props$initialSqon === void 0 ? null : _props$initialSqon,
      _props$onSubmit = props.onSubmit,
      onSubmit = _props$onSubmit === void 0 ? function (sqon) {} : _props$onSubmit,
      _props$onCancel = props.onCancel,
      onCancel = _props$onCancel === void 0 ? function () {} : _props$onCancel,
      _props$fieldDisplayNa = props.fieldDisplayNameMap,
      fieldDisplayNameMap = _props$fieldDisplayNa === void 0 ? {} : _props$fieldDisplayNa,
      _props$opDisplayNameM = props.opDisplayNameMap,
      opDisplayNameMap = _props$opDisplayNameM === void 0 ? _utils.FIELD_OP_DISPLAY_NAME : _props$opDisplayNameM,
      _props$ContainerCompo = props.ContainerComponent,
      ContainerComponent = _props$ContainerCompo === void 0 ? _common.FilterContainer : _props$ContainerCompo,
      _props$InputComponent = props.InputComponent,
      InputComponent = _props$InputComponent === void 0 ? function (props) {
    return _react.default.createElement("input", _extends({}, props, {
      className: "rangeFilterInput ".concat(props.className || '')
    }));
  } : _props$InputComponent,
      _props$unit = props.unit,
      originalUnit = _props$unit === void 0 ? null : _props$unit;

  var initialFieldOp = function () {
    var fieldOp = (0, _utils.getOperationAtPath)(sqonPath)(initialSqon);
    return fieldOp ? normalizeNumericFieldOp(fieldOp) : {
      op: _utils.BETWEEN_OP,
      content: {
        value: [],
        field: fieldName || fieldOp.content.field
      }
    };
  }();

  var field = fieldName || initialFieldOp.content.field;
  var initialState = {
    selectedOperation: initialFieldOp.op,
    minValue: (0, _lodash.min)(initialFieldOp.content.value),
    maxValue: (0, _lodash.max)(initialFieldOp.content.value),
    selectedUnit: originalUnit
  };

  var onSqonSubmit = function onSqonSubmit(s) {
    return function () {
      var op = s.state.selectedOperation;
      var toOriginalUnit = convertUnit(s.state.selectedUnit, originalUnit);
      var min = toOriginalUnit(s.state.minValue);
      var max = toOriginalUnit(s.state.maxValue);
      var value = [_utils.GTE_OP, _utils.GT_OP].includes(op) ? [min] : [_utils.LTE_OP, _utils.LT_OP].includes(op) ? [max] : [min, max];
      var sqonToSubmit = {
        op: op,
        content: {
          field: field,
          value: value
        }
      };
      onSubmit((0, _utils.setSqonAtPath)(sqonPath, sqonToSubmit)(initialSqon));
    };
  };

  var onOptionTypeChange = function onOptionTypeChange(s) {
    return function (e) {
      s.setState({
        selectedOperation: e.target.value
      });
    };
  };

  var onMinimumChange = function onMinimumChange(s) {
    return function (e) {
      s.setState({
        minValue: e.target.value
      });
    };
  };

  var onMaximumChange = function onMaximumChange(s) {
    return function (e) {
      s.setState({
        maxValue: e.target.value
      });
    };
  };

  var onClearClick = function onClearClick(s) {
    return function (e) {
      s.setState({
        maxValue: '',
        minValue: ''
      });
    };
  };

  var unitOptions = supportedConversionFromUnit(originalUnit) || [];

  var onUnitOptionSelect = function onUnitOptionSelect(s) {
    return function (e) {
      s.setState({
        selectedUnit: e.target.value
      });
    };
  };

  var isMinimumDisabled = function isMinimumDisabled(s) {
    return [_utils.LTE_OP, _utils.LT_OP].includes(s.state.selectedOperation);
  };

  var isMaximumDisabled = function isMaximumDisabled(s) {
    return [_utils.GTE_OP, _utils.GT_OP].includes(s.state.selectedOperation);
  };

  var StyledInputComponent = function StyledInputComponent(props) {
    return _react.default.createElement(InputComponent, _extends({}, props, {
      className: "rangeFilterInput ".concat(props.className || '')
    }));
  };

  return _react.default.createElement(_reactComponentComponent.default, {
    initialState: initialState
  }, function (s) {
    return _react.default.createElement(ContainerComponent, {
      onSubmit: onSqonSubmit(s),
      onCancel: onCancel
    }, _react.default.createElement("div", {
      className: "filterContent"
    }, _react.default.createElement("div", {
      className: "contentSection"
    }, _react.default.createElement("span", null, fieldDisplayNameMap[field] || field), " is", ' ', _react.default.createElement("select", {
      onChange: onOptionTypeChange(s)
    }, _utils.RANGE_OPS.map(function (option) {
      return _react.default.createElement("option", {
        key: option,
        value: option,
        selected: s.state.selectedOperation === option
      }, opDisplayNameMap[option]);
    }))), _react.default.createElement("div", {
      className: "contentSection"
    }, _react.default.createElement("span", {
      onClick: onClearClick(s),
      className: "aggsFilterAction"
    }, "Clear")), _react.default.createElement("form", {
      className: "contentSection"
    }, unitOptions.map(function (unit) {
      return _react.default.createElement("label", {
        className: "unitOptionLabel",
        key: unit
      }, _react.default.createElement("input", {
        type: "radio",
        name: unit,
        value: unit,
        checked: s.state.selectedUnit === unit,
        onChange: onUnitOptionSelect(s)
      }), ' ', toUnitDisplayName(unit));
    })), _react.default.createElement("div", {
      className: "contentSection"
    }, _react.default.createElement("div", {
      className: "rangeInputContainer"
    }, _react.default.createElement("div", {
      className: "inputField"
    }, _react.default.createElement("span", {
      className: "inputLabel ".concat(isMinimumDisabled(s) ? 'disabled' : '')
    }, "From:"), _react.default.createElement(StyledInputComponent, {
      disabled: isMinimumDisabled(s),
      value: s.state.minValue,
      type: 'number',
      onChange: onMinimumChange(s)
    })), _react.default.createElement("div", {
      className: "inputField"
    }, _react.default.createElement("span", {
      className: "inputLabel ".concat(isMaximumDisabled(s) ? 'disabled' : '')
    }, "To:"), _react.default.createElement(StyledInputComponent, {
      disabled: isMaximumDisabled(s),
      value: s.state.maxValue,
      type: 'number',
      onChange: onMaximumChange(s)
    }))))));
  });
};

exports.RangeFilterUi = RangeFilterUi;

var RangeFilter = function RangeFilter(_ref) {
  var _ref$sqonPath = _ref.sqonPath,
      sqonPath = _ref$sqonPath === void 0 ? [] : _ref$sqonPath,
      _ref$initialSqon = _ref.initialSqon,
      initialSqon = _ref$initialSqon === void 0 ? null : _ref$initialSqon,
      _ref$onSubmit = _ref.onSubmit,
      onSubmit = _ref$onSubmit === void 0 ? function (sqon) {} : _ref$onSubmit,
      _ref$onCancel = _ref.onCancel,
      onCancel = _ref$onCancel === void 0 ? function () {} : _ref$onCancel,
      _ref$fieldDisplayName = _ref.fieldDisplayNameMap,
      fieldDisplayNameMap = _ref$fieldDisplayName === void 0 ? {} : _ref$fieldDisplayName,
      _ref$opDisplayNameMap = _ref.opDisplayNameMap,
      opDisplayNameMap = _ref$opDisplayNameMap === void 0 ? _utils.FIELD_OP_DISPLAY_NAME : _ref$opDisplayNameMap,
      _ref$ContainerCompone = _ref.ContainerComponent,
      ContainerComponent = _ref$ContainerCompone === void 0 ? _common.FilterContainer : _ref$ContainerCompone,
      _ref$InputComponent = _ref.InputComponent,
      InputComponent = _ref$InputComponent === void 0 ? function (props) {
    return _react.default.createElement("input", props);
  } : _ref$InputComponent,
      _ref$unit = _ref.unit,
      unit = _ref$unit === void 0 ? null : _ref$unit,
      field = _ref.field;
  return _react.default.createElement(RangeFilterUi, {
    field: field,
    ContainerComponent: ContainerComponent,
    sqonPath: sqonPath,
    initialSqon: initialSqon,
    onSubmit: onSubmit,
    onCancel: onCancel,
    fieldDisplayNameMap: fieldDisplayNameMap,
    opDisplayNameMap: opDisplayNameMap,
    InputComponent: InputComponent,
    unit: unit
  });
};

RangeFilter.prototype = {
  field: _propTypes.default.string,
  sqonPath: _propTypes.default.arrayOf(_propTypes.default.number),
  initialSqon: _propTypes.default.object,
  onSubmit: _propTypes.default.func,
  onCancel: _propTypes.default.func,
  fieldDisplayNameMap: _propTypes.default.objectOf(_propTypes.default.string),
  opDisplayNameMap: _propTypes.default.objectOf(_propTypes.default.string),
  ContainerComponent: _propTypes.default.func,
  InputComponent: _propTypes.default.func,
  unit: _propTypes.default.string
};
var _default = RangeFilter;
exports.default = _default;