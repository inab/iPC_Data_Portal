"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactComponentComponent = _interopRequireDefault(require("react-component-component"));

var _chevronDown = _interopRequireDefault(require("react-icons/lib/fa/chevron-down"));

var _chevronUp = _interopRequireDefault(require("react-icons/lib/fa/chevron-up"));

var _utils = require("../utils");

var _index = _interopRequireDefault(require("../filterComponents/index"));

var _ClickAwayListener = _interopRequireDefault(require("../../utils/ClickAwayListener.js"));

var _common = require("./common");

var _config = require("../../utils/config");

var _api = _interopRequireDefault(require("../../utils/api"));

require("react-tippy/dist/tippy.css");

var _reactTippy = require("react-tippy");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function _default(props) {
  var _props$onSqonChange = props.onSqonChange,
      onSqonChange = _props$onSqonChange === void 0 ? function (fullSqon) {} : _props$onSqonChange,
      _props$onContentRemov = props.onContentRemove,
      onContentRemove = _props$onContentRemov === void 0 ? function () {} : _props$onContentRemov,
      fullSyntheticSqon = props.fullSyntheticSqon,
      _props$sqonPath = props.sqonPath,
      sqonPath = _props$sqonPath === void 0 ? [] : _props$sqonPath,
      _props$opDisplayNameM = props.opDisplayNameMap,
      opDisplayNameMap = _props$opDisplayNameM === void 0 ? _utils.FIELD_OP_DISPLAY_NAME : _props$opDisplayNameM,
      _props$arrangerProjec = props.arrangerProjectId,
      arrangerProjectId = _props$arrangerProjec === void 0 ? _config.PROJECT_ID : _props$arrangerProjec,
      arrangerProjectIndex = props.arrangerProjectIndex,
      _props$FieldOpModifie = props.FieldOpModifierContainer,
      FieldOpModifierContainer = _props$FieldOpModifie === void 0 ? undefined : _props$FieldOpModifie,
      _props$api = props.api,
      api = _props$api === void 0 ? _api.default : _props$api,
      getActiveExecutableSqon = props.getActiveExecutableSqon;
  var fieldOpObj = (0, _utils.getOperationAtPath)(sqonPath)(fullSyntheticSqon);
  var op = fieldOpObj.op,
      _fieldOpObj$content = fieldOpObj.content,
      field = _fieldOpObj$content.field,
      value = _fieldOpObj$content.value;
  var initialState = {
    isOpen: false
  };

  var onClickAway = function onClickAway(s) {
    return function () {
      s.setState({
        isOpen: false
      });
    };
  };

  var toggleDropdown = function toggleDropdown(s) {
    return function () {
      return s.setState({
        isOpen: !s.state.isOpen
      });
    };
  };

  var onRemoveClick = function onRemoveClick() {
    onContentRemove(fieldOpObj);
  };

  var onNewSqonSubmitted = function onNewSqonSubmitted(s) {
    return function (newSqon) {
      onSqonChange(newSqon);
      toggleDropdown(s)();
    };
  };

  return _react.default.createElement(_reactComponentComponent.default, {
    initialState: initialState
  }, function (s) {
    return _react.default.createElement(_utils.DisplayNameMapContext.Consumer, null, function () {
      var fieldDisplayNameMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return _react.default.createElement("span", {
        className: "fieldOp pill"
      }, _react.default.createElement("span", {
        className: 'opContainer'
      }, _react.default.createElement("span", {
        className: "fieldName"
      }, fieldDisplayNameMap[field] || field, ' '), _react.default.createElement("span", {
        className: "opName"
      }, " is ".concat(Array.isArray(value) && value.length > 1 || _utils.RANGE_OPS.includes(op) ? opDisplayNameMap[op] : '', " "))), _react.default.createElement(_ClickAwayListener.default, {
        className: 'selectionContainer',
        handler: onClickAway(s)
      }, _react.default.createElement("span", {
        className: 'valueDisplay',
        onClick: toggleDropdown(s)
      }, _react.default.createElement(_reactTippy.Tooltip, {
        position: "bottom",
        html: Array.isArray(value) ? value.join(', ') : value
      }, Array.isArray(value) ? value.join(', ') : value, ' ')), _react.default.createElement("span", {
        onClick: toggleDropdown(s)
      }, _react.default.createElement("span", {
        style: {
          pointerEvents: 'none'
        }
      }, s.state.isOpen ? _react.default.createElement(_chevronUp.default, null) : _react.default.createElement(_chevronDown.default, null))), s.state.isOpen && _react.default.createElement("div", {
        className: "fieldFilterContainer"
      }, _react.default.createElement(_index.default, {
        arrangerProjectId: arrangerProjectId,
        arrangerProjectIndex: arrangerProjectIndex,
        field: field,
        sqonPath: sqonPath,
        initialSqon: fullSyntheticSqon,
        onSubmit: onNewSqonSubmitted(s),
        onCancel: toggleDropdown(s),
        fieldDisplayNameMap: fieldDisplayNameMap,
        opDisplayNameMap: opDisplayNameMap,
        ContainerComponent: FieldOpModifierContainer,
        getExecutableSqon: getActiveExecutableSqon,
        api: api
      }))), _react.default.createElement(_common.PillRemoveButton, {
        onClick: onRemoveClick
      }));
    });
  });
};

exports.default = _default;