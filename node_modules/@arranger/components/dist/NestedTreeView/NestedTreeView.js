"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _emotion = require("emotion");

var _ReactTreeView = _interopRequireDefault(require("./ReactTreeView"));

var _TextHighlight = _interopRequireDefault(require("../TextHighlight"));

require("./style.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var NestedTreeView = function NestedTreeView(_ref) {
  var dataSource = _ref.dataSource,
      _ref$depth = _ref.depth,
      depth = _ref$depth === void 0 ? 0 : _ref$depth,
      _ref$indentationPx = _ref.indentationPx,
      indentationPx = _ref$indentationPx === void 0 ? 20 : _ref$indentationPx,
      _ref$labelPadding = _ref.labelPadding,
      labelPadding = _ref$labelPadding === void 0 ? 15 : _ref$labelPadding,
      _ref$onLeafSelect = _ref.onLeafSelect,
      onLeafSelect = _ref$onLeafSelect === void 0 ? function () {} : _ref$onLeafSelect,
      _ref$selectedPath = _ref.selectedPath,
      selectedPath = _ref$selectedPath === void 0 ? '' : _ref$selectedPath,
      _ref$searchString = _ref.searchString,
      searchString = _ref$searchString === void 0 ? null : _ref$searchString,
      _ref$defaultCollapsed = _ref.defaultCollapsed,
      defaultCollapsed = _ref$defaultCollapsed === void 0 ? function (_ref2) {
    var depth = _ref2.depth;
    return true;
  } : _ref$defaultCollapsed,
      _ref$shouldCollapse = _ref.shouldCollapse,
      shouldCollapse = _ref$shouldCollapse === void 0 ? function () {
    return undefined;
  } : _ref$shouldCollapse;
  return dataSource.map(function (_ref3, i) {
    var title = _ref3.title,
        id = _ref3.id,
        children = _ref3.children,
        path = _ref3.path;
    var selectedClass = selectedPath === path ? 'selected' : '';
    var depthClass = "depth_".concat(depth);
    return children ? _react["default"].createElement(_ReactTreeView["default"], {
      key: path,
      nodeLabel: function nodeLabel(_ref4) {
        var open = _ref4.open;
        return _react["default"].createElement("div", {
          className: "label ".concat(
          /*#__PURE__*/
          (0, _emotion.css)("display:inline-block;cursor:pointer;padding-left:", labelPadding, "px;")),
          onClick: function onClick(e) {
            onLeafSelect(id || title);
            open();
          }
        }, _react["default"].createElement(_TextHighlight["default"], {
          content: title,
          highlightText: searchString
        }));
      },
      defaultCollapsed: defaultCollapsed({
        depth: depth,
        title: title,
        id: id,
        children: children,
        path: path
      }),
      collapsed: shouldCollapse({
        depth: depth,
        title: title,
        id: id,
        children: children,
        path: path
      }),
      itemClassName: "NestedTreeViewNode nested ".concat(depthClass, " ").concat(selectedClass, " ").concat(
      /*#__PURE__*/
      (0, _emotion.css)("padding-left:", indentationPx * depth, "px;"))
    }, _react["default"].createElement(NestedTreeView, {
      onLeafSelect: onLeafSelect,
      selectedPath: selectedPath,
      dataSource: children,
      depth: depth + 1,
      searchString: searchString,
      defaultCollapsed: defaultCollapsed,
      shouldCollapse: shouldCollapse
    })) : _react["default"].createElement("div", {
      onClick: function onClick() {
        return onLeafSelect(path);
      },
      key: path,
      className: "NestedTreeViewNode tree-view_children leaf\n          ".concat(depthClass, "\n          ").concat(selectedClass, "\n        ")
    }, _react["default"].createElement("div", {
      className:
      /*#__PURE__*/

      /*#__PURE__*/
      (0, _emotion.css)("padding-left:", indentationPx * depth + labelPadding, "px;")
    }, _react["default"].createElement(_TextHighlight["default"], {
      content: title,
      highlightText: searchString
    })));
  });
};

var _default = NestedTreeView;
exports["default"] = _default;