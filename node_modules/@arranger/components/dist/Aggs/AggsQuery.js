"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _lodash = require("lodash");

var _Query = _interopRequireDefault(require("../Query"));

var _api = _interopRequireDefault(require("../utils/api"));

var _AggsState = require("./AggsState");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var _default = function _default(_ref) {
  var _ref$index = _ref.index,
      index = _ref$index === void 0 ? '' : _ref$index,
      _ref$aggs = _ref.aggs,
      aggs = _ref$aggs === void 0 ? [] : _ref$aggs,
      _ref$sqon = _ref.sqon,
      sqon = _ref$sqon === void 0 ? null : _ref$sqon,
      _ref$api = _ref.api,
      api = _ref$api === void 0 ? _api.default : _ref$api,
      props = _objectWithoutProperties(_ref, ["index", "aggs", "sqon", "api"]);

  return !index || !aggs.length ? '' : _react.default.createElement(_Query.default, _extends({
    renderError: true,
    name: "".concat((0, _lodash.capitalize)(index), "AggregationsQuery"),
    variables: {
      fields: aggs.map(function (x) {
        return x.field.replace(/__/g, '.');
      }),
      sqon: sqon
    },
    query: "\n        query ".concat((0, _lodash.capitalize)(index), "AggregationsQuery(\n          $fields: [String]\n          $sqon: JSON\n        ) {\n          ").concat(index, " {\n            extended(fields: $fields)\n            aggregations (\n              aggregations_filter_themselves: false\n              filters: $sqon\n            ){\n              ").concat(aggs.map(function (x) {
      return x.query || (0, _AggsState.queryFromAgg)(x);
    }), "\n            }\n          }\n        }\n      ")
  }, _objectSpread({
    api: api
  }, props)));
};

exports.default = _default;