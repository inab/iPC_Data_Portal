"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _emotion = require("emotion");

var _react = _interopRequireWildcard(require("react"));

var _reactInputRange = _interopRequireDefault(require("react-input-range"));

var _convertUnits = _interopRequireDefault(require("convert-units"));

var _lodash = _interopRequireDefault(require("lodash"));

var _utils = require("../SQONView/utils");

var _AggsWrapper = _interopRequireDefault(require("./AggsWrapper"));

var _formatNumber = _interopRequireDefault(require("../utils/formatNumber"));

require("react-input-range/lib/css/index.css");

require("./AggregationCard.css");

require("./RangeAgg.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var SUPPORTED_CONVERSIONS = {
  time: ['d', 'year'],
  digital: ['GB']
};

var supportedConversionFromUnit = function supportedConversionFromUnit(unit) {
  return unit ? SUPPORTED_CONVERSIONS[(0, _convertUnits.default)().describe(unit).measure] : null;
};

var round = function round(x) {
  return Math.round(x * 100) / 100;
};

var RangeLabel = function RangeLabel(_ref) {
  var children = _ref.children,
      isTop = _ref.isTop,
      isLeft = _ref.isLeft,
      props = _objectWithoutProperties(_ref, ["children", "isTop", "isLeft"]);

  return _react.default.createElement("div", _extends({}, props, {
    className:
    /*#__PURE__*/
    (0, _emotion.css)("position:absolute;", isLeft ? "left" : "right", ":0;top:", isTop ? "-" : "", "1.2rem;")
  }), children);
};

var RangeAgg =
/*#__PURE__*/
function (_Component) {
  _inherits(RangeAgg, _Component);

  function RangeAgg(props) {
    var _supportedConversionF;

    var _this;

    _classCallCheck(this, RangeAgg);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(RangeAgg).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "onChangeComplete", function () {
      var _this$props = _this.props,
          field = _this$props.field,
          handleChange = _this$props.handleChange,
          displayName = _this$props.displayName;
      var _this$state = _this.state,
          value = _this$state.value,
          displayUnit = _this$state.displayUnit;

      var _map = [value.min, value.max].map(function (x) {
        return round(x);
      }),
          _map2 = _slicedToArray(_map, 2),
          min = _map2[0],
          max = _map2[1];

      handleChange === null || handleChange === void 0 ? void 0 : handleChange({
        field: {
          displayName: displayName,
          displayUnit: displayUnit,
          field: field
        },
        value: value,
        min: min,
        max: max,
        generateNextSQON: function generateNextSQON(sqon) {
          return (0, _utils.replaceSQON)({
            op: 'and',
            content: [{
              op: '>=',
              content: {
                field: field,
                value: min
              }
            }, {
              op: '<=',
              content: {
                field: field,
                value: max
              }
            }]
          }, sqon);
        }
      });
    });

    _defineProperty(_assertThisInitialized(_this), "setValue", function (_ref2) {
      var min = _ref2.min,
          max = _ref2.max;

      if (round(min) >= round(_this.state.min) && round(max) <= round(_this.state.max)) {
        _this.setState({
          value: {
            min: round(min),
            max: round(max)
          }
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "formatRangeLabel", function (value, type) {
      var formatLabel = _this.props.formatLabel;
      if (formatLabel) return formatLabel(value, type);
      var _this$state2 = _this.state,
          unit = _this$state2.unit,
          displayUnit = _this$state2.displayUnit;
      return (0, _formatNumber.default)(unit && displayUnit ? Math.round((0, _convertUnits.default)(value).from(unit).to(displayUnit) * 100) / 100 : value);
    });

    var _props$stats = props.stats,
        _min = _props$stats.min,
        _max = _props$stats.max,
        _unit = props.unit,
        _value = props.value;
    _this.state = {
      min: _min,
      max: _max,
      unit: _unit,
      displayUnit: (_supportedConversionF = supportedConversionFromUnit(_unit)) === null || _supportedConversionF === void 0 ? void 0 : _supportedConversionF[0],
      value: {
        min: !_lodash.default.isNil(_value) ? _value.min || _min : _min,
        max: !_lodash.default.isNil(_value) ? _value.max || _max : _max
      }
    };
    return _this;
  }

  _createClass(RangeAgg, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      var _nextProps$stats = nextProps.stats,
          min = _nextProps$stats.min,
          max = _nextProps$stats.max,
          externalVal = nextProps.value;
      var value = this.state.value;
      this.setState({
        min: min,
        max: max,
        value: {
          min: Math.max((externalVal === null || externalVal === void 0 ? void 0 : externalVal.min) || value.min, min),
          max: Math.min((externalVal === null || externalVal === void 0 ? void 0 : externalVal.max) || value.max, max)
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _supportedConversions,
          _supportedConversions2,
          _this2 = this;

      var _this$props2 = this.props,
          step = _this$props2.step,
          _this$props2$displayN = _this$props2.displayName,
          displayName = _this$props2$displayN === void 0 ? 'Unnamed Field' : _this$props2$displayN,
          _this$props2$collapsi = _this$props2.collapsible,
          collapsible = _this$props2$collapsi === void 0 ? true : _this$props2$collapsi,
          WrapperComponent = _this$props2.WrapperComponent;
      var _this$state3 = this.state,
          min = _this$state3.min,
          max = _this$state3.max,
          value = _this$state3.value,
          unit = _this$state3.unit,
          displayUnit = _this$state3.displayUnit;
      var supportedConversions = supportedConversionFromUnit(unit);
      return _react.default.createElement(_AggsWrapper.default, _extends({
        displayName: "".concat(displayName).concat(displayUnit ? " (".concat((0, _convertUnits.default)().describe(displayUnit).plural, ")") : "")
      }, {
        WrapperComponent: WrapperComponent,
        collapsible: collapsible
      }), [!_lodash.default.isNil(min), !_lodash.default.isNil(max)].every(Boolean) && _react.default.createElement("div", {
        className: "range-wrapper"
      }, _react.default.createElement("div", {
        className: "unit-wrapper"
      }, (supportedConversions === null || supportedConversions === void 0 ? void 0 : supportedConversions.length) > 1 && (supportedConversions === null || supportedConversions === void 0 ? void 0 : (_supportedConversions = supportedConversions.map(function (x) {
        return (0, _convertUnits.default)().describe(x);
      })) === null || _supportedConversions === void 0 ? void 0 : (_supportedConversions2 = _supportedConversions.map(function (x) {
        return _objectSpread({}, x, {
          active: x.abbr === displayUnit
        });
      })) === null || _supportedConversions2 === void 0 ? void 0 : _supportedConversions2.map(function (_ref3) {
        var abbr = _ref3.abbr,
            plural = _ref3.plural,
            active = _ref3.active;
        return _react.default.createElement("span", {
          key: abbr
        }, _react.default.createElement("input", {
          type: "radio",
          id: abbr,
          value: abbr,
          checked: active,
          onChange: function onChange(e) {
            return _this2.setState({
              displayUnit: e.target.value
            });
          }
        }), _react.default.createElement("label", {
          htmlFor: abbr
        }, plural));
      }))), _react.default.createElement("div", {
        className: "input-range-wrapper"
      }, _react.default.createElement(RangeLabel, {
        isTop: true,
        isLeft: true
      }, this.formatRangeLabel(value.min)), _react.default.createElement(RangeLabel, {
        isTop: true
      }, this.formatRangeLabel(value.max)), _react.default.createElement(_reactInputRange.default, {
        draggableTrack: true,
        step: step,
        minValue: min,
        maxValue: max,
        value: value,
        formatLabel: this.formatRangeLabel,
        onChange: function onChange(x) {
          return _this2.setValue(x);
        },
        onChangeComplete: this.onChangeComplete
      }), _react.default.createElement(RangeLabel, {
        isLeft: true
      }, this.formatRangeLabel(min)), _react.default.createElement(RangeLabel, null, this.formatRangeLabel(max)))));
    }
  }]);

  return RangeAgg;
}(_react.Component);

var _default = RangeAgg;
exports.default = _default;