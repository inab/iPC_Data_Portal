"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _Aggs = require("../Aggs");

var _utils = require("../SQONView/utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var composedTermAgg = function composedTermAgg(_ref) {
  var sqon = _ref.sqon,
      onValueChange = _ref.onValueChange,
      _ref$getTermAggProps = _ref.getTermAggProps,
      getTermAggProps = _ref$getTermAggProps === void 0 ? function () {
    return {};
  } : _ref$getTermAggProps,
      rest = _objectWithoutProperties(_ref, ["sqon", "onValueChange", "getTermAggProps"]);

  return _react["default"].createElement(_Aggs.TermAgg, _extends({
    handleValueClick: function handleValueClick(_ref2) {
      var generateNextSQON = _ref2.generateNextSQON,
          value = _ref2.value,
          field = _ref2.field;
      var nextSQON = generateNextSQON(sqon);
      var active = (0, _utils.fieldInCurrentSQON)({
        currentSQON: (nextSQON === null || nextSQON === void 0 ? void 0 : nextSQON.content) || [],
        field: field
      });
      onValueChange({
        sqon: nextSQON,
        value: {
          field: field,
          value: value,
          active: active
        }
      });
    },
    isActive: function isActive(d) {
      return (0, _utils.inCurrentSQON)({
        value: d.value,
        dotField: d.field,
        currentSQON: sqon
      });
    }
  }, _objectSpread({}, rest, {}, getTermAggProps())));
};

var composedRangeAgg = function composedRangeAgg(_ref3) {
  var sqon = _ref3.sqon,
      onValueChange = _ref3.onValueChange,
      field = _ref3.field,
      stats = _ref3.stats,
      _ref3$getRangeAggProp = _ref3.getRangeAggProps,
      getRangeAggProps = _ref3$getRangeAggProp === void 0 ? function () {
    return {};
  } : _ref3$getRangeAggProp,
      rest = _objectWithoutProperties(_ref3, ["sqon", "onValueChange", "field", "stats", "getRangeAggProps"]);

  return _react["default"].createElement(_Aggs.RangeAgg, _extends({
    value: {
      min: (0, _utils.currentFieldValue)({
        sqon: sqon,
        dotField: field,
        op: '>='
      }) || (stats === null || stats === void 0 ? void 0 : stats.min) || 0,
      max: (0, _utils.currentFieldValue)({
        sqon: sqon,
        dotField: field,
        op: '<='
      }) || (stats === null || stats === void 0 ? void 0 : stats.max) || 0
    },
    handleChange: function handleChange(_ref4) {
      var generateNextSQON = _ref4.generateNextSQON,
          _ref4$field = _ref4.field,
          displayName = _ref4$field.displayName,
          displayUnit = _ref4$field.displayUnit,
          field = _ref4$field.field,
          value = _ref4.value;
      var nextSQON = generateNextSQON(sqon);
      onValueChange({
        sqon: nextSQON,
        value: {
          field: "".concat(displayName, " (").concat(displayUnit, ")"),
          value: value,
          active: (0, _utils.fieldInCurrentSQON)({
            currentSQON: nextSQON.content,
            field: field
          })
        }
      });
    }
  }, _objectSpread({}, rest, {
    stats: stats,
    field: field
  }, getRangeAggProps())));
};

var composedBooleanAgg = function composedBooleanAgg(_ref5) {
  var sqon = _ref5.sqon,
      onValueChange = _ref5.onValueChange,
      componentProps = _ref5.componentProps,
      _ref5$getBooleanAggPr = _ref5.getBooleanAggProps,
      getBooleanAggProps = _ref5$getBooleanAggPr === void 0 ? function () {
    return {};
  } : _ref5$getBooleanAggPr,
      rest = _objectWithoutProperties(_ref5, ["sqon", "onValueChange", "componentProps", "getBooleanAggProps"]);

  return _react["default"].createElement(_Aggs.BooleanAgg, _extends({
    isActive: function isActive(d) {
      return (0, _utils.inCurrentSQON)({
        value: d.value,
        dotField: d.field,
        currentSQON: sqon
      });
    },
    handleValueClick: function handleValueClick(_ref6) {
      var generateNextSQON = _ref6.generateNextSQON,
          value = _ref6.value,
          field = _ref6.field;
      var nextSQON = generateNextSQON(sqon);
      onValueChange({
        sqon: nextSQON,
        value: {
          value: value,
          field: field,
          active: (0, _utils.fieldInCurrentSQON)({
            currentSQON: nextSQON ? nextSQON.content : [],
            field: field
          })
        }
      });
    }
  }, _objectSpread({}, rest, {}, getBooleanAggProps())));
};

var composedDatesAgg = function composedDatesAgg(_ref7) {
  var sqon = _ref7.sqon,
      onValueChange = _ref7.onValueChange,
      _ref7$getDatesAggProp = _ref7.getDatesAggProps,
      getDatesAggProps = _ref7$getDatesAggProp === void 0 ? function () {
    return {};
  } : _ref7$getDatesAggProp,
      rest = _objectWithoutProperties(_ref7, ["sqon", "onValueChange", "getDatesAggProps"]);

  return _react["default"].createElement(_Aggs.DatesAgg, _extends({
    handleDateChange: function handleDateChange() {
      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref8$generateNextSQO = _ref8.generateNextSQON,
          generateNextSQON = _ref8$generateNextSQO === void 0 ? function () {} : _ref8$generateNextSQO,
          field = _ref8.field,
          value = _ref8.value;

      var nextSQON = generateNextSQON(sqon);
      onValueChange({
        sqon: nextSQON,
        value: {
          field: field,
          value: value,
          active: (0, _utils.fieldInCurrentSQON)({
            currentSQON: nextSQON ? nextSQON.content : [],
            field: field
          })
        }
      });
    },
    getActiveValue: function getActiveValue(_ref9) {
      var op = _ref9.op,
          field = _ref9.field;
      return (0, _utils.currentFieldValue)({
        op: op,
        dotField: field,
        sqon: sqon
      });
    }
  }, _objectSpread({}, rest, {}, getDatesAggProps())));
};

var _default = {
  keyword: composedTermAgg,
  "long": composedRangeAgg,
  "float": composedRangeAgg,
  "boolean": composedBooleanAgg,
  date: composedDatesAgg,
  integer: composedRangeAgg
};
exports["default"] = _default;