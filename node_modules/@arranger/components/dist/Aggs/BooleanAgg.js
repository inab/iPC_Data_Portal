"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _AggsWrapper = _interopRequireDefault(require("./AggsWrapper.js"));

var _utils = require("../SQONView/utils");

require("./BooleanAgg.css");

var _TextHighlight = _interopRequireDefault(require("../TextHighlight"));

var _ToggleButton = _interopRequireDefault(require("../ToggleButton"));

var _formatNumber = _interopRequireDefault(require("../utils/formatNumber"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var _default = function _default(_ref) {
  var field = _ref.field,
      buckets = _ref.buckets,
      _ref$handleValueClick = _ref.handleValueClick,
      handleValueClick = _ref$handleValueClick === void 0 ? function () {} : _ref$handleValueClick,
      _ref$isActive = _ref.isActive,
      isActive = _ref$isActive === void 0 ? function () {
    return false;
  } : _ref$isActive,
      collapsible = _ref.collapsible,
      WrapperComponent = _ref.WrapperComponent,
      displayName = _ref.displayName,
      highlightText = _ref.highlightText,
      _ref$valueKeys = _ref.valueKeys,
      valueKeys = _ref$valueKeys === void 0 ? {
    "true": 'true',
    "false": 'false'
  } : _ref$valueKeys,
      _ref$defaultDisplayKe = _ref.defaultDisplayKeys,
      defaultDisplayKeys = _ref$defaultDisplayKe === void 0 ? {
    any: 'Any',
    "true": 'Yes',
    "false": 'No'
  } : _ref$defaultDisplayKe,
      _ref$displayValues = _ref.displayValues,
      extendedDisplayKeys = _ref$displayValues === void 0 ? {} : _ref$displayValues,
      _ref$displayKeys = _ref.displayKeys,
      displayKeys = _ref$displayKeys === void 0 ? Object.keys(defaultDisplayKeys).reduce(function (obj, x) {
    return _objectSpread({}, obj, _defineProperty({}, x, extendedDisplayKeys[x] || defaultDisplayKeys[x]));
  }, {}) : _ref$displayKeys,
      rest = _objectWithoutProperties(_ref, ["field", "buckets", "handleValueClick", "isActive", "collapsible", "WrapperComponent", "displayName", "highlightText", "valueKeys", "defaultDisplayKeys", "displayValues", "displayKeys"]);

  var trueBucket = buckets.find(function (_ref2) {
    var key_as_string = _ref2.key_as_string;
    return key_as_string === valueKeys["true"];
  });
  var falseBucket = buckets.find(function (_ref3) {
    var key_as_string = _ref3.key_as_string;
    return key_as_string === valueKeys["false"];
  });
  var missingKeyBucket = buckets.find(function (_ref4) {
    var key_as_string = _ref4.key_as_string;
    return !key_as_string;
  });
  var dotField = field.replace(/__/g, '.');
  var isTrueActive = isActive({
    value: valueKeys["true"],
    field: dotField
  });
  var isFalseActive = isActive({
    value: valueKeys["false"],
    field: dotField
  });
  var isTrueBucketDisabled = trueBucket === undefined || (trueBucket === null || trueBucket === void 0 ? void 0 : trueBucket.doc_count) <= 0;
  var isFalseBucketDisabled = falseBucket === undefined || (falseBucket === null || falseBucket === void 0 ? void 0 : falseBucket.doc_count) <= 0;

  var handleChange = function handleChange(isTrue, field) {
    if (isTrue !== undefined) {
      handleValueClick({
        bucket: isTrue ? trueBucket : falseBucket,
        value: isTrue ? trueBucket : falseBucket || missingKeyBucket,
        field: field,
        generateNextSQON: function generateNextSQON(sqon) {
          return (0, _utils.replaceSQON)({
            op: 'and',
            content: [{
              op: 'in',
              content: {
                field: dotField,
                value: [valueKeys[isTrue ? 'true' : 'false']]
              }
            }]
          }, sqon);
        }
      });
    } else {
      handleValueClick({
        value: 'Any',
        field: field,
        generateNextSQON: function generateNextSQON(sqon) {
          return (0, _utils.removeSQON)(dotField, sqon);
        }
      });
    }
  };

  var options = (displayKeys.any ? [{
    value: undefined,
    title: displayKeys.any
  }] : []).concat([{
    value: valueKeys["true"],
    disabled: isTrueBucketDisabled,
    title: _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_TextHighlight["default"], {
      content: displayKeys["true"],
      highlightText: highlightText
    }), _react["default"].createElement("span", {
      className: "bucket-count",
      style: {
        marginLeft: 2
      }
    }, (0, _formatNumber["default"])(isTrueBucketDisabled ? 0 : trueBucket.doc_count)))
  }, {
    value: valueKeys["false"],
    disabled: isFalseBucketDisabled,
    title: _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_TextHighlight["default"], {
      content: displayKeys["false"],
      highlightText: highlightText
    }), _react["default"].createElement("span", {
      className: "bucket-count",
      style: {
        marginLeft: 2
      }
    }, (0, _formatNumber["default"])(isFalseBucketDisabled ? 0 : falseBucket.doc_count)))
  }]);
  return _react["default"].createElement(_AggsWrapper["default"], {
    displayName: displayName,
    WrapperComponent: WrapperComponent,
    collapsible: collapsible
  }, _react["default"].createElement(_ToggleButton["default"], {
    value: isTrueActive ? valueKeys["true"] : isFalseActive ? valueKeys["false"] : undefined,
    options: options,
    onChange: function onChange(_ref5) {
      var value = _ref5.value;
      handleChange(value === valueKeys["true"] ? true : value === valueKeys["false"] ? false : undefined, dotField);
    }
  }));
};

exports["default"] = _default;