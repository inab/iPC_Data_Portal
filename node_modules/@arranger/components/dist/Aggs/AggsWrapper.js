"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactComponentComponent = _interopRequireDefault(require("react-component-component"));

var _emotion = require("emotion");

require("./AggregationCard.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function _default(_ref) {
  var children = _ref.children,
      _ref$collapsible = _ref.collapsible,
      collapsible = _ref$collapsible === void 0 ? true : _ref$collapsible,
      _ref$stickyHeader = _ref.stickyHeader,
      stickyHeader = _ref$stickyHeader === void 0 ? false : _ref$stickyHeader,
      displayName = _ref.displayName,
      filters = _ref.filters,
      WrapperComponent = _ref.WrapperComponent,
      _ref$ActionIcon = _ref.ActionIcon,
      ActionIcon = _ref$ActionIcon === void 0 ? null : _ref$ActionIcon,
      componentRef = _ref.componentRef,
      headerRef = _ref.headerRef;
  return WrapperComponent ? _react.default.createElement(WrapperComponent, {
    collapsible: collapsible,
    displayName: displayName,
    componentRef: componentRef,
    headerRef: headerRef
  }, children) : _react.default.createElement(_reactComponentComponent.default, {
    initialState: {
      isCollapsed: false
    }
  }, function (_ref2) {
    var setState = _ref2.setState,
        isCollapsed = _ref2.state.isCollapsed;
    return _react.default.createElement("div", {
      className: "aggregation-card",
      ref: componentRef
    }, _react.default.createElement("div", {
      ref: headerRef,
      className: "header ".concat(
      /*#__PURE__*/
      (0, _emotion.css)("position:", stickyHeader ? "sticky" : "relative", ";top:0px;"))
    }, _react.default.createElement("div", {
      className: "title-wrapper ".concat(isCollapsed ? 'collapsed' : '')
    }, _react.default.createElement("div", {
      className: "title-control",
      onClick: collapsible ? function () {
        return setState({
          isCollapsed: !isCollapsed
        });
      } : function () {}
    }, collapsible && _react.default.createElement("span", {
      className: "arrow ".concat(isCollapsed ? 'collapsed' : '')
    }), _react.default.createElement("span", {
      className: "title"
    }, displayName)), ActionIcon && _react.default.createElement("div", {
      className: "action-icon"
    }, ActionIcon)), !isCollapsed && filters && filters.map(function (x, i) {
      return _react.default.createElement("div", {
        key: i,
        className: "filter"
      }, x);
    })), !isCollapsed && _react.default.createElement("div", {
      className: "bucket ".concat(isCollapsed ? 'collapsed' : '')
    }, children));
  });
};

exports.default = _default;