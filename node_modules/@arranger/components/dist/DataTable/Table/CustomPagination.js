"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _lodash = require("lodash");

var _pagination = _interopRequireDefault(require("react-table/lib/pagination"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CustomPagination =
/*#__PURE__*/
function (_ReactTablePagination) {
  _inherits(CustomPagination, _ReactTablePagination);

  function CustomPagination() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CustomPagination);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomPagination)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "onPreviousPageClick", function () {
      var _this$props = _this.props,
          canPrevious = _this$props.canPrevious,
          page = _this$props.page;
      if (!canPrevious) return;

      _this.changePage(page - 1);
    });

    _defineProperty(_assertThisInitialized(_this), "onNextPageClick", function () {
      var _this$props2 = _this.props,
          page = _this$props2.page,
          canNext = _this$props2.canNext;
      if (!canNext) return;

      _this.changePage(page + 1);
    });

    _defineProperty(_assertThisInitialized(_this), "onStartPageClick", function () {
      if (!_this.props.canPrevious) return;

      _this.changePage(0);
    });

    _defineProperty(_assertThisInitialized(_this), "onEndPageClick", function () {
      if (!_this.props.canNext) return;
      var pages = _this.props.pages;

      _this.changePage(pages - 1);
    });

    return _this;
  }

  _createClass(CustomPagination, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          page = _this$props3.page,
          pages = _this$props3.pages,
          showPageSizeOptions = _this$props3.showPageSizeOptions,
          pageSizeOptions = _this$props3.pageSizeOptions,
          pageSize = _this$props3.pageSize,
          showPageJump = _this$props3.showPageJump,
          onPageSizeChange = _this$props3.onPageSizeChange,
          className = _this$props3.className,
          canPrevious = _this$props3.canPrevious,
          canNext = _this$props3.canNext,
          _this$props3$maxPages = _this$props3.maxPagesOptions,
          maxPagesOptions = _this$props3$maxPages === void 0 ? 10 : _this$props3$maxPages;
      var firstPage = Math.floor(Math.max(Math.min(page - maxPagesOptions / 2, pages - maxPagesOptions), 0));
      var lastPage = Math.floor(Math.min(firstPage + maxPagesOptions, pages));
      return _react.default.createElement("div", {
        className: (0, _classnames.default)(className, '-pagination'),
        style: _objectSpread({
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }, this.props.paginationStyle)
      }, showPageSizeOptions && _react.default.createElement("span", {
        className: "select-wrap -pageSizeOptions"
      }, "Show", ' ', _react.default.createElement("select", {
        onChange: function onChange(e) {
          return onPageSizeChange(Number(e.target.value));
        },
        value: pageSize
      }, pageSizeOptions.map(function (option, i) {
        return (// eslint-disable-next-line react/no-array-index-key
          _react.default.createElement("option", {
            key: i,
            value: option
          }, option)
        );
      })), ' ', this.props.rowsText), showPageJump && _react.default.createElement("span", {
        className: "-pageJump"
      }, _react.default.createElement("span", {
        className: "-toStart -pagination_button ".concat(canPrevious ? '' : '-disabled'),
        onClick: this.onStartPageClick
      }, '<<'), _react.default.createElement("span", {
        className: "-previous -pagination_button ".concat(canPrevious ? '' : '-disabled'),
        onClick: this.onPreviousPageClick
      }, '<'), (0, _lodash.range)(firstPage, lastPage).map(function (pageIndex) {
        return _react.default.createElement("span", {
          key: pageIndex,
          className: (0, _classnames.default)('-pagination_button', _this2.state.page === pageIndex ? '-current' : ''),
          onClick: function onClick() {
            return _this2.changePage(pageIndex);
          }
        }, pageIndex + 1);
      }), _react.default.createElement("span", {
        className: "-next -pagination_button ".concat(canNext ? '' : '-disabled'),
        onClick: this.onNextPageClick
      }, '>'), _react.default.createElement("span", {
        className: "-toEnd -pagination_button ".concat(canNext ? '' : '-disabled'),
        onClick: this.onEndPageClick
      }, '>>')), !showPageJump && _react.default.createElement("span", {
        className: "-currentPage"
      }, page + 1));
    }
  }]);

  return CustomPagination;
}(_pagination.default);

exports.default = CustomPagination;