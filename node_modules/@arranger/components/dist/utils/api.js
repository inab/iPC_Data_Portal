"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getAlwaysAddHeaders = exports.addHeaders = exports.fetchExtendedMapping = exports.graphql = void 0;

var _config = require("./config");

var _urlJoin = _interopRequireDefault(require("url-join"));

var _download = require("./download");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var alwaysSendHeaders = {
  'Content-Type': 'application/json'
};

var defaultApi = function defaultApi(_ref) {
  var _ref$endpoint = _ref.endpoint,
      endpoint = _ref$endpoint === void 0 ? '' : _ref$endpoint,
      body = _ref.body,
      headers = _ref.headers,
      method = _ref.method;
  return fetch((0, _urlJoin.default)(_config.ARRANGER_API, endpoint), {
    method: method || 'POST',
    headers: _objectSpread({}, alwaysSendHeaders, {}, headers),
    body: JSON.stringify(body)
  }).then(function (r) {
    return r.json();
  });
};

var graphql = function graphql(body) {
  return api({
    endpoint: 'graphql',
    body: body
  });
};

exports.graphql = graphql;

var fetchExtendedMapping = function fetchExtendedMapping(_ref2) {
  var graphqlField = _ref2.graphqlField,
      projectId = _ref2.projectId,
      _ref2$api = _ref2.api,
      api = _ref2$api === void 0 ? defaultApi : _ref2$api;
  return api({
    endpoint: "/".concat(projectId, "/graphql"),
    body: {
      query: "\n        {\n          ".concat(graphqlField, "{\n            extended\n          }\n        }\n      ")
    }
  }).then(function (response) {
    return {
      extendedMapping: response.data[graphqlField].extended
    };
  });
};

exports.fetchExtendedMapping = fetchExtendedMapping;

var addHeaders = function addHeaders(headers) {
  alwaysSendHeaders = _objectSpread({}, alwaysSendHeaders, {}, headers);
  (0, _download.addDownloadHttpHeaders)(headers);
};

exports.addHeaders = addHeaders;

var getAlwaysAddHeaders = function getAlwaysAddHeaders() {
  return alwaysSendHeaders;
};

exports.getAlwaysAddHeaders = getAlwaysAddHeaders;
var _default = defaultApi;
exports.default = _default;