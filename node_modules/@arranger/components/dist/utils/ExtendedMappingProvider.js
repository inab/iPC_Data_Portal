"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactComponentComponent = _interopRequireDefault(require("react-component-component"));

var _api = _interopRequireWildcard(require("./api"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var memoHash = {};

var memoizedExtendedMapping = function memoizedExtendedMapping(_ref) {
  var projectId = _ref.projectId,
      graphqlField = _ref.graphqlField,
      api = _ref.api;
  var key = "".concat(projectId, "/").concat(graphqlField);

  if (!memoHash[key]) {
    memoHash[key] = (0, _api.fetchExtendedMapping)({
      projectId: projectId,
      graphqlField: graphqlField,
      api: api
    });
  }

  return memoHash[key];
};

var memoizedExtendedMappingField = function memoizedExtendedMappingField(_ref2) {
  var contentField = _ref2.contentField,
      projectId = _ref2.projectId,
      graphqlField = _ref2.graphqlField,
      api = _ref2.api;
  var key = "".concat(projectId, "/").concat(graphqlField, "/").concat(contentField);

  if (!memoHash[key]) {
    memoHash[key] = memoizedExtendedMapping({
      projectId: projectId,
      graphqlField: graphqlField,
      api: api
    }).then(function (_ref3) {
      var extendedMapping = _ref3.extendedMapping;
      return extendedMapping.filter(function (_ref4) {
        var field = _ref4.field;
        return field === contentField;
      });
    });
  }

  return memoHash[key];
};

var ExtendedMappingProvider = function ExtendedMappingProvider(_ref5) {
  var projectId = _ref5.projectId,
      graphqlField = _ref5.graphqlField,
      _ref5$api = _ref5.api,
      api = _ref5$api === void 0 ? _api["default"] : _ref5$api,
      _ref5$useCache = _ref5.useCache,
      useCache = _ref5$useCache === void 0 ? true : _ref5$useCache,
      contentField = _ref5.field,
      children = _ref5.children;
  var initialState = {
    loading: true,
    extendedMapping: undefined
  };

  var didMount =
  /*#__PURE__*/
  function () {
    var _ref6 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee(s) {
      var extendedMapping, _ref9, _extendedMapping;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!contentField) {
                _context.next = 14;
                break;
              }

              if (useCache) {
                _context.next = 7;
                break;
              }

              _context.next = 4;
              return (0, _api.fetchExtendedMapping)({
                projectId: projectId,
                graphqlField: graphqlField,
                api: api
              }).then(function (_ref7) {
                var extendedMapping = _ref7.extendedMapping;
                return extendedMapping.filter(function (_ref8) {
                  var field = _ref8.field;
                  return field === contentField;
                });
              });

            case 4:
              _context.t0 = _context.sent;
              _context.next = 10;
              break;

            case 7:
              _context.next = 9;
              return memoizedExtendedMappingField({
                projectId: projectId,
                graphqlField: graphqlField,
                api: api,
                contentField: contentField
              });

            case 9:
              _context.t0 = _context.sent;

            case 10:
              extendedMapping = _context.t0;
              s.setState({
                loading: false,
                extendedMapping: extendedMapping
              });
              _context.next = 26;
              break;

            case 14:
              if (useCache) {
                _context.next = 20;
                break;
              }

              _context.next = 17;
              return (0, _api.fetchExtendedMapping)({
                projectId: projectId,
                graphqlField: graphqlField,
                api: api
              });

            case 17:
              _context.t1 = _context.sent;
              _context.next = 23;
              break;

            case 20:
              _context.next = 22;
              return memoizedExtendedMapping({
                projectId: projectId,
                graphqlField: graphqlField,
                api: api
              });

            case 22:
              _context.t1 = _context.sent;

            case 23:
              _ref9 = _context.t1;
              _extendedMapping = _ref9.extendedMapping;
              s.setState({
                loading: false,
                extendedMapping: _extendedMapping
              });

            case 26:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function didMount(_x) {
      return _ref6.apply(this, arguments);
    };
  }();

  return _react["default"].createElement(_reactComponentComponent["default"], {
    initialState: initialState,
    didMount: didMount
  }, function (s) {
    return children(_objectSpread({}, s.state));
  });
};

ExtendedMappingProvider.prototype = {
  api: _propTypes["default"].func,
  useCache: _propTypes["default"].bool,
  field: _propTypes["default"].string,
  projectId: _propTypes["default"].string.isRequired,
  graphqlField: _propTypes["default"].string.isRequired,
  children: _propTypes["default"].func.isRequired
};
var _default = ExtendedMappingProvider;
exports["default"] = _default;