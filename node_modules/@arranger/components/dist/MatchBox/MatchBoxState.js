"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = require("react");

var _lodash = require("lodash");

var _api = _interopRequireDefault(require("../utils/api"));

var _QuickSearchQuery = require("../Arranger/QuickSearch/QuickSearchQuery");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var matchBoxFields = "\n  state {\n    displayName\n    field\n    isActive\n    keyField\n    searchFields\n  }\n";

var MatchBoxState =
/*#__PURE__*/
function (_Component) {
  _inherits(MatchBoxState, _Component);

  function MatchBoxState() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, MatchBoxState);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MatchBoxState)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      extended: [],
      columnsState: {},
      matchBoxState: [],
      temp: [],
      err: null
    });

    _defineProperty(_assertThisInitialized(_this), "fetchMatchBoxState", (0, _lodash.debounce)(
    /*#__PURE__*/
    function () {
      var _ref2 = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(_ref) {
        var graphqlField,
            onComplete,
            _ref3,
            _ref3$data$graphqlFie,
            extended,
            matchBoxState,
            columnsState,
            _args = arguments;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                graphqlField = _ref.graphqlField;
                onComplete = _args.length > 1 && _args[1] !== undefined ? _args[1] : function () {};
                _context.prev = 2;
                _context.next = 5;
                return (0, _api["default"])({
                  endpoint: "/".concat(_this.props.projectId, "/graphql"),
                  body: {
                    query: "\n            {\n              ".concat(graphqlField, " {\n                extended\n                matchBoxState {\n                  ").concat(matchBoxFields, "\n                }\n                columnsState {\n                  state {\n                    columns {\n                      field\n                      query\n                      jsonPath\n                    }\n                  }\n                }\n              }\n            }\n          ")
                  }
                });

              case 5:
                _ref3 = _context.sent;
                _ref3$data$graphqlFie = _ref3.data[graphqlField];
                extended = _ref3$data$graphqlFie.extended;
                matchBoxState = _ref3$data$graphqlFie.matchBoxState.state;
                columnsState = _ref3$data$graphqlFie.columnsState.state;

                _this.setState({
                  matchBoxState: matchBoxState,
                  temp: matchBoxState,
                  extended: extended,
                  columnsState: columnsState,
                  err: null
                }, function () {
                  return onComplete({
                    activeFields: _this.getActiveFields()
                  });
                });

                _context.next = 16;
                break;

              case 13:
                _context.prev = 13;
                _context.t0 = _context["catch"](2);

                _this.setState({
                  err: _context.t0
                });

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[2, 13]]);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }(), 300));

    _defineProperty(_assertThisInitialized(_this), "save", (0, _lodash.debounce)(
    /*#__PURE__*/
    function () {
      var _ref4 = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2(state) {
        var _ref5, data;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return (0, _api["default"])({
                  endpoint: "/".concat(_this.props.projectId, "/graphql"),
                  body: {
                    variables: {
                      state: state
                    },
                    query: "\n        mutation($state: JSON!) {\n          saveMatchBoxState(\n            state: $state\n            graphqlField: \"".concat(_this.props.graphqlField, "\"\n          ) {\n            ").concat(matchBoxFields, "\n          }\n        }\n      ")
                  }
                });

              case 2:
                _ref5 = _context2.sent;
                data = _ref5.data;

                _this.setState({
                  matchBoxState: data.saveMatchBoxState.state,
                  temp: data.saveMatchBoxState.state
                });

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x2) {
        return _ref4.apply(this, arguments);
      };
    }(), 300));

    _defineProperty(_assertThisInitialized(_this), "update", function (_ref6) {
      var field = _ref6.field,
          key = _ref6.key,
          value = _ref6.value;

      var matchBoxField = _this.state.temp.find(function (x) {
        return x.field === field;
      });

      var index = _this.state.temp.findIndex(function (x) {
        return x.field === field;
      });

      var temp = Object.assign([], _this.state.temp, _defineProperty({}, index, _objectSpread({}, matchBoxField, _defineProperty({}, key, value))));

      _this.setState({
        temp: temp
      }, function () {
        return _this.save(temp);
      });
    });

    _defineProperty(_assertThisInitialized(_this), "getActiveFields", function () {
      var _this$state$temp, _this$state$temp$filt;

      return (_this$state$temp = _this.state.temp) === null || _this$state$temp === void 0 ? void 0 : (_this$state$temp$filt = _this$state$temp.filter(function (x) {
        return x.isActive;
      })) === null || _this$state$temp$filt === void 0 ? void 0 : _this$state$temp$filt.map(function (x) {
        return _objectSpread({}, x, {
          keyField: _objectSpread({
            field: x.keyField
          }, (0, _QuickSearchQuery.decorateFieldWithColumnsState)({
            columnsState: _this.state.columnsState,
            field: x.keyField
          })),
          searchFields: x.searchFields.map(function (y) {
            return _objectSpread({
              field: y,
              entityName: x.displayName
            }, (0, _QuickSearchQuery.decorateFieldWithColumnsState)({
              columnsState: _this.state.columnsState,
              field: y
            }));
          })
        });
      });
    });

    return _this;
  }

  _createClass(MatchBoxState, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee3() {
        var _this$props$onInitial, onInitialLoaded;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _this$props$onInitial = this.props.onInitialLoaded, onInitialLoaded = _this$props$onInitial === void 0 ? function () {} : _this$props$onInitial;
                this.fetchMatchBoxState(this.props, onInitialLoaded);

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(next) {
      if (this.props.graphqlField !== next.graphqlField) {
        this.fetchMatchBoxState(next);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state$extended;

      return this.props.render({
        update: this.update,
        matchBoxState: this.state.temp,
        primaryKeyField: (_this$state$extended = this.state.extended) === null || _this$state$extended === void 0 ? void 0 : _this$state$extended.find(function (x) {
          return x.primaryKey;
        }),
        activeFields: this.getActiveFields(),
        extended: this.state.extended
      });
    }
  }]);

  return MatchBoxState;
}(_react.Component);

var _default = MatchBoxState;
exports["default"] = _default;