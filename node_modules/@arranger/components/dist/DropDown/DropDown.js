"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _downshift = _interopRequireDefault(require("downshift"));

require("./DropDown.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ArrowIcon(_ref) {
  var isOpen = _ref.isOpen;
  return _react.default.createElement("svg", {
    viewBox: "0 0 20 20",
    preserveAspectRatio: "none",
    width: 16,
    fill: "transparent",
    stroke: "#979797",
    strokeWidth: "1.1px",
    transform: isOpen ? 'rotate(180)' : null
  }, _react.default.createElement("path", {
    d: "M1,6 L10,15 L19,6"
  }));
}

var DropDown =
/*#__PURE__*/
function (_React$Component) {
  _inherits(DropDown, _React$Component);

  function DropDown() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, DropDown);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropDown)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      isOpen: false
    });

    _defineProperty(_assertThisInitialized(_this), "handleToggleMenu", function () {
      _this.setState(function (_ref2) {
        var isOpen = _ref2.isOpen;
        return {
          isOpen: !isOpen
        };
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleStateChange", function (changes) {
      var isOpen = changes.isOpen,
          type = changes.type;

      if (type === _downshift.default.stateChangeTypes.mouseUp) {
        _this.setState({
          isOpen: isOpen
        });
      }
    });

    return _this;
  }

  _createClass(DropDown, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var isOpen = this.state.isOpen;
      var _this$props = this.props,
          items = _this$props.items,
          onChange = _this$props.onChange,
          itemToString = _this$props.itemToString,
          children = _this$props.children,
          _this$props$align = _this$props.align,
          align = _this$props$align === void 0 ? 'right' : _this$props$align;
      return _react.default.createElement(_downshift.default, {
        itemToString: itemToString,
        onChange: onChange,
        selectedItem: items.filter(function (item) {
          return item.show;
        }),
        isOpen: isOpen,
        onStateChange: this.handleStateChange
      }, function (_ref3) {
        var getInputProps = _ref3.getInputProps,
            getButtonProps = _ref3.getButtonProps,
            getItemProps = _ref3.getItemProps,
            isOpen = _ref3.isOpen,
            toggleMenu = _ref3.toggleMenu,
            clearSelection = _ref3.clearSelection,
            selectedItem = _ref3.selectedItem,
            inputValue = _ref3.inputValue,
            highlightedIndex = _ref3.highlightedIndex;
        return _react.default.createElement("div", {
          className: "dropDownHeader"
        }, _react.default.createElement("button", _extends({
          "aria-label": "Show columns to select",
          className: "dropDownButton"
        }, getButtonProps({
          onClick: _this2.handleToggleMenu
        })), _react.default.createElement("div", {
          className: "dropDownButtonContent"
        }, children), _react.default.createElement(ArrowIcon, {
          isOpen: isOpen
        })), !isOpen ? null : _react.default.createElement("div", {
          className: "dropDownContent",
          style: {
            right: align === 'right' ? 0 : 'auto',
            left: align === 'right' ? 'auto' : 0
          }
        }, items.map(function (item, index) {
          return _react.default.createElement("div", _extends({
            className: "dropDownContentElement",
            key: item.id || itemToString(item)
          }, getItemProps({
            item: item,
            index: index
          })), itemToString(item), _react.default.createElement("input", {
            readOnly: true,
            type: "checkbox",
            checked: selectedItem.indexOf(item) > -1,
            "aria-label": "Select column ".concat(item.id || itemToString(item))
          }));
        })));
      });
    }
  }]);

  return DropDown;
}(_react.default.Component);

var _default = DropDown;
exports.default = _default;