"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveSetsInSqon = void 0;

var _lodash = require("lodash");

var _middleware = require("@arranger/middleware");

var _esSearch = _interopRequireDefault(require("./utils/esSearch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var resolveSetIdsFromEs = function resolveSetIdsFromEs(es) {
  return function (setId) {
    return (0, _esSearch["default"])(es)({
      index: _middleware.CONSTANTS.ES_ARRANGER_SET_INDEX,
      body: {
        query: {
          bool: {
            must: {
              match: {
                setId: setId
              }
            }
          }
        }
      }
    }).then(function (_ref) {
      var hits = _ref.hits.hits;
      return (0, _lodash.flattenDeep)(hits.map(function (_ref2) {
        var ids = _ref2._source.ids;
        return ids;
      }));
    });
  };
};

var getSetIdsFromSqon = function getSetIdsFromSqon() {
  var _String$indexOf, _String;

  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      content = _ref3.content;

  var collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return ((0, _lodash.isArray)(content) ? (0, _lodash.flattenDeep)(content.reduce(function (acc, subSqon) {
    return [].concat(_toConsumableArray(acc), _toConsumableArray(getSetIdsFromSqon(subSqon, collection)));
  }, collection)) : (0, _lodash.isArray)(content === null || content === void 0 ? void 0 : content.value) ? content === null || content === void 0 ? void 0 : content.value.filter(function (value) {
    return String(value).indexOf('set_id:') === 0;
  }) : _toConsumableArray(((_String$indexOf = (_String = String(content === null || content === void 0 ? void 0 : content.value)).indexOf) === null || _String$indexOf === void 0 ? void 0 : _String$indexOf.call(_String, 'set_id:')) === 0 ? [content.value] : [])).map(function (setId) {
    return setId.replace('set_id:', '');
  });
};

var injectIdsIntoSqon = function injectIdsIntoSqon(_ref4) {
  var sqon = _ref4.sqon,
      setIdsToValueMap = _ref4.setIdsToValueMap;
  return _objectSpread({}, sqon, {
    content: sqon.content.map(function (op) {
      return _objectSpread({}, op, {
        content: !(0, _lodash.isArray)(op.content) ? _objectSpread({}, op.content, {
          value: (0, _lodash.isArray)(op.content.value) ? (0, _lodash.flattenDeep)(op.content.value.map(function (value) {
            return setIdsToValueMap[value] || op.content.value;
          })) : setIdsToValueMap[op.content.value] || op.content.value
        }) : injectIdsIntoSqon({
          sqon: op,
          setIdsToValueMap: setIdsToValueMap
        }).content
      });
    })
  });
};

var resolveSetsInSqon = function resolveSetsInSqon(_ref5) {
  var sqon = _ref5.sqon,
      es = _ref5.es;
  var setIds = getSetIdsFromSqon(sqon || {});
  return setIds.length ? Promise.all(setIds.map(resolveSetIdsFromEs(es))).then(function (searchResult) {
    var setIdsToValueMap = (0, _lodash.zipObject)(setIds.map(function (id) {
      return "set_id:".concat(id);
    }), searchResult);
    return injectIdsIntoSqon({
      sqon: sqon,
      setIdsToValueMap: setIdsToValueMap
    });
  }) : sqon;
};

exports.resolveSetsInSqon = resolveSetsInSqon;