"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _mappingToAggsType = _interopRequireDefault(require("./mappingToAggsType"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _default = function _default(_ref) {
  var type = _ref.type,
      _ref$fields = _ref.fields,
      fields = _ref$fields === void 0 ? '' : _ref$fields,
      _ref$createStateTypeD = _ref.createStateTypeDefs,
      createStateTypeDefs = _ref$createStateTypeD === void 0 ? true : _ref$createStateTypeD;
  return "\n  type ".concat(type.name, " {\n    mapping: JSON\n\n    extended(fields: [String]): JSON\n\n    ").concat(createStateTypeDefs ? "\n        aggsState: AggsState\n\n        columnsState: ColumnsState\n\n        matchBoxState: MatchBoxState\n      " : '', "\n\n    hits(\n      score: String\n      offset: Int\n      sort: [Sort]\n      filters: JSON\n      before: String\n      after: String\n      first: Int\n      last: Int\n      searchAfter: JSON\n    ): ").concat(type.name, "Connection\n\n    aggregations(\n      filters: JSON\n\n      include_missing: Boolean\n      # Should term aggregations be affected by queries that contain filters on their field. For example if a query is filtering primary_site by Blood should the term aggregation on primary_site return all values or just Blood. Set to False for UIs that allow users to select multiple values of an aggregation.\n      aggregations_filter_themselves: Boolean\n    ): ").concat(type.name, "Aggregations\n  }\n\n  type ").concat(type.name, "Aggregations {\n    ").concat((0, _mappingToAggsType["default"])(type.mapping), "\n  }\n\n  type ").concat(type.name, "Connection {\n    total: Int!\n    edges: [").concat(type.name, "Edge]\n  }\n\n  type ").concat(type.name, "Edge {\n    searchAfter: JSON\n    node: ").concat(type.name, "Node\n  }\n\n  type ").concat(type.name, "Node implements Node {\n    id: ID!\n    score: Int\n    ").concat(fields, "\n  }\n");
};

exports["default"] = _default;