"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AGGS_WRAPPER_NESTED = exports.AGGS_WRAPPER_FILTERED = exports.AGGS_WRAPPER_GLOBAL = exports.HISTOGRAM = exports.STATS = exports.BUCKETS = exports.ES_ARRANGER_SET_TYPE = exports.ES_ARRANGER_SET_INDEX = exports.ES_MAX_LONG = exports.ES_DATE_FORMAT = exports.ES_PHRASE_PREFIX = exports.ES_TYPE = exports.ES_FIELDS = exports.ES_MULTI_MATCH = exports.ES_PATH = exports.ES_QUERY = exports.ES_BOOL = exports.ES_PREFIX = exports.ES_NESTED = exports.ES_SHOULD = exports.ES_MUST_NOT = exports.ES_MUST = exports.ES_WILDCARD = exports.ARRAY_CONTENT = exports.DATE_FORMAT = exports.OP_ALIASES = exports.SET_ID = exports.MISSING = exports.REGEX = exports.BETWEEN_OP = exports.LTE_OP = exports.LT_OP = exports.GTE_OP = exports.GT_OP = exports.NOT_OP = exports.OR_OP = exports.AND_OP = exports.FILTER_OP = exports.SOME_NOT_IN_OP = exports.ALL_OP = exports.NOT_IN_OP = exports.IN_OP = void 0;
// sqon ops
var IN_OP = 'in';
exports.IN_OP = IN_OP;
var NOT_IN_OP = 'not-in';
exports.NOT_IN_OP = NOT_IN_OP;
var ALL_OP = 'all';
exports.ALL_OP = ALL_OP;
var SOME_NOT_IN_OP = 'some-not-in';
exports.SOME_NOT_IN_OP = SOME_NOT_IN_OP;
var FILTER_OP = 'filter';
exports.FILTER_OP = FILTER_OP;
var AND_OP = 'and';
exports.AND_OP = AND_OP;
var OR_OP = 'or';
exports.OR_OP = OR_OP;
var NOT_OP = 'not';
exports.NOT_OP = NOT_OP;
var GT_OP = 'gt';
exports.GT_OP = GT_OP;
var GTE_OP = 'gte';
exports.GTE_OP = GTE_OP;
var LT_OP = 'lt';
exports.LT_OP = LT_OP;
var LTE_OP = 'lte';
exports.LTE_OP = LTE_OP;
var BETWEEN_OP = 'between'; // special values

exports.BETWEEN_OP = BETWEEN_OP;
var REGEX = '*';
exports.REGEX = REGEX;
var MISSING = '__missing__';
exports.MISSING = MISSING;
var SET_ID = 'set_id:'; // sqon op aliases

exports.SET_ID = SET_ID;
var OP_ALIASES = {
  '>': GT_OP,
  '<': LT_OP,
  '>=': GTE_OP,
  '<=': LTE_OP,
  '=': IN_OP,
  '!=': NOT_IN_OP
};
exports.OP_ALIASES = OP_ALIASES;
var DATE_FORMAT = 'YYYY-MM-DD';
exports.DATE_FORMAT = DATE_FORMAT;
var ARRAY_CONTENT = [IN_OP, NOT_IN_OP, SOME_NOT_IN_OP, GT_OP, GTE_OP, LT_OP, LTE_OP]; // elasticsearch values

exports.ARRAY_CONTENT = ARRAY_CONTENT;
var ES_WILDCARD = 'wildcard';
exports.ES_WILDCARD = ES_WILDCARD;
var ES_MUST = 'must';
exports.ES_MUST = ES_MUST;
var ES_MUST_NOT = 'must_not';
exports.ES_MUST_NOT = ES_MUST_NOT;
var ES_SHOULD = 'should';
exports.ES_SHOULD = ES_SHOULD;
var ES_NESTED = 'nested';
exports.ES_NESTED = ES_NESTED;
var ES_PREFIX = 'prefix';
exports.ES_PREFIX = ES_PREFIX;
var ES_BOOL = 'bool';
exports.ES_BOOL = ES_BOOL;
var ES_QUERY = 'query';
exports.ES_QUERY = ES_QUERY;
var ES_PATH = 'path';
exports.ES_PATH = ES_PATH;
var ES_MULTI_MATCH = 'multi_match';
exports.ES_MULTI_MATCH = ES_MULTI_MATCH;
var ES_FIELDS = 'fields';
exports.ES_FIELDS = ES_FIELDS;
var ES_TYPE = 'type';
exports.ES_TYPE = ES_TYPE;
var ES_PHRASE_PREFIX = 'phrase_prefix';
exports.ES_PHRASE_PREFIX = ES_PHRASE_PREFIX;
var ES_DATE_FORMAT = 'YYYY-MM-DD HH:mm:ss.SSSSSS';
exports.ES_DATE_FORMAT = ES_DATE_FORMAT;
var ES_MAX_LONG = "-9223372036854775808";
exports.ES_MAX_LONG = ES_MAX_LONG;
var ES_ARRANGER_SET_INDEX = 'arranger-sets';
exports.ES_ARRANGER_SET_INDEX = ES_ARRANGER_SET_INDEX;
var ES_ARRANGER_SET_TYPE = 'arranger-sets';
exports.ES_ARRANGER_SET_TYPE = ES_ARRANGER_SET_TYPE;
var BUCKETS = 'buckets';
exports.BUCKETS = BUCKETS;
var STATS = 'stats';
exports.STATS = STATS;
var HISTOGRAM = 'histogram';
exports.HISTOGRAM = HISTOGRAM;
var AGGS_WRAPPER_GLOBAL = 'global';
exports.AGGS_WRAPPER_GLOBAL = AGGS_WRAPPER_GLOBAL;
var AGGS_WRAPPER_FILTERED = 'filtered';
exports.AGGS_WRAPPER_FILTERED = AGGS_WRAPPER_FILTERED;
var AGGS_WRAPPER_NESTED = 'nested';
exports.AGGS_WRAPPER_NESTED = AGGS_WRAPPER_NESTED;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25zdGFudHMuanMiXSwibmFtZXMiOlsiSU5fT1AiLCJOT1RfSU5fT1AiLCJBTExfT1AiLCJTT01FX05PVF9JTl9PUCIsIkZJTFRFUl9PUCIsIkFORF9PUCIsIk9SX09QIiwiTk9UX09QIiwiR1RfT1AiLCJHVEVfT1AiLCJMVF9PUCIsIkxURV9PUCIsIkJFVFdFRU5fT1AiLCJSRUdFWCIsIk1JU1NJTkciLCJTRVRfSUQiLCJPUF9BTElBU0VTIiwiREFURV9GT1JNQVQiLCJBUlJBWV9DT05URU5UIiwiRVNfV0lMRENBUkQiLCJFU19NVVNUIiwiRVNfTVVTVF9OT1QiLCJFU19TSE9VTEQiLCJFU19ORVNURUQiLCJFU19QUkVGSVgiLCJFU19CT09MIiwiRVNfUVVFUlkiLCJFU19QQVRIIiwiRVNfTVVMVElfTUFUQ0giLCJFU19GSUVMRFMiLCJFU19UWVBFIiwiRVNfUEhSQVNFX1BSRUZJWCIsIkVTX0RBVEVfRk9STUFUIiwiRVNfTUFYX0xPTkciLCJFU19BUlJBTkdFUl9TRVRfSU5ERVgiLCJFU19BUlJBTkdFUl9TRVRfVFlQRSIsIkJVQ0tFVFMiLCJTVEFUUyIsIkhJU1RPR1JBTSIsIkFHR1NfV1JBUFBFUl9HTE9CQUwiLCJBR0dTX1dSQVBQRVJfRklMVEVSRUQiLCJBR0dTX1dSQVBQRVJfTkVTVEVEIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNPLElBQU1BLEtBQUssR0FBRyxJQUFkOztBQUNBLElBQU1DLFNBQVMsR0FBRyxRQUFsQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUcsS0FBZjs7QUFDQSxJQUFNQyxjQUFjLEdBQUcsYUFBdkI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHLFFBQWxCOztBQUNBLElBQU1DLE1BQU0sR0FBRyxLQUFmOztBQUNBLElBQU1DLEtBQUssR0FBRyxJQUFkOztBQUNBLElBQU1DLE1BQU0sR0FBRyxLQUFmOztBQUNBLElBQU1DLEtBQUssR0FBRyxJQUFkOztBQUNBLElBQU1DLE1BQU0sR0FBRyxLQUFmOztBQUNBLElBQU1DLEtBQUssR0FBRyxJQUFkOztBQUNBLElBQU1DLE1BQU0sR0FBRyxLQUFmOztBQUNBLElBQU1DLFVBQVUsR0FBRyxTQUFuQixDLENBRVA7OztBQUNPLElBQU1DLEtBQUssR0FBRyxHQUFkOztBQUNBLElBQU1DLE9BQU8sR0FBRyxhQUFoQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUcsU0FBZixDLENBRVA7OztBQUNPLElBQU1DLFVBQVUsR0FBRztBQUN4QixPQUFLUixLQURtQjtBQUV4QixPQUFLRSxLQUZtQjtBQUd4QixRQUFNRCxNQUhrQjtBQUl4QixRQUFNRSxNQUprQjtBQUt4QixPQUFLWCxLQUxtQjtBQU14QixRQUFNQztBQU5rQixDQUFuQjs7QUFRQSxJQUFNZ0IsV0FBVyxHQUFHLFlBQXBCOztBQUVBLElBQU1DLGFBQWEsR0FBRyxDQUMzQmxCLEtBRDJCLEVBRTNCQyxTQUYyQixFQUczQkUsY0FIMkIsRUFJM0JLLEtBSjJCLEVBSzNCQyxNQUwyQixFQU0zQkMsS0FOMkIsRUFPM0JDLE1BUDJCLENBQXRCLEMsQ0FVUDs7O0FBQ08sSUFBTVEsV0FBVyxHQUFHLFVBQXBCOztBQUNBLElBQU1DLE9BQU8sR0FBRyxNQUFoQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsVUFBcEI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHLFFBQWxCOztBQUNBLElBQU1DLFNBQVMsR0FBRyxRQUFsQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsUUFBbEI7O0FBQ0EsSUFBTUMsT0FBTyxHQUFHLE1BQWhCOztBQUNBLElBQU1DLFFBQVEsR0FBRyxPQUFqQjs7QUFDQSxJQUFNQyxPQUFPLEdBQUcsTUFBaEI7O0FBQ0EsSUFBTUMsY0FBYyxHQUFHLGFBQXZCOztBQUNBLElBQU1DLFNBQVMsR0FBRyxRQUFsQjs7QUFDQSxJQUFNQyxPQUFPLEdBQUcsTUFBaEI7O0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsZUFBekI7O0FBQ0EsSUFBTUMsY0FBYyxHQUFHLDRCQUF2Qjs7QUFDQSxJQUFNQyxXQUFXLHlCQUFqQjs7QUFDQSxJQUFNQyxxQkFBcUIsR0FBRyxlQUE5Qjs7QUFDQSxJQUFNQyxvQkFBb0IsR0FBRyxlQUE3Qjs7QUFFQSxJQUFNQyxPQUFPLEdBQUcsU0FBaEI7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHLE9BQWQ7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHLFdBQWxCOztBQUNBLElBQU1DLG1CQUFtQixHQUFHLFFBQTVCOztBQUNBLElBQU1DLHFCQUFxQixHQUFHLFVBQTlCOztBQUNBLElBQU1DLG1CQUFtQixHQUFHLFFBQTVCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3FvbiBvcHNcbmV4cG9ydCBjb25zdCBJTl9PUCA9ICdpbic7XG5leHBvcnQgY29uc3QgTk9UX0lOX09QID0gJ25vdC1pbic7XG5leHBvcnQgY29uc3QgQUxMX09QID0gJ2FsbCc7XG5leHBvcnQgY29uc3QgU09NRV9OT1RfSU5fT1AgPSAnc29tZS1ub3QtaW4nO1xuZXhwb3J0IGNvbnN0IEZJTFRFUl9PUCA9ICdmaWx0ZXInO1xuZXhwb3J0IGNvbnN0IEFORF9PUCA9ICdhbmQnO1xuZXhwb3J0IGNvbnN0IE9SX09QID0gJ29yJztcbmV4cG9ydCBjb25zdCBOT1RfT1AgPSAnbm90JztcbmV4cG9ydCBjb25zdCBHVF9PUCA9ICdndCc7XG5leHBvcnQgY29uc3QgR1RFX09QID0gJ2d0ZSc7XG5leHBvcnQgY29uc3QgTFRfT1AgPSAnbHQnO1xuZXhwb3J0IGNvbnN0IExURV9PUCA9ICdsdGUnO1xuZXhwb3J0IGNvbnN0IEJFVFdFRU5fT1AgPSAnYmV0d2Vlbic7XG5cbi8vIHNwZWNpYWwgdmFsdWVzXG5leHBvcnQgY29uc3QgUkVHRVggPSAnKic7XG5leHBvcnQgY29uc3QgTUlTU0lORyA9ICdfX21pc3NpbmdfXyc7XG5leHBvcnQgY29uc3QgU0VUX0lEID0gJ3NldF9pZDonO1xuXG4vLyBzcW9uIG9wIGFsaWFzZXNcbmV4cG9ydCBjb25zdCBPUF9BTElBU0VTID0ge1xuICAnPic6IEdUX09QLFxuICAnPCc6IExUX09QLFxuICAnPj0nOiBHVEVfT1AsXG4gICc8PSc6IExURV9PUCxcbiAgJz0nOiBJTl9PUCxcbiAgJyE9JzogTk9UX0lOX09QLFxufTtcbmV4cG9ydCBjb25zdCBEQVRFX0ZPUk1BVCA9ICdZWVlZLU1NLUREJztcblxuZXhwb3J0IGNvbnN0IEFSUkFZX0NPTlRFTlQgPSBbXG4gIElOX09QLFxuICBOT1RfSU5fT1AsXG4gIFNPTUVfTk9UX0lOX09QLFxuICBHVF9PUCxcbiAgR1RFX09QLFxuICBMVF9PUCxcbiAgTFRFX09QLFxuXTtcblxuLy8gZWxhc3RpY3NlYXJjaCB2YWx1ZXNcbmV4cG9ydCBjb25zdCBFU19XSUxEQ0FSRCA9ICd3aWxkY2FyZCc7XG5leHBvcnQgY29uc3QgRVNfTVVTVCA9ICdtdXN0JztcbmV4cG9ydCBjb25zdCBFU19NVVNUX05PVCA9ICdtdXN0X25vdCc7XG5leHBvcnQgY29uc3QgRVNfU0hPVUxEID0gJ3Nob3VsZCc7XG5leHBvcnQgY29uc3QgRVNfTkVTVEVEID0gJ25lc3RlZCc7XG5leHBvcnQgY29uc3QgRVNfUFJFRklYID0gJ3ByZWZpeCc7XG5leHBvcnQgY29uc3QgRVNfQk9PTCA9ICdib29sJztcbmV4cG9ydCBjb25zdCBFU19RVUVSWSA9ICdxdWVyeSc7XG5leHBvcnQgY29uc3QgRVNfUEFUSCA9ICdwYXRoJztcbmV4cG9ydCBjb25zdCBFU19NVUxUSV9NQVRDSCA9ICdtdWx0aV9tYXRjaCc7XG5leHBvcnQgY29uc3QgRVNfRklFTERTID0gJ2ZpZWxkcyc7XG5leHBvcnQgY29uc3QgRVNfVFlQRSA9ICd0eXBlJztcbmV4cG9ydCBjb25zdCBFU19QSFJBU0VfUFJFRklYID0gJ3BocmFzZV9wcmVmaXgnO1xuZXhwb3J0IGNvbnN0IEVTX0RBVEVfRk9STUFUID0gJ1lZWVktTU0tREQgSEg6bW06c3MuU1NTU1NTJztcbmV4cG9ydCBjb25zdCBFU19NQVhfTE9ORyA9IGAtOTIyMzM3MjAzNjg1NDc3NTgwOGA7XG5leHBvcnQgY29uc3QgRVNfQVJSQU5HRVJfU0VUX0lOREVYID0gJ2FycmFuZ2VyLXNldHMnO1xuZXhwb3J0IGNvbnN0IEVTX0FSUkFOR0VSX1NFVF9UWVBFID0gJ2FycmFuZ2VyLXNldHMnO1xuXG5leHBvcnQgY29uc3QgQlVDS0VUUyA9ICdidWNrZXRzJztcbmV4cG9ydCBjb25zdCBTVEFUUyA9ICdzdGF0cyc7XG5leHBvcnQgY29uc3QgSElTVE9HUkFNID0gJ2hpc3RvZ3JhbSc7XG5leHBvcnQgY29uc3QgQUdHU19XUkFQUEVSX0dMT0JBTCA9ICdnbG9iYWwnO1xuZXhwb3J0IGNvbnN0IEFHR1NfV1JBUFBFUl9GSUxURVJFRCA9ICdmaWx0ZXJlZCc7XG5leHBvcnQgY29uc3QgQUdHU19XUkFQUEVSX05FU1RFRCA9ICduZXN0ZWQnO1xuIl19