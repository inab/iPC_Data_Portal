"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergePath = mergePath;
exports.isNested = isNested;
exports.readPath = readPath;
exports.wrapMustNot = wrapMustNot;
exports.wrapMust = wrapMust;
exports.wrapShould = wrapShould;
exports.wrapNested = wrapNested;
exports.wrapBool = wrapBool;
exports.toEsRangeValue = toEsRangeValue;

var _lodash = _interopRequireDefault(require("lodash"));

var _dateFns = require("date-fns");

var CONSTANTS = _interopRequireWildcard(require("../constants"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function mergePath(target, _ref, data) {
  var _ref2 = _toArray(_ref),
      key = _ref2[0],
      path = _ref2.slice(1);

  return _objectSpread({}, target, _defineProperty({}, key, path.length ? mergePath(_lodash["default"].get(target, key, {}), path, data) : data));
}

function isNested(filter) {
  return filter && filter.hasOwnProperty(CONSTANTS.ES_NESTED);
}

function readPath(filter) {
  return _lodash["default"].get(filter, [CONSTANTS.ES_NESTED, CONSTANTS.ES_PATH], '');
}

function wrapMustNot(value) {
  return wrapBool(CONSTANTS.ES_MUST_NOT, value);
}

function wrapMust(value) {
  return wrapBool(CONSTANTS.ES_MUST, value);
}

function wrapShould(value) {
  return wrapBool(CONSTANTS.ES_SHOULD, value);
}

function wrapNested(esFilter, path) {
  var _CONSTANTS$ES_NESTED;

  return _defineProperty({}, CONSTANTS.ES_NESTED, (_CONSTANTS$ES_NESTED = {}, _defineProperty(_CONSTANTS$ES_NESTED, CONSTANTS.ES_PATH, path), _defineProperty(_CONSTANTS$ES_NESTED, CONSTANTS.ES_QUERY, esFilter[CONSTANTS.ES_BOOL] ? esFilter : wrapMust(esFilter)), _CONSTANTS$ES_NESTED));
}

function wrapBool(op, value) {
  return _defineProperty({}, CONSTANTS.ES_BOOL, _defineProperty({}, op, Array.isArray(value) ? value : [value]));
}

function toEsRangeValue(value) {
  var dateValue = (0, _dateFns.parse)(value);
  return (0, _dateFns.format)(dateValue, CONSTANTS.DATE_FORMAT) === value ? (0, _dateFns.format)(dateValue, CONSTANTS.ES_DATE_FORMAT) : value;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9lc0ZpbHRlci5qcyJdLCJuYW1lcyI6WyJtZXJnZVBhdGgiLCJ0YXJnZXQiLCJkYXRhIiwia2V5IiwicGF0aCIsImxlbmd0aCIsIl8iLCJnZXQiLCJpc05lc3RlZCIsImZpbHRlciIsImhhc093blByb3BlcnR5IiwiQ09OU1RBTlRTIiwiRVNfTkVTVEVEIiwicmVhZFBhdGgiLCJFU19QQVRIIiwid3JhcE11c3ROb3QiLCJ2YWx1ZSIsIndyYXBCb29sIiwiRVNfTVVTVF9OT1QiLCJ3cmFwTXVzdCIsIkVTX01VU1QiLCJ3cmFwU2hvdWxkIiwiRVNfU0hPVUxEIiwid3JhcE5lc3RlZCIsImVzRmlsdGVyIiwiRVNfUVVFUlkiLCJFU19CT09MIiwib3AiLCJBcnJheSIsImlzQXJyYXkiLCJ0b0VzUmFuZ2VWYWx1ZSIsImRhdGVWYWx1ZSIsIkRBVEVfRk9STUFUIiwiRVNfREFURV9GT1JNQVQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTyxTQUFTQSxTQUFULENBQW1CQyxNQUFuQixRQUEyQ0MsSUFBM0MsRUFBaUQ7QUFBQTtBQUFBLE1BQXJCQyxHQUFxQjtBQUFBLE1BQWJDLElBQWE7O0FBQ3RELDJCQUNLSCxNQURMLHNCQUVHRSxHQUZILEVBRVNDLElBQUksQ0FBQ0MsTUFBTCxHQUFjTCxTQUFTLENBQUNNLG1CQUFFQyxHQUFGLENBQU1OLE1BQU4sRUFBY0UsR0FBZCxFQUFtQixFQUFuQixDQUFELEVBQXlCQyxJQUF6QixFQUErQkYsSUFBL0IsQ0FBdkIsR0FBOERBLElBRnZFO0FBSUQ7O0FBRU0sU0FBU00sUUFBVCxDQUFrQkMsTUFBbEIsRUFBMEI7QUFDL0IsU0FBT0EsTUFBTSxJQUFJQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLFNBQVMsQ0FBQ0MsU0FBaEMsQ0FBakI7QUFDRDs7QUFFTSxTQUFTQyxRQUFULENBQWtCSixNQUFsQixFQUEwQjtBQUMvQixTQUFPSCxtQkFBRUMsR0FBRixDQUFNRSxNQUFOLEVBQWMsQ0FBQ0UsU0FBUyxDQUFDQyxTQUFYLEVBQXNCRCxTQUFTLENBQUNHLE9BQWhDLENBQWQsRUFBd0QsRUFBeEQsQ0FBUDtBQUNEOztBQUVNLFNBQVNDLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCO0FBQ2pDLFNBQU9DLFFBQVEsQ0FBQ04sU0FBUyxDQUFDTyxXQUFYLEVBQXdCRixLQUF4QixDQUFmO0FBQ0Q7O0FBRU0sU0FBU0csUUFBVCxDQUFrQkgsS0FBbEIsRUFBeUI7QUFDOUIsU0FBT0MsUUFBUSxDQUFDTixTQUFTLENBQUNTLE9BQVgsRUFBb0JKLEtBQXBCLENBQWY7QUFDRDs7QUFFTSxTQUFTSyxVQUFULENBQW9CTCxLQUFwQixFQUEyQjtBQUNoQyxTQUFPQyxRQUFRLENBQUNOLFNBQVMsQ0FBQ1csU0FBWCxFQUFzQk4sS0FBdEIsQ0FBZjtBQUNEOztBQUVNLFNBQVNPLFVBQVQsQ0FBb0JDLFFBQXBCLEVBQThCcEIsSUFBOUIsRUFBb0M7QUFBQTs7QUFDekMsNkJBQ0dPLFNBQVMsQ0FBQ0MsU0FEYixvRUFFS0QsU0FBUyxDQUFDRyxPQUZmLEVBRXlCVixJQUZ6Qix5Q0FHS08sU0FBUyxDQUFDYyxRQUhmLEVBRzBCRCxRQUFRLENBQUNiLFNBQVMsQ0FBQ2UsT0FBWCxDQUFSLEdBQ2xCRixRQURrQixHQUVsQkwsUUFBUSxDQUFDSyxRQUFELENBTGhCO0FBUUQ7O0FBRU0sU0FBU1AsUUFBVCxDQUFrQlUsRUFBbEIsRUFBc0JYLEtBQXRCLEVBQTZCO0FBQ2xDLDZCQUNHTCxTQUFTLENBQUNlLE9BRGIsc0JBRUtDLEVBRkwsRUFFVUMsS0FBSyxDQUFDQyxPQUFOLENBQWNiLEtBQWQsSUFBdUJBLEtBQXZCLEdBQStCLENBQUNBLEtBQUQsQ0FGekM7QUFLRDs7QUFFTSxTQUFTYyxjQUFULENBQXdCZCxLQUF4QixFQUErQjtBQUNwQyxNQUFNZSxTQUFTLEdBQUcsb0JBQU1mLEtBQU4sQ0FBbEI7QUFDQSxTQUFPLHFCQUFPZSxTQUFQLEVBQWtCcEIsU0FBUyxDQUFDcUIsV0FBNUIsTUFBNkNoQixLQUE3QyxHQUNILHFCQUFPZSxTQUFQLEVBQWtCcEIsU0FBUyxDQUFDc0IsY0FBNUIsQ0FERyxHQUVIakIsS0FGSjtBQUdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IHBhcnNlLCBmb3JtYXQgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlUGF0aCh0YXJnZXQsIFtrZXksIC4uLnBhdGhdLCBkYXRhKSB7XG4gIHJldHVybiB7XG4gICAgLi4udGFyZ2V0LFxuICAgIFtrZXldOiBwYXRoLmxlbmd0aCA/IG1lcmdlUGF0aChfLmdldCh0YXJnZXQsIGtleSwge30pLCBwYXRoLCBkYXRhKSA6IGRhdGEsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc05lc3RlZChmaWx0ZXIpIHtcbiAgcmV0dXJuIGZpbHRlciAmJiBmaWx0ZXIuaGFzT3duUHJvcGVydHkoQ09OU1RBTlRTLkVTX05FU1RFRCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkUGF0aChmaWx0ZXIpIHtcbiAgcmV0dXJuIF8uZ2V0KGZpbHRlciwgW0NPTlNUQU5UUy5FU19ORVNURUQsIENPTlNUQU5UUy5FU19QQVRIXSwgJycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE11c3ROb3QodmFsdWUpIHtcbiAgcmV0dXJuIHdyYXBCb29sKENPTlNUQU5UUy5FU19NVVNUX05PVCwgdmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE11c3QodmFsdWUpIHtcbiAgcmV0dXJuIHdyYXBCb29sKENPTlNUQU5UUy5FU19NVVNULCB2YWx1ZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwU2hvdWxkKHZhbHVlKSB7XG4gIHJldHVybiB3cmFwQm9vbChDT05TVEFOVFMuRVNfU0hPVUxELCB2YWx1ZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTmVzdGVkKGVzRmlsdGVyLCBwYXRoKSB7XG4gIHJldHVybiB7XG4gICAgW0NPTlNUQU5UUy5FU19ORVNURURdOiB7XG4gICAgICBbQ09OU1RBTlRTLkVTX1BBVEhdOiBwYXRoLFxuICAgICAgW0NPTlNUQU5UUy5FU19RVUVSWV06IGVzRmlsdGVyW0NPTlNUQU5UUy5FU19CT09MXVxuICAgICAgICA/IGVzRmlsdGVyXG4gICAgICAgIDogd3JhcE11c3QoZXNGaWx0ZXIpLFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwQm9vbChvcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBbQ09OU1RBTlRTLkVTX0JPT0xdOiB7XG4gICAgICBbb3BdOiBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW3ZhbHVlXSxcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9Fc1JhbmdlVmFsdWUodmFsdWUpIHtcbiAgY29uc3QgZGF0ZVZhbHVlID0gcGFyc2UodmFsdWUpO1xuICByZXR1cm4gZm9ybWF0KGRhdGVWYWx1ZSwgQ09OU1RBTlRTLkRBVEVfRk9STUFUKSA9PT0gdmFsdWVcbiAgICA/IGZvcm1hdChkYXRlVmFsdWUsIENPTlNUQU5UUy5FU19EQVRFX0ZPUk1BVClcbiAgICA6IHZhbHVlO1xufVxuIl19