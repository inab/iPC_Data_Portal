'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../styles');

var _OverflowContainer2 = require('../OverflowContainer');

var _OverflowContainer3 = _interopRequireDefault(_OverflowContainer2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return _extends({
    // This TabList theme variable is defined here because the border is visually
    // associated with TabList, but for styling reasons, it is applied to TabPanel
    TabList_border: '1px solid ' + baseTheme.borderColor,

    TabPanel_gap: baseTheme.space_inline_md

  }, baseTheme);
};

var styles = {
  container: {
    flex: '1 1 auto',

    '& > :first-child': {
      marginTop: 0
    },

    '& > :last-child': {
      marginBottom: 0
    }
  },
  root: function root(_ref) {
    var _ref2;

    var position = _ref.position,
        baseTheme = _ref.theme;

    var theme = componentTheme(baseTheme);
    var rtl = theme.direction === 'rtl';

    var orientation = {
      bottom: 'Bottom',
      end: rtl ? 'Left' : 'Right',
      start: rtl ? 'Right' : 'Left',
      top: 'Top'
    };
    var borderProperty = 'border' + orientation[position];
    var marginProperty = 'margin' + orientation[position];
    var paddingProperty = 'padding' + orientation[position];

    return _ref2 = {}, _defineProperty(_ref2, borderProperty, theme.TabList_border), _defineProperty(_ref2, 'display', 'flex'), _defineProperty(_ref2, 'flex', '1 1 auto'), _defineProperty(_ref2, marginProperty, theme.TabList_border && -theme.TabList_border.split('px')[0]), _defineProperty(_ref2, 'minHeight', '0%'), _defineProperty(_ref2, paddingProperty, theme.TabPanel_gap), _ref2;
  }
};

var OverflowContainer = (0, _styles.createStyledComponent)(_OverflowContainer3.default, styles.container, {
  withProps: {
    scrollY: true,
    // We always want the panel content to be focusable, for ease of keyboard users
    tabIndex: 0
  }
});
var Root = (0, _styles.createStyledComponent)('div', styles.root, {
  displayName: 'TabPanel',
  withProps: {
    role: 'tabpanel'
  }
});

/**
 * TabPanel
 */

var TabPanel = function (_Component) {
  _inherits(TabPanel, _Component);

  function TabPanel() {
    _classCallCheck(this, TabPanel);

    return _possibleConstructorReturn(this, (TabPanel.__proto__ || Object.getPrototypeOf(TabPanel)).apply(this, arguments));
  }

  _createClass(TabPanel, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          tabId = _props.tabId,
          restProps = _objectWithoutProperties(_props, ['children', 'tabId']);

      var rootProps = _extends({
        'aria-labelledby': tabId
      }, restProps);
      return _react2.default.createElement(
        Root,
        rootProps,
        _jsx(OverflowContainer, {}, void 0, children)
      );
    }
  }]);

  return TabPanel;
}(_react.Component);

exports.default = TabPanel;
TabPanel.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Content of TabPanel */
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },

  /** Id of TabPanel */
  id: _propTypes2.default.string,

  /** Id of the associated Tab */
  tabId: _propTypes2.default.string
} : {};