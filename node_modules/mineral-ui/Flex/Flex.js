'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _themes = require('../themes');

var _styles = require('../styles');

var _getResponsiveStyles = require('../styles/getResponsiveStyles');

var _getResponsiveStyles2 = _interopRequireDefault(_getResponsiveStyles);

var _Box = require('../Box');

var _Box2 = _interopRequireDefault(_Box);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var bpfrpt_proptype_Values = _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]);

var getAlignment = function getAlignment(value) {
  return ['start', 'end'].indexOf(value) !== -1 ? 'flex-' + value : value;
};

var getGutterSize = function getGutterSize(theme, value) {
  return typeof value === 'number' && value !== 0 ? (0, _styles.pxToEm)(value) : theme['space_inline_' + value] || value;
};

var getIndexedValue = function getIndexedValue(property, index) {
  return property && Array.isArray(property) && index !== undefined ? property[index] : property;
};

var getJustification = function getJustification(value) {
  return ['around', 'between', 'evenly'].indexOf(value) !== -1 ? 'space-' + value : getAlignment(value);
};

var getMarginOrGutter = function getMarginOrGutter(_ref) {
  var gutterWidth = _ref.gutterWidth,
      index = _ref.index,
      margin = _ref.margin,
      marginEnd = _ref.marginEnd,
      marginHorizontal = _ref.marginHorizontal,
      marginStart = _ref.marginStart,
      start = _ref.start,
      theme = _ref.theme;

  return getIndexedValue(start ? marginStart : marginEnd, index) || getIndexedValue(marginHorizontal, index) || getIndexedValue(margin, index) || getGutterSize(theme, gutterWidth);
};

var getMarginProps = function getMarginProps(_ref2) {
  var direction = _ref2.direction,
      gutterWidth = _ref2.gutterWidth,
      theme = _ref2.theme,
      restProps = _objectWithoutProperties(_ref2, ['direction', 'gutterWidth', 'theme']);

  if (Array.isArray(direction)) {
    return direction.reduce(function (acc, _, index) {
      var value = (0, _getResponsiveStyles.getPrevNonNull)(direction, index);

      if (value === 'row' || value === 'row-reverse') {
        pushMarginProps(_extends({
          direction: value,
          index: index,
          gutterWidth: gutterWidth,
          props: acc,
          theme: theme
        }, restProps));
      } else {
        pushMarginProps(_extends({
          index: index,
          gutterWidth: 0,
          props: acc,
          theme: theme
        }, restProps));
      }
      return acc;
    }, { marginStart: [], marginEnd: [] });
  } else if (direction === 'row' || direction === 'row-reverse') {
    var flip = direction === 'row-reverse';
    var marginProperty = flip ? 'marginStart' : 'marginEnd';

    return _defineProperty({}, marginProperty, getMarginOrGutter(_extends({}, restProps, {
      gutterWidth: gutterWidth,
      start: flip,
      theme: theme
    })));
  }
};

var pushMarginProps = function pushMarginProps(_ref4) {
  var direction = _ref4.direction,
      index = _ref4.index,
      gutterWidth = _ref4.gutterWidth,
      props = _ref4.props,
      theme = _ref4.theme,
      restProps = _objectWithoutProperties(_ref4, ['direction', 'index', 'gutterWidth', 'props', 'theme']);

  var flip = direction === 'row-reverse';
  props.marginEnd.push(getMarginOrGutter(_extends({}, restProps, {
    gutterWidth: flip ? 0 : gutterWidth,
    index: index,
    theme: theme
  })));
  props.marginStart.push(getMarginOrGutter(_extends({}, restProps, {
    gutterWidth: flip ? gutterWidth : 0,
    index: index,
    start: true,
    theme: theme
  })));
};

var styles = {
  root: function root(_ref5) {
    var breakpoints = _ref5.breakpoints,
        alignItems = _ref5.alignItems,
        direction = _ref5.direction,
        inline = _ref5.inline,
        justifyContent = _ref5.justifyContent,
        theme = _ref5.theme,
        wrap = _ref5.wrap;

    var mapValueToProperty = function mapValueToProperty(property, value) {
      var map = {
        alignItems: getAlignment,
        display: function display(value) {
          return value === undefined || value === false ? 'flex' : 'inline-flex';
        },
        flexDirection: function flexDirection(value) {
          return value;
        },
        flexWrap: function flexWrap(value) {
          return value ? 'wrap' : value === false ? 'nowrap' : value;
        },
        justifyContent: getJustification
      };

      return map[property](value);
    };

    return (0, _getResponsiveStyles2.default)({
      breakpoints: breakpoints,
      mapValueToProperty: mapValueToProperty,
      styles: {
        alignItems: alignItems,
        display: inline,
        flexDirection: direction,
        flexWrap: wrap,
        justifyContent: justifyContent
      },
      theme: theme
    });
  }
};

var Root = (0, _styles.createStyledComponent)(_Box2.default, styles.root, {
  displayName: 'Flex',
  filterProps: ['inline']
});

var ThemedRoot = (0, _themes.withTheme)(function (_ref6) {
  var breakpoints = _ref6.breakpoints,
      children = _ref6.children,
      direction = _ref6.direction,
      gutterWidth = _ref6.gutterWidth,
      theme = _ref6.theme,
      restProps = _objectWithoutProperties(_ref6, ['breakpoints', 'children', 'direction', 'gutterWidth', 'theme']);

  var rootProps = _extends({
    breakpoints: breakpoints,
    direction: direction,
    gutterWidth: gutterWidth
  }, restProps);

  var flexItems = void 0;
  flexItems = _react.Children.map(children, function (child, index) {
    if (child && child.props) {
      var _child$props = child.props,
          propBreakpoints = _child$props.breakpoints,
          restChildProps = _objectWithoutProperties(_child$props, ['breakpoints']);

      var props = {
        breakpoints: propBreakpoints || breakpoints
      };

      var flexItemsCount = _react.Children.count(children);
      if (gutterWidth && index < flexItemsCount - 1) {
        props = _extends({}, props, getMarginProps(_extends({
          direction: direction,
          gutterWidth: gutterWidth,
          theme: theme
        }, restChildProps)));
      }
      return (0, _react.cloneElement)(child, props);
    }
    return child;
  });

  return _react2.default.createElement(
    Root,
    rootProps,
    flexItems
  );
});

/**
 * Flex component is used together with [FlexItem](/components/flex-item) to lay out
 * other components in a flexible, and optionally responsive, manner.
 */
var Flex = function Flex(props) {
  return _react2.default.createElement(ThemedRoot, props);
};

Flex.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Align items along the cross axis [[Responsive-capable]](#responsive) */
  alignItems: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['start']), _propTypes2.default.oneOf(['end']), _propTypes2.default.oneOf(['center']), _propTypes2.default.oneOf(['stretch']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['start', 'end', 'center', 'stretch']))]),

  /**
   * Media query (min-width) breakpoints along which to apply props marked
   * "&#xfeff;[[Responsive-capable]](#responsive)&#xfeff;"
   */
  breakpoints: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired),

  /** Must be [FlexItem(s)](./flex-item). */
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },

  /**
   * Direction of flow of items along the main axis
   * [[Responsive-capable]](#responsive)
   */
  direction: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['column']), _propTypes2.default.oneOf(['column-reverse']), _propTypes2.default.oneOf(['row']), _propTypes2.default.oneOf(['row-reverse']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['column', 'column-reverse', 'row', 'row-reverse']))]),

  /** Size of gap between children */
  gutterWidth: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['xxs']), _propTypes2.default.oneOf(['xs']), _propTypes2.default.oneOf(['sm']), _propTypes2.default.oneOf(['md']), _propTypes2.default.oneOf(['lg']), _propTypes2.default.oneOf(['xl']), _propTypes2.default.oneOf(['xxl']), _propTypes2.default.number, _propTypes2.default.string]),

  /** Align items along the main axis [[Responsive-capable]](#responsive) */
  justifyContent: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['start']), _propTypes2.default.oneOf(['end']), _propTypes2.default.oneOf(['center']), _propTypes2.default.oneOf(['around']), _propTypes2.default.oneOf(['between']), _propTypes2.default.oneOf(['evenly']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['start', 'end', 'center', 'around', 'between', 'evenly']))]),

  /**
   * Determines if items can wrap along main axis
   * [[Responsive-capable]](#responsive)
   */
  wrap: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.arrayOf(_propTypes2.default.bool)])
} : {};
Flex.defaultProps = {
  alignItems: 'stretch',
  direction: 'row',
  gutterWidth: 'md',
  justifyContent: 'start'
};

exports.default = Flex;