var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React, { Children, cloneElement } from 'react';

import { createStyledComponent, getNormalizedValue, pxToEm } from '../styles';
import IconDanger from '../Icon/IconDanger';
import IconSuccess from '../Icon/IconSuccess';
import IconWarning from '../Icon/IconWarning';
import CardRow from './CardRow';

export var componentTheme = function componentTheme(baseTheme) {
  return _extends({
    CardTitle_color: baseTheme.h4_color,
    CardTitle_fontSize: baseTheme.h4_fontSize,
    CardTitle_fontWeight: baseTheme.h4_fontWeight,

    CardTitleAvatar_margin: baseTheme.space_inline_sm,
    CardTitleAvatarSize: baseTheme.size_small,
    CardTitleAvatarSize_large: baseTheme.size_large,

    CardTitleIcon_margin: baseTheme.space_inline_sm,

    CardTitleSecondaryText_color: baseTheme.color_mouse,
    CardTitleSecondaryText_fontSize: baseTheme.fontSize_mouse,
    CardTitleSecondaryText_fontWeight: baseTheme.fontWeight_regular,

    CardSubtitle_color: baseTheme.color_mouse,
    CardSubtitle_fontSize: baseTheme.fontSize_mouse,
    CardSubtitle_fontWeight: baseTheme.fontWeight_regular,
    CardSubtitle_marginTop: baseTheme.space_stack_sm

  }, baseTheme);
};

var styles = {
  avatar: function avatar(_ref) {
    var subtitle = _ref.subtitle,
        baseTheme = _ref.theme;

    var theme = componentTheme(baseTheme);
    var rtl = theme.direction === 'rtl';
    var width = subtitle ? theme.CardTitleAvatarSize_large : theme.CardTitleAvatarSize;

    return {
      flex: '0 0 auto',
      marginLeft: rtl ? theme.CardTitleAvatar_margin : null,
      marginRight: rtl ? null : theme.CardTitleAvatar_margin,
      width: width,

      '&[class] > *': {
        height: 'auto',
        width: '100%'
      }
    };
  },
  inner: {
    flex: '1 1 auto'
  },
  secondaryText: function secondaryText(props) {
    var theme = componentTheme(props.theme);
    var fontSize = theme.CardTitleSecondaryText_fontSize;

    return _extends({
      color: theme.CardTitleSecondaryText_color,
      flex: '0 0 auto',
      fontSize: fontSize,
      fontWeight: theme.CardTitleSecondaryText_fontWeight,
      transform: 'translateY(' + getNormalizedValue(pxToEm(5), fontSize) + ')' }, {
      display: 'inline-block',
      maxWidth: '33%',
      overflow: 'hidden',
      textOverflow: 'ellipsis',
      whiteSpace: 'nowrap',
      wordWrap: 'normal'
    });
  },
  root: {
    display: 'flex'
  },
  subtitle: function subtitle(_ref2) {
    var avatar = _ref2.avatar,
        baseTheme = _ref2.theme;

    var theme = componentTheme(baseTheme);
    var fontSize = theme.CardSubtitle_fontSize;

    return {
      color: theme.CardSubtitle_color,
      fontSize: fontSize,
      fontWeight: theme.CardSubtitle_fontWeight,
      margin: 0,
      marginTop: avatar ? null : getNormalizedValue(theme.CardSubtitle_marginTop, fontSize)
    };
  },
  title: function title(_ref3) {
    var baseTheme = _ref3.theme,
        variant = _ref3.variant;

    var theme = componentTheme(baseTheme);
    var rtl = theme.direction === 'rtl';

    return {
      alignItems: 'flex-start',
      display: 'flex',

      '& > [role="img"]': {
        color: variant ? theme['icon_color_' + variant] : null,
        marginLeft: rtl ? theme.CardTitleIcon_margin : null,
        marginRight: rtl ? null : theme.CardTitleIcon_margin,
        position: 'relative',
        top: pxToEm(4) // optical alignment
      }
    };
  },
  titleContent: function titleContent(_ref4) {
    var actions = _ref4.actions,
        baseTheme = _ref4.theme;

    var theme = componentTheme(baseTheme);
    var rtl = theme.direction === 'rtl';
    var fontSize = theme.CardTitle_fontSize;
    var actionsMargin = getNormalizedValue(theme.CardTitleIcon_margin, fontSize);

    return {
      color: theme.CardTitle_color,
      flex: '1 1 auto',
      fontSize: fontSize,
      fontWeight: theme.CardTitle_fontWeight,
      margin: 0,
      marginLeft: actions && rtl ? actionsMargin : null,
      marginRight: actions && !rtl ? actionsMargin : null
    };
  }
};

var Root = createStyledComponent(CardRow, styles.root, {
  displayName: 'CardTitle'
});
var Avatar = createStyledComponent('span', styles.avatar);
var Inner = createStyledComponent('div', styles.inner);
var SecondaryText = createStyledComponent('span', styles.secondaryText);
var Subtitle = createStyledComponent('h4', styles.subtitle);
var Title = createStyledComponent('div', styles.title);
var TitleContent = createStyledComponent('h3', styles.titleContent);

var variantIcons = {
  danger: _jsx(IconDanger, {
    size: 'medium'
  }),
  success: _jsx(IconSuccess, {
    size: 'medium'
  }),
  warning: _jsx(IconWarning, {
    size: 'medium'
  })
};

/**
 * CardTitle displays a Card title and an optional subtitle.
 * You can put CardTitle in any order in relation to other root components of
 * [Card](/components/card).
 */
export default function CardTitle(props) {
  var actions = props.actions,
      avatar = props.avatar,
      children = props.children,
      secondaryText = props.secondaryText,
      subtitle = props.subtitle,
      variant = props.variant,
      restProps = _objectWithoutProperties(props, ['actions', 'avatar', 'children', 'secondaryText', 'subtitle', 'variant']);

  var rootProps = _extends({}, restProps);

  var secondaryComponent = actions ? Children.map(actions, function (action, index) {
    return cloneElement(action, { key: index });
  }) : secondaryText ? _jsx(SecondaryText, {}, void 0, secondaryText) : null;

  return React.createElement(
    Root,
    rootProps,
    avatar && _jsx(Avatar, {
      subtitle: subtitle
    }, void 0, avatar),
    _jsx(Inner, {}, void 0, _jsx(Title, {
      variant: variant
    }, void 0, variant && variantIcons[variant], _jsx(TitleContent, {
      actions: actions
    }, void 0, children), secondaryComponent), subtitle && _jsx(Subtitle, {
      avatar: avatar
    }, void 0, subtitle))
  );
}
CardTitle.propTypes = process.env.NODE_ENV !== "production" ? {
  /** See the [Actions Menu](#actions-menu) example (will take precedence over `secondaryText`) */
  actions: function actions() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },

  /** Avatar image displayed beside the title */
  avatar: PropTypes.oneOfType([PropTypes.string, function () {
    return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
  }]),

  /** Title of Card */
  children: function children() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node).isRequired : PropTypes.any.isRequired).apply(this, arguments);
  },

  /** Information displayed beside the title (`actions` will take precedence over this) */
  secondaryText: PropTypes.oneOfType([PropTypes.string, function () {
    return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
  }]),

  /** Subtitle displayed under the title */
  subtitle: function subtitle() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },

  /** Available variants */
  variant: PropTypes.oneOf(['danger', 'success', 'warning'])
} : {};
import PropTypes from 'prop-types';