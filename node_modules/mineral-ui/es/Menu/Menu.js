var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import { createStyledComponent } from '../styles';
import { MenuDivider, MenuGroup, MenuItem } from './index';

var bpfrpt_proptype_Item = {
  iconEnd: function iconEnd() {
    return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
  },
  iconStart: function iconStart() {
    return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
  },
  disabled: PropTypes.bool,
  divider: PropTypes.bool,
  onClick: PropTypes.func,
  render: function render() {
    return (typeof RenderFn === 'function' ? PropTypes.instanceOf(RenderFn) : PropTypes.any).apply(this, arguments);
  },
  secondaryText: function secondaryText() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },
  text: function text() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },
  value: PropTypes.string,
  variant: PropTypes.oneOf(['danger', 'success', 'warning'])
};
var bpfrpt_proptype_Items = PropTypes.arrayOf(PropTypes.shape({
  iconEnd: function iconEnd() {
    return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
  },
  iconStart: function iconStart() {
    return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
  },
  disabled: PropTypes.bool,
  divider: PropTypes.bool,
  onClick: PropTypes.func,
  render: function render() {
    return (typeof RenderFn === 'function' ? PropTypes.instanceOf(RenderFn) : PropTypes.any).apply(this, arguments);
  },
  secondaryText: function secondaryText() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },
  text: function text() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },
  value: PropTypes.string,
  variant: PropTypes.oneOf(['danger', 'success', 'warning'])
}).isRequired);
var bpfrpt_proptype_ItemGroup = {
  items: PropTypes.arrayOf(PropTypes.shape({
    iconEnd: function iconEnd() {
      return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
    },
    iconStart: function iconStart() {
      return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
    },
    disabled: PropTypes.bool,
    divider: PropTypes.bool,
    onClick: PropTypes.func,
    render: function render() {
      return (typeof RenderFn === 'function' ? PropTypes.instanceOf(RenderFn) : PropTypes.any).apply(this, arguments);
    },
    secondaryText: function secondaryText() {
      return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
    },
    text: function text() {
      return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
    },
    value: PropTypes.string,
    variant: PropTypes.oneOf(['danger', 'success', 'warning'])
  }).isRequired).isRequired,
  title: function title() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  }
};
var bpfrpt_proptype_ItemGroups = PropTypes.arrayOf(PropTypes.shape({
  items: PropTypes.arrayOf(PropTypes.shape({
    iconEnd: function iconEnd() {
      return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
    },
    iconStart: function iconStart() {
      return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
    },
    disabled: PropTypes.bool,
    divider: PropTypes.bool,
    onClick: PropTypes.func,
    render: function render() {
      return (typeof RenderFn === 'function' ? PropTypes.instanceOf(RenderFn) : PropTypes.any).apply(this, arguments);
    },
    secondaryText: function secondaryText() {
      return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
    },
    text: function text() {
      return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
    },
    value: PropTypes.string,
    variant: PropTypes.oneOf(['danger', 'success', 'warning'])
  }).isRequired).isRequired,
  title: function title() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  }
}).isRequired);


var Root = createStyledComponent('div', {}, {
  displayName: 'Menu',
  includeStyleReset: true
});

var isGroupedData = function isGroupedData(data) {
  return data.length && data[0].hasOwnProperty('items');
};

var groupifyData = function groupifyData(data) {
  return isGroupedData(data) ? data : [{ items: data }];
};

export var getItems = function getItems(data) {
  // $FlowFixMe https://github.com/facebook/flow/issues/5885
  var itemGroups = groupifyData(data);
  return itemGroups.reduce(function (acc, group) {
    return group.items && group.items.length ? acc.concat(group.items.filter(function (item) {
      return !item.divider;
    })) : acc;
  }, []);
};

/**
 * A Menu presents a list of options representing actions or navigation.
 * Composed of [MenuItems](/components/menu-item), Menu is usually combined with
 * [Popover](/components/popover) to create a [Dropdown](/components/dropdown).
 *
 * Menus are great for collecting actions in one place so your users don't need
 * to scan the entire document to find a feature.
 */

var Menu = function (_PureComponent) {
  _inherits(Menu, _PureComponent);

  function Menu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Menu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Menu.__proto__ || Object.getPrototypeOf(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.renderFromData = function (data) {
      var highlightedIndex = _this.props.highlightedIndex;
      // $FlowFixMe https://github.com/facebook/flow/issues/5885

      var itemGroups = groupifyData(data);

      return itemGroups.reduce(function (acc, group, groupIndex) {
        if (!group.items || !group.items.length) {
          return acc;
        }

        var menuGroup = _jsx(MenuGroup, {
          title: group.title
        }, groupIndex, group.items.map(function (item) {
          return _this.renderItem({
            props: {
              isHighlighted: highlightedIndex === acc.index,
              index: item.divider ? acc.index : acc.index++,
              item: item
            }
          });
        }));

        acc.groups.push(menuGroup);

        return acc;
      }, { groups: [], index: 0 }).groups;
    }, _this.getItemProps = function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var itemProps = props.props;
      var index = itemProps.index,
          item = itemProps.item;
      var _this$props = _this.props,
          render = _this$props.item,
          itemKey = _this$props.itemKey;


      return _extends({}, itemProps, item, {
        children: item.text,
        key: item[itemKey] || index,
        render: render
      });
    }, _this.renderItem = function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var itemProps = props.props;
      var index = itemProps.index,
          item = itemProps.item;


      if (item.divider) {
        return _jsx(MenuDivider, {}, index);
      } else {
        return React.createElement(MenuItem, _this.getItemProps(props));
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Menu, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          data = _props.data,
          rootProps = _objectWithoutProperties(_props, ['children', 'data']);

      return React.createElement(
        Root,
        rootProps,
        data ? this.renderFromData(data) : children
      );
    }
  }]);

  return Menu;
}(PureComponent);

export default Menu;
Menu.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * [MenuDivider](/components/menu-divider),
   * [MenuGroup](/components/menu-group),
   * or [MenuItem](/components/menu-item)
   */
  children: function children() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },

  /** Data used to contruct Menu. See [example](#data) */
  data: PropTypes.oneOfType([function () {
    return (typeof Items === 'function' ? PropTypes.instanceOf(Items) : PropTypes.any).apply(this, arguments);
  }, function () {
    return (typeof ItemGroups === 'function' ? PropTypes.instanceOf(ItemGroups) : PropTypes.any).apply(this, arguments);
  }]),

  /** @Private Index of the highlighted item. Used by Dropdown and Select. */
  highlightedIndex: PropTypes.number,

  /**
   * Provides custom rendering control for the items. See the
   * [custom item example](/components/menu#custom-item) and
   * our [render props guide](/render-props).
   */
  item: function item() {
    return (typeof RenderFn === 'function' ? PropTypes.instanceOf(RenderFn) : PropTypes.any).apply(this, arguments);
  },

  /**
   * Specifies a key in the item data that gives an item its unique identity.
   * See the [React docs](https://reactjs.org/docs/lists-and-keys.html#keys).
   */
  itemKey: PropTypes.string
} : {};
import PropTypes from 'prop-types';