var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';
import { createStyledComponent } from '../styles';

export var componentTheme = function componentTheme(baseTheme) {
  return _extends({
    MenuDivider_borderColor: baseTheme.borderColor,
    MenuDivider_borderWidth: '1px',
    MenuDivider_margin: baseTheme.space_stack_sm

  }, baseTheme);
};

var Root = createStyledComponent('div', function (props) {
  var theme = componentTheme(props.theme);

  return {
    backgroundColor: theme.MenuDivider_borderColor,
    height: theme.MenuDivider_borderWidth,
    margin: theme.MenuDivider_margin + ' 0'
  };
}, {
  displayName: 'MenuDivider'
});

/**
 * MenuDividers separate [MenuItems](/components/menu-item) and [MenuGroups](/components/menu-group) to establish hierarchy in a [Menu](/components/menu) with several options.
 *
 * MenuDividers are not merely design elements to visually separate options.
 * Rather, the are a way to logically group choices.
 * Too many dividers will add unnecessary weight to your Menu.
 */
export default function MenuDivider(props) {
  return React.createElement(Root, _extends({}, props, { role: 'separator' }));
}