var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';

import { createStyledComponent } from '../styles';
import { TableContext } from './TableBase';

export var componentTheme = function componentTheme(baseTheme) {
  return _extends({
    TableHeader_borderBottom: '2px solid ' + baseTheme.borderColor,
    TableHeader_borderBottom_highContrast: '2px solid ' + baseTheme.color_gray_80,
    TableHeader_borderTop: '1px solid ' + baseTheme.borderColor,
    TableHeader_borderTop_highContrast: '1px solid ' + baseTheme.color_gray_80
  }, baseTheme);
};

var Root = createStyledComponent('thead', function (_ref) {
  var hide = _ref.hide,
      highContrast = _ref.highContrast,
      baseTheme = _ref.theme;

  var theme = componentTheme(baseTheme);

  return hide ? {
    border: '0',
    clip: 'rect(0 0 0 0)',
    clipPath: 'inset(50%)',
    height: '1px',
    margin: '-1px',
    overflow: 'hidden',
    padding: '0',
    position: 'absolute',
    whiteSpace: 'nowrap',
    width: '1px'
  } : {
    borderBottom: highContrast ? theme.TableHeader_borderBottom_highContrast : theme.TableHeader_borderBottom,
    borderTop: highContrast ? theme.TableHeader_borderTop_highContrast : theme.TableHeader_borderTop
  };
}, {
  displayName: 'TableHeader',
  rootEl: 'thead'
});

/**
 * TableHeader
 */

var TableHeader = function (_PureComponent) {
  _inherits(TableHeader, _PureComponent);

  function TableHeader() {
    _classCallCheck(this, TableHeader);

    return _possibleConstructorReturn(this, (TableHeader.__proto__ || Object.getPrototypeOf(TableHeader)).apply(this, arguments));
  }

  _createClass(TableHeader, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _jsx(TableContext.Consumer, {}, void 0, function (_ref2) {
        var highContrast = _ref2.highContrast;

        var _props = _this2.props,
            children = _props.children,
            restProps = _objectWithoutProperties(_props, ['children']);

        var rootProps = _extends({ highContrast: highContrast }, restProps);
        return React.createElement(
          Root,
          rootProps,
          children
        );
      });
    }
  }]);

  return TableHeader;
}(PureComponent);

export default TableHeader;
TableHeader.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Rendered content must be TR */
  children: function children() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node).isRequired : PropTypes.any.isRequired).apply(this, arguments);
  },

  /** Hide visually */
  hide: PropTypes.bool
} : {};
import PropTypes from 'prop-types';