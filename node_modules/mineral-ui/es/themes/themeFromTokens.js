import pxToEm from '../styles/pxToEm';
import colorAliases from './generated/colorAliases';

var bpfrpt_proptype_Ramp = PropTypes.objectOf(PropTypes.string.isRequired);


var contains = function contains(string, subString) {
  return string.indexOf(subString) !== -1;
};

var newKey = function newKey(key) {
  return key.replace('brand', 'theme');
};

var remToEm = function remToEm(value) {
  return value.replace('rem', 'em');
};

export default function (tokens) {
  return Object.keys(tokens).reduce(function (acc, key) {
    var value = tokens[key];
    if (typeof value === 'string') {
      if (value.split('px').length === 2 && !contains(key, 'breakpoint')) {
        value = pxToEm(value);
      } else if (contains(key, 'fontSize')) {
        value = remToEm(value);
      }
    }

    acc[newKey(key)] = value;
    return acc;
  }, {});
}

export function themeFromColorTokens(_ref) {
  var _ref$aliases = _ref.aliases,
      aliases = _ref$aliases === undefined ? colorAliases : _ref$aliases,
      color = _ref.color,
      colorName = _ref.colorName,
      tokens = _ref.tokens;

  return Object.keys(tokens).reduce(function (acc, key) {
    var value = tokens[key];
    if (typeof color === 'string') {
      value = color;
    } else {
      var rampKey = parseInt(aliases[key].split('_')[1]);
      if (rampKey) {
        if (color[rampKey]) {
          value = color[rampKey];
        } else {
          throw new Error('[mineral-ui/themes/createTheme]: colors.' + colorName + '[' + rampKey + '] is missing.\n  See https://github.com/mineral-ui/mineral-ui/blob/master/packages/mineral-ui-tokens/src/blue.js for an example color ramp.');
        }
      }
    }

    acc[newKey(key)] = value;
    return acc;
  }, {});
}
import PropTypes from 'prop-types';