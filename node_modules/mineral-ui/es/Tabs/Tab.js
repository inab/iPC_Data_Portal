var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import { createStyledComponent } from '../styles';
import { createThemedComponent } from '../themes';
import Button from '../Button';
import Truncate from '../Truncate';

export var componentTheme = function componentTheme(baseTheme) {
  return _extends({
    Tab_backgroundColor_selected: baseTheme.backgroundColor_theme_selected,
    Tab_borderColor_focus: baseTheme.borderColor_theme_focus,
    Tab_borderWidth_focus: 1,
    Tab_color: baseTheme.color_gray_80,
    Tab_color_selected: baseTheme.color_theme_70,
    Tab_color_selectedHover: baseTheme.color_theme,

    TabIndicator_thickness: 2

  }, baseTheme);
};

var styles = {
  anchor: function anchor(_ref) {
    var disabled = _ref.disabled,
        maxWidth = _ref.maxWidth,
        _ref$position = _ref.position,
        position = _ref$position === undefined ? 'top' : _ref$position,
        selected = _ref.selected,
        baseTheme = _ref.theme;

    var theme = componentTheme(baseTheme);
    var rtl = theme.direction === 'rtl';

    var justifyContent = {
      end: 'flex-start',
      start: 'flex-end',
      top: undefined
    };
    var boxShadow = function boxShadow(borderWidth) {
      return {
        top: '0 ' + -borderWidth + 'px',
        start: rtl ? borderWidth + 'px 0' : -borderWidth + 'px 0',
        bottom: '0 ' + borderWidth + 'px',
        end: rtl ? -borderWidth + 'px 0' : borderWidth + 'px 0'
      };
    };

    return _extends({
      maxWidth: maxWidth,

      '&:hover': {
        color: !disabled && theme.Tab_color_selectedHover
      },

      // Truncate
      '&:active > span > span > span > span > span:focus': {
        outline: 'none'
      }

    }, selected && {
      backgroundColor: theme.Tab_backgroundColor_selected,
      color: theme.Tab_color_selected,
      // prettier-ignore
      boxShadow: 'inset ' + boxShadow(theme.TabIndicator_thickness)[position] + ' ' + theme.Tab_borderColor_focus,

      '&:focus, &:active': {
        color: theme.Tab_color_selected,
        outline: theme.Tab_borderWidth_focus + 'px solid ' + theme.Tab_borderColor_focus,
        outlineOffset: '-' + theme.Tab_borderWidth_focus + 'px'
      }
    }, {

      // Button's Inner
      '& > span': {
        justifyContent: justifyContent[position],

        // Content
        '& > span': {
          // Tooltip & TooltipTrigger & Truncate
          '& > span, & > span > span, & > span > span > span': {
            display: 'block'
          }
        }
      }
    });
  }
};

var ThemedButton = createThemedComponent(Button, function (_ref2) {
  var baseTheme = _ref2.theme;

  var theme = componentTheme(baseTheme);
  return {
    Button_backgroundColor_minimal_active: null,
    Button_backgroundColor_minimal_hover: null,
    Button_borderRadius: null,
    Button_borderWidth: 0,
    Button_boxShadow_focus: null,
    Button_color_minimal: theme.Tab_color
  };
});

var Anchor = createStyledComponent(ThemedButton, styles.anchor, {
  displayName: 'Tab',
  filterProps: ['title'],
  withProps: {
    element: 'a',
    fullWidth: true,
    role: 'tab',
    size: 'medium'
  }
});

/**
 * Tab is used within [Tabs](/components/tabs) to define a tab title and panel
 * content.
 */

var Tab = function (_Component) {
  _inherits(Tab, _Component);

  function Tab() {
    _classCallCheck(this, Tab);

    return _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).apply(this, arguments));
  }

  _createClass(Tab, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          disabled = _props.disabled,
          icon = _props.icon,
          index = _props.index,
          panelId = _props.panelId,
          selected = _props.selected,
          restProps = _objectWithoutProperties(_props, ['children', 'disabled', 'icon', 'index', 'panelId', 'selected']);

      var anchorProps = _extends({
        'aria-controls': panelId,
        'aria-disabled': disabled,
        'aria-selected': selected,
        'data-index': index,
        disabled: disabled,
        href: panelId && '#' + panelId,
        iconStart: icon,
        minimal: true,
        selected: selected,
        tabIndex: selected ? 0 : -1
      }, restProps);

      return _jsx('li', {
        role: 'presentation'
      }, void 0, React.createElement(
        Anchor,
        anchorProps,
        _jsx(Truncate, {}, void 0, children)
      ));
    }
  }]);

  return Tab;
}(Component);

export default Tab;
Tab.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Content of the tab panel */
  children: function children() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node) : PropTypes.any).apply(this, arguments);
  },

  /** Disables Tab */
  disabled: PropTypes.bool,

  /** Icon placed before the title */
  icon: function icon() {
    return (typeof React$Element === 'function' ? PropTypes.instanceOf(React$Element) : PropTypes.any).apply(this, arguments);
  },

  /** Id of Tab */
  id: PropTypes.string,

  /** @Private Index of Tab */
  index: PropTypes.number,

  /** Maximum width of Tab */
  maxWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),

  /** @Private Id of the tab panel */
  panelId: PropTypes.string,

  /** @Private Selected state of Tab */
  selected: PropTypes.bool,

  /** Tab title */
  title: function title() {
    return (typeof React$Node === 'function' ? PropTypes.instanceOf(React$Node).isRequired : PropTypes.any.isRequired).apply(this, arguments);
  }
} : {};
import PropTypes from 'prop-types';