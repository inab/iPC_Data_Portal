'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (tokens) {
  return Object.keys(tokens).reduce(function (acc, key) {
    var value = tokens[key];
    if (typeof value === 'string') {
      if (value.split('px').length === 2 && !contains(key, 'breakpoint')) {
        value = (0, _pxToEm2.default)(value);
      } else if (contains(key, 'fontSize')) {
        value = remToEm(value);
      }
    }

    acc[newKey(key)] = value;
    return acc;
  }, {});
};

exports.themeFromColorTokens = themeFromColorTokens;

var _pxToEm = require('../styles/pxToEm');

var _pxToEm2 = _interopRequireDefault(_pxToEm);

var _colorAliases = require('./generated/colorAliases');

var _colorAliases2 = _interopRequireDefault(_colorAliases);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var bpfrpt_proptype_Ramp = _propTypes2.default.objectOf(_propTypes2.default.string.isRequired);

var contains = function contains(string, subString) {
  return string.indexOf(subString) !== -1;
};

var newKey = function newKey(key) {
  return key.replace('brand', 'theme');
};

var remToEm = function remToEm(value) {
  return value.replace('rem', 'em');
};

function themeFromColorTokens(_ref) {
  var _ref$aliases = _ref.aliases,
      aliases = _ref$aliases === undefined ? _colorAliases2.default : _ref$aliases,
      color = _ref.color,
      colorName = _ref.colorName,
      tokens = _ref.tokens;

  return Object.keys(tokens).reduce(function (acc, key) {
    var value = tokens[key];
    if (typeof color === 'string') {
      value = color;
    } else {
      var rampKey = parseInt(aliases[key].split('_')[1]);
      if (rampKey) {
        if (color[rampKey]) {
          value = color[rampKey];
        } else {
          throw new Error('[mineral-ui/themes/createTheme]: colors.' + colorName + '[' + rampKey + '] is missing.\n  See https://github.com/mineral-ui/mineral-ui/blob/master/packages/mineral-ui-tokens/src/blue.js for an example color ramp.');
        }
      }
    }

    acc[newKey(key)] = value;
    return acc;
  }, {});
}