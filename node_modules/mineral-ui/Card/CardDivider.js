'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = CardDivider;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../styles');

var _Card = require('./Card');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return _extends({
    CardDivider_borderColor: baseTheme.borderColor,
    CardDivider_borderWidth: '1px'

  }, baseTheme);
};

var Root = (0, _styles.createStyledComponent)('div', function (props) {
  var theme = _extends({}, componentTheme(props.theme), (0, _Card.componentTheme)(props.theme));

  return {
    backgroundColor: theme.CardDivider_borderColor,
    height: theme.CardDivider_borderWidth,
    margin: theme.CardRow_marginVertical + ' 0'
  };
}, {
  displayName: 'CardDivider'
});

/**
 * CardDividers separate content in [Card](/components/card) to establish hierarchy.
 *
 * Too many dividers will add unnecessary weight to your Card.
 */
function CardDivider(props) {
  return _react2.default.createElement(Root, _extends({}, props, { role: 'separator' }));
}