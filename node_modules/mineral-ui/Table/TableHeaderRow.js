'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactFastCompare = require('react-fast-compare');

var _reactFastCompare2 = _interopRequireDefault(_reactFastCompare);

var _TableSelectableCell = require('./TableSelectableCell');

var _TableSelectableCell2 = _interopRequireDefault(_TableSelectableCell);

var _TableHeaderCell = require('./TableHeaderCell');

var _TableHeaderCell2 = _interopRequireDefault(_TableHeaderCell);

var _TableSortableHeaderCell = require('./TableSortableHeaderCell');

var _TableSortableHeaderCell2 = _interopRequireDefault(_TableSortableHeaderCell);

var _TableRow = require('./TableRow');

var _TableRow2 = _interopRequireDefault(_TableRow);

var _Selectable = require('./Selectable');

var _Sortable = require('./Sortable');

var _Table = require('./Table');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableHeaderRow = function (_Component) {
  _inherits(TableHeaderRow, _Component);

  function TableHeaderRow() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TableHeaderRow);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableHeaderRow.__proto__ || Object.getPrototypeOf(TableHeaderRow)).call.apply(_ref, [this].concat(args))), _this), _this.toggle = function () {
      var toggle = _this.props.toggle;

      toggle && toggle();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TableHeaderRow, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return !(0, _reactFastCompare2.default)(this.props, nextProps);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          checked = _props.checked,
          columns = _props.columns,
          indeterminate = _props.indeterminate,
          isSortable = _props.isSortable,
          tableSortable = _props.sortable,
          messages = _props.messages,
          toggle = _props.toggle,
          restProps = _objectWithoutProperties(_props, ['checked', 'columns', 'indeterminate', 'isSortable', 'sortable', 'messages', 'toggle']);

      var selectable = Boolean(toggle);

      var cells = columns.map(function (_ref2) {
        var render = _ref2.headerCell,
            content = _ref2.content,
            columnSortable = _ref2.sortable,
            key = _ref2.key,
            label = _ref2.label,
            restColumn = _objectWithoutProperties(_ref2, ['headerCell', 'content', 'sortable', 'key', 'label']);

        if (typeof content !== 'string' && !label) {
          throw new Error('Columns with non-string content must define a `label` property.');
        }

        var cellProps = _extends({
          children: content,
          key: key,
          label: label || (typeof content === 'string' ? content : undefined),
          messages: messages,
          render: render,
          sortable: columnSortable === false ? undefined : isSortable || columnSortable ? tableSortable : undefined
        }, restColumn);

        return cellProps.sortable ? _react2.default.createElement(_TableSortableHeaderCell2.default, _extends({ name: key }, cellProps)) : _react2.default.createElement(_TableHeaderCell2.default, cellProps);
      });

      if (selectable) {
        cells.unshift(_jsx(_TableSelectableCell2.default, {
          'aria-label': messages.selectedRows,
          isHeader: true,
          label: checked || indeterminate ? messages.deselectAllRows : messages.selectAllRows,
          checked: checked,
          indeterminate: indeterminate,
          onChange: this.toggle
        }, messages.selectedRows));
      }

      var tableRowProps = _extends({
        children: cells
      }, restProps);

      return _react2.default.createElement(_TableRow2.default, tableRowProps);
    }
  }]);

  return TableHeaderRow;
}(_react.Component);

exports.default = TableHeaderRow;
TableHeaderRow.propTypes = process.env.NODE_ENV !== "production" ? {
  checked: _propTypes2.default.bool,
  columns: function columns() {
    return (typeof _Table.bpfrpt_proptype_Columns === 'function' ? _Table.bpfrpt_proptype_Columns.isRequired ? _Table.bpfrpt_proptype_Columns.isRequired : _Table.bpfrpt_proptype_Columns : _propTypes2.default.shape(_Table.bpfrpt_proptype_Columns).isRequired).apply(this, arguments);
  },
  indeterminate: _propTypes2.default.bool,
  isSortable: _propTypes2.default.bool,
  messages: function messages() {
    return (typeof _Table.bpfrpt_proptype_Messages === 'function' ? _Table.bpfrpt_proptype_Messages.isRequired ? _Table.bpfrpt_proptype_Messages.isRequired : _Table.bpfrpt_proptype_Messages : _propTypes2.default.shape(_Table.bpfrpt_proptype_Messages).isRequired).apply(this, arguments);
  },
  sortable: function sortable() {
    return (typeof _Sortable.bpfrpt_proptype_SortableType === 'function' ? _Sortable.bpfrpt_proptype_SortableType : _propTypes2.default.shape(_Sortable.bpfrpt_proptype_SortableType)).apply(this, arguments);
  },
  toggle: function toggle() {
    return (typeof _Selectable.bpfrpt_proptype_ToggleAll === 'function' ? _Selectable.bpfrpt_proptype_ToggleAll : _propTypes2.default.shape(_Selectable.bpfrpt_proptype_ToggleAll)).apply(this, arguments);
  }
} : {};