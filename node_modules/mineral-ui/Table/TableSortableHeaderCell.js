'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _utils = require('../utils');

var _styles = require('../styles');

var _IconArrowDropdownDown = require('../Icon/IconArrowDropdownDown');

var _IconArrowDropdownDown2 = _interopRequireDefault(_IconArrowDropdownDown);

var _IconArrowDropdownUp = require('../Icon/IconArrowDropdownUp');

var _IconArrowDropdownUp2 = _interopRequireDefault(_IconArrowDropdownUp);

var _TableHeaderCell = require('./TableHeaderCell');

var _TableHeaderCell2 = _interopRequireDefault(_TableHeaderCell);

var _TableBase = require('./TableBase');

var _Sortable = require('./Sortable');

var _Table = require('./Table');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return _extends({
    TableSortableHeaderCell_border_focus: '1px solid ' + baseTheme.borderColor_theme_focus,
    TableSortableHeaderCell_color_focus: baseTheme.color_theme,
    TableSortableHeaderCell_color_hover: baseTheme.icon_color_theme,
    TableSortableHeaderCellIcon_size: (0, _styles.pxToEm)(14)

  }, baseTheme);
};

var focusStyles = function focusStyles(theme) {
  return {
    color: theme.TableSortableHeaderCell_color_focus,
    outline: theme.TableSortableHeaderCell_border_focus,
    outlineOffset: '-' + theme.TableSortableHeaderCell_border_focus.split(' ')[0]
  };
};

// [1] Extends the clickable area of the Button to fill the entire cell
var styles = {
  root: function root(_ref) {
    var baseTheme = _ref.theme;

    var theme = componentTheme(baseTheme);

    return {
      overflow: 'hidden', // [1]

      '&:hover': {
        color: theme.TableSortableHeaderCell_color_hover
      },

      '&:focus-within': focusStyles(theme)
    };
  },
  button: function button(_ref2) {
    var baseTheme = _ref2.theme;

    var theme = componentTheme(baseTheme);

    return {
      background: 'none',
      border: 0,
      color: 'inherit',
      cursor: 'pointer',
      fontSize: 'inherit',
      fontWeight: 'inherit',
      position: 'relative',
      whiteSpace: 'nowrap',
      width: '100%',

      '&:focus': focusStyles(theme),

      '*:focus-within > &:focus': {
        outline: 0
      },

      '&::-moz-focus-inner': {
        border: 0
      },

      // [1]
      '&::after': {
        bottom: '100%',
        content: '""',
        height: '10em',
        left: 0,
        position: 'absolute',
        right: 0
      }
    };
  },
  content: {
    position: 'relative',
    whiteSpace: 'normal'
  },
  iconHolder: function iconHolder(_ref3) {
    var _ref4;

    var isSorted = _ref3.isSorted,
        direction = _ref3.direction,
        baseTheme = _ref3.theme;

    var theme = componentTheme(baseTheme);
    var iconAdjustment = (0, _styles.pxToEm)(2);
    var marginProperty = theme.direction === 'rtl' ? 'marginRight' : 'marginLeft';

    return _ref4 = {
      color: theme.icon_color,
      display: 'inline-block',
      height: theme.TableSortableHeaderCellIcon_size
    }, _defineProperty(_ref4, marginProperty, parseFloat(theme.space_inline_xxs) + parseFloat(iconAdjustment) + 'em'), _defineProperty(_ref4, 'opacity', isSorted ? null : 0), _defineProperty(_ref4, 'position', 'relative'), _defineProperty(_ref4, 'top', direction === 'ascending' ? 2 : 1), _defineProperty(_ref4, 'width', theme.TableSortableHeaderCellIcon_size), _defineProperty(_ref4, '& > [role="img"]', {
      margin: '-' + iconAdjustment
    }), _defineProperty(_ref4, '*:hover > button > &, button:focus > &', {
      color: 'inherit'
    }), _ref4;
  }
};

var Root = (0, _styles.createStyledComponent)(_TableHeaderCell2.default, styles.root, {
  displayName: 'TableSortableHeaderCell',
  withProps: { noPadding: true }
});
var Button = (0, _styles.createStyledComponent)(_TableHeaderCell2.default, styles.button, {
  withProps: { element: 'button' }
});
var Content = (0, _styles.createStyledComponent)('span', styles.content);
var IconHolder = (0, _styles.createStyledComponent)('span', styles.iconHolder);

var iconProps = {
  'aria-hidden': true,
  size: 'auto'
};
var sortIcon = {
  ascending: _react2.default.createElement(_IconArrowDropdownUp2.default, iconProps),
  descending: _react2.default.createElement(_IconArrowDropdownDown2.default, iconProps)
};

/**
 * TableSortableHeaderCell
 */

var TableSortableHeaderCell = function (_Component) {
  _inherits(TableSortableHeaderCell, _Component);

  function TableSortableHeaderCell() {
    _classCallCheck(this, TableSortableHeaderCell);

    return _possibleConstructorReturn(this, (TableSortableHeaderCell.__proto__ || Object.getPrototypeOf(TableSortableHeaderCell)).apply(this, arguments));
  }

  _createClass(TableSortableHeaderCell, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _jsx(_TableBase.TableContext.Consumer, {}, void 0, function (tableContextProps) {
        var _props = _this2.props,
            children = _props.children,
            label = _props.label,
            name = _props.name,
            messages = _props.messages,
            render = _props.render,
            sortable = _props.sortable,
            restProps = _objectWithoutProperties(_props, ['children', 'label', 'name', 'messages', 'render', 'sortable']);

        var sort = sortable.sort,
            sortFn = sortable.sortFn;

        var sortColumn = sort && sort.key;
        var descending = sort ? sort.descending : false;
        var direction = descending ? 'descending' : 'ascending';
        var isSorted = sortColumn === name;
        var nextDirection = isSorted && direction === 'ascending' ? 'descending' : 'ascending';
        var toggle = isSorted || direction !== nextDirection;
        var nextDescending = toggle ? !descending : descending;
        var nextSort = { key: name, descending: nextDescending };
        var handleSort = function handleSort() {
          return sortFn(nextSort);
        };

        var rootProps = _extends({
          'aria-label': label || children,
          'aria-sort': isSorted ? direction : 'none',
          role: 'columnheader'
        }, restProps);

        var buttonProps = _extends({
          'aria-label': nextDirection === 'ascending' ? messages.sortColumnAscending : messages.sortColumnDescending,
          onClick: handleSort
        }, restProps);

        var iconHolderProps = {
          direction: isSorted && direction || 'ascending',
          isSorted: isSorted
        };

        if ((0, _utils.isRenderProp)(render)) {
          var renderProps = {
            props: _extends({}, tableContextProps, rootProps, {
              children: children,
              label: label,
              name: name,
              messages: messages,
              sortable: sortable
            }),
            state: {
              direction: direction,
              isSorted: isSorted
            },
            helpers: {
              handleSort: handleSort
            }
          };

          return render(renderProps);
        }

        return _react2.default.createElement(
          Root,
          rootProps,
          _react2.default.createElement(
            Button,
            buttonProps,
            _jsx(Content, {}, void 0, children),
            '\xA0',
            _react2.default.createElement(
              IconHolder,
              iconHolderProps,
              sortIcon[iconHolderProps.direction]
            )
          )
        );
      });
    }
  }]);

  return TableSortableHeaderCell;
}(_react.Component);

exports.default = TableSortableHeaderCell;
TableSortableHeaderCell.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Rendered content */
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },

  /** Accessible label */
  label: _propTypes2.default.string,

  /** See Table */
  messages: function messages() {
    return (typeof _Table.bpfrpt_proptype_Messages === 'function' ? _Table.bpfrpt_proptype_Messages.isRequired ? _Table.bpfrpt_proptype_Messages.isRequired : _Table.bpfrpt_proptype_Messages : _propTypes2.default.shape(_Table.bpfrpt_proptype_Messages).isRequired).apply(this, arguments);
  },

  /** Name of column */
  name: _propTypes2.default.string.isRequired,

  /**
   * Provides custom rendering control. See the
   * [custom sortable header cell example](/components/table/#custom-sortable-header-cell)
   * and our [render props guide](/render-props).
   */
  render: function render() {
    return (typeof _Table.bpfrpt_proptype_RenderFn === 'function' ? _Table.bpfrpt_proptype_RenderFn : _propTypes2.default.shape(_Table.bpfrpt_proptype_RenderFn)).apply(this, arguments);
  },

  /** See Table */
  sortable: function sortable() {
    return (typeof _Sortable.bpfrpt_proptype_SortableType === 'function' ? _Sortable.bpfrpt_proptype_SortableType.isRequired ? _Sortable.bpfrpt_proptype_SortableType.isRequired : _Sortable.bpfrpt_proptype_SortableType : _propTypes2.default.shape(_Sortable.bpfrpt_proptype_SortableType).isRequired).apply(this, arguments);
  }
} : {};