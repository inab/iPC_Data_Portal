'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash.debounce');

var _lodash2 = _interopRequireDefault(_lodash);

var _styles = require('../styles');

var _themes = require('../themes');

var _OverflowContainer2 = require('./OverflowContainer');

var _OverflowContainer3 = _interopRequireDefault(_OverflowContainer2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// prettier-ignore
var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return (0, _themes.mapComponentThemes)({
    name: 'OverflowContainer',
    theme: (0, _OverflowContainer2.componentTheme)(baseTheme)
  }, {
    name: 'OverflowContainerWithShadows',
    theme: {
      OverflowContainerWithShadows_boxShadowBottom: 'inset 0 -8px 8px -8px ' + baseTheme.color_gray_60 + ', inset 0 -1px ' + baseTheme.borderColor,
      OverflowContainerWithShadows_boxShadowLeft: 'inset 8px 0 8px -8px ' + baseTheme.color_gray_60 + ', inset 1px 0 ' + baseTheme.borderColor,
      OverflowContainerWithShadows_boxShadowRight: 'inset -8px 0 8px -8px ' + baseTheme.color_gray_60 + ', inset -1px 0 ' + baseTheme.borderColor,
      OverflowContainerWithShadows_boxShadowTop: 'inset 0 8px 8px -8px ' + baseTheme.color_gray_60 + ', inset 0 1px ' + baseTheme.borderColor
    }
  }, baseTheme);
};

var ThemedOverflowContainer = (0, _themes.createThemedComponent)(_OverflowContainer3.default, function (_ref) {
  var baseTheme = _ref.theme;
  return (0, _themes.mapComponentThemes)({
    name: 'OverflowContainerWithShadows',
    theme: componentTheme(baseTheme)
  }, {
    name: 'OverflowContainer',
    theme: {}
  }, baseTheme);
});

var getBoxShadows = function getBoxShadows(_ref2) {
  var baseTheme = _ref2.theme,
      restProps = _objectWithoutProperties(_ref2, ['theme']);

  var theme = componentTheme(baseTheme);
  var boxShadows = Object.keys(restProps).filter(function (prop) {
    return prop.indexOf('hasShadow') !== -1;
  }).reduce(function (acc, prop) {
    if (restProps[prop]) {
      var edge = prop.split('hasShadow')[1];
      acc.push(theme['OverflowContainerWithShadows_boxShadow' + edge]);
    }
    return acc;
  }, []);
  return boxShadows.length ? boxShadows.join(',') : undefined;
};

// [1] - 1px to avoid unwanted scrollbar,
//       1px in to avoid potentially cutting off of focus ring of
//       subcomponents in body
var styles = {
  scroller: function scroller(_ref3) {
    var scrollX = _ref3.scrollX,
        scrollY = _ref3.scrollY;
    return _extends({
      flex: '1 1 auto'

    }, scrollX ? {
      overflowY: 'hidden',
      paddingLeft: 2, // [1]
      paddingRight: 2 // [1]
    } : undefined, scrollY ? {
      overflowX: 'hidden',
      paddingBottom: 2, // [1]
      paddingTop: 2 // [1]
    } : undefined);
  },
  root: function root(props) {
    var boxShadow = getBoxShadows(props);
    return boxShadow ? {
      display: 'flex',
      position: 'relative',

      '&::before': {
        bottom: 0,
        boxShadow: boxShadow,
        content: '""',
        pointerEvents: 'none',
        position: 'absolute',
        left: 0,
        right: 0,
        top: 0
      }
    } : undefined;
  }
};

var Root = (0, _styles.createStyledComponent)('div', styles.root, {
  displayName: 'OverflowContainerWithShadows'
});
var Scroller = (0, _styles.createStyledComponent)(ThemedOverflowContainer, styles.scroller, {
  displayName: 'Scroller',
  forwardProps: ['containerRef']
});

/**
 * OverflowContainerWithShadows
 */

var OverflowContainerWithShadows = function (_Component) {
  _inherits(OverflowContainerWithShadows, _Component);

  function OverflowContainerWithShadows() {
    var _ref4;

    var _temp, _this, _ret;

    _classCallCheck(this, OverflowContainerWithShadows);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref4 = OverflowContainerWithShadows.__proto__ || Object.getPrototypeOf(OverflowContainerWithShadows)).call.apply(_ref4, [this].concat(args))), _this), _this.setContainerRef = function (node) {
      _this.container = node;
    }, _this.handleScroll = function (event) {
      _this.applyShadows(event.currentTarget);
    }, _this.applyShadows = (0, _lodash2.default)(function (element) {
      var _this$props = _this.props,
          scrollX = _this$props.scrollX,
          scrollY = _this$props.scrollY;

      if (scrollX) {
        _this.setState({
          hasShadowLeft: element.scrollLeft > 0,
          hasShadowRight: element.scrollLeft + element.clientWidth < element.scrollWidth
        });
      }
      if (scrollY) {
        _this.setState({
          hasShadowTop: element.scrollTop > 0,
          hasShadowBottom: element.scrollTop + element.clientHeight < element.scrollHeight
        });
      }
    }, 100, { leading: true }), _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(OverflowContainerWithShadows, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.applyShadows(this.container);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          hideScrollbars = _props.hideScrollbars,
          scrollX = _props.scrollX,
          scrollY = _props.scrollY,
          restProps = _objectWithoutProperties(_props, ['children', 'hideScrollbars', 'scrollX', 'scrollY']);

      var isScrollable = Boolean(this.state && Object.keys(this.state).filter(function (key) {
        return _this2.state[key];
      }).length);
      var rootProps = _extends({}, this.state, restProps);
      var scrollerProps = {
        hideScrollbars: hideScrollbars,
        containerRef: this.setContainerRef,
        onScroll: (scrollX || scrollY) && this.handleScroll,
        scrollX: scrollX,
        scrollY: scrollY,
        // Set tabIndex when scrollable so user can scroll with keyboard
        tabIndex: isScrollable ? 0 : undefined
      };

      return _react2.default.createElement(
        Root,
        rootProps,
        _react2.default.createElement(
          Scroller,
          scrollerProps,
          children
        )
      );
    }
  }]);

  return OverflowContainerWithShadows;
}(_react.Component);

exports.default = OverflowContainerWithShadows;
OverflowContainerWithShadows.propTypes = process.env.NODE_ENV !== "production" ? {
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  },
  hideScrollbars: _propTypes2.default.bool,
  scrollX: _propTypes2.default.bool,
  scrollY: _propTypes2.default.bool
} : {};