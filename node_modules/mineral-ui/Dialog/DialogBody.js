'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../styles');

var _themes = require('../themes');

var _DialogRow = require('./DialogRow');

var _DialogRow2 = _interopRequireDefault(_DialogRow);

var _ModifiersContext = require('./ModifiersContext');

var _ModifiersContext2 = _interopRequireDefault(_ModifiersContext);

var _OverflowContainerWithShadows2 = require('../OverflowContainer/OverflowContainerWithShadows');

var _OverflowContainerWithShadows3 = _interopRequireDefault(_OverflowContainerWithShadows2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return (0, _themes.mapComponentThemes)({
    name: 'OverflowContainerWithShadows',
    theme: (0, _OverflowContainerWithShadows2.componentTheme)(baseTheme)
  }, {
    name: 'DialogBody',
    theme: {}
  }, baseTheme);
};

var ThemedOverflowContainerWithShadows = (0, _themes.createThemedComponent)(_OverflowContainerWithShadows3.default, function (_ref) {
  var baseTheme = _ref.theme;
  return (0, _themes.mapComponentThemes)({
    name: 'DialogBody',
    theme: componentTheme(baseTheme)
  }, {
    name: 'OverflowContainerWithShadows',
    theme: {}
  }, baseTheme);
});

var styles = {
  root: function root(_ref2) {
    var baseTheme = _ref2.theme;

    var theme = (0, _DialogRow.componentTheme)(baseTheme);
    var fontSize = theme.DialogRow_fontSize;
    var marginVertical = '' + (0, _styles.getNormalizedValue)(theme.DialogRow_marginVertical, fontSize);

    return {
      display: 'flex',
      flex: '1 1 auto',
      fontSize: fontSize,
      margin: 0,
      minHeight: '0%', // See: https://css-tricks.com/flexbox-truncated-text/#comment-1611744
      padding: 0,

      // Margins when no header or footer
      '&:first-child': {
        marginTop: marginVertical
      },
      '&:last-child': {
        marginBottom: marginVertical
      }
    };
  },
  scrollShadowBox: function scrollShadowBox(_ref3) {
    var baseTheme = _ref3.theme;

    var theme = (0, _DialogRow.componentTheme)(baseTheme);
    var fontSize = theme.DialogRow_fontSize;
    var paddingHorizontal = '' + (0, _styles.getNormalizedValue)(theme.DialogRow_paddingHorizontal, fontSize);

    return {
      display: 'flex',
      flex: '1 1 auto',

      // OverflowContainerWithShadows > Scroller
      '& > div': {
        paddingLeft: paddingHorizontal,
        paddingRight: paddingHorizontal,

        '& > :first-child': {
          marginTop: 0
        },
        '& > :last-child': {
          marginBottom: 0
        }
      }
    };
  }
};

var Root = (0, _styles.createStyledComponent)(_DialogRow2.default, styles.root, {
  displayName: 'DialogBody'
});
var OverflowContainerWithShadows = (0, _styles.createStyledComponent)(ThemedOverflowContainerWithShadows, styles.scrollShadowBox, { withProps: { scrollY: true } });

/**
 * DialogBody contains the main content of [Dialog](/components/dialog).
 */

var DialogBody = function (_Component) {
  _inherits(DialogBody, _Component);

  function DialogBody() {
    _classCallCheck(this, DialogBody);

    return _possibleConstructorReturn(this, (DialogBody.__proto__ || Object.getPrototypeOf(DialogBody)).apply(this, arguments));
  }

  _createClass(DialogBody, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          restProps = _objectWithoutProperties(_props, ['children']);

      var rootProps = _extends({}, restProps);
      var modifiers = {
        flip: {
          boundariesElement: 'window'
        },
        preventOverflow: {
          escapeWithReference: true
        }
      };

      return _react2.default.createElement(
        Root,
        rootProps,
        _jsx(OverflowContainerWithShadows, {}, void 0, _jsx(_ModifiersContext2.default.Provider, {
          value: modifiers
        }, void 0, children))
      );
    }
  }]);

  return DialogBody;
}(_react.Component);

exports.default = DialogBody;
DialogBody.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Rendered DialogBody content */
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  }
} : {};