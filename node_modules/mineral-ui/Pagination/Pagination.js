'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../styles');

var _themes = require('../themes');

var _Flex = require('../Flex');

var _Flex2 = _interopRequireDefault(_Flex);

var _Pages = require('./Pages');

var _Pages2 = _interopRequireDefault(_Pages);

var _PageJumper = require('./PageJumper');

var _PageJumper2 = _interopRequireDefault(_PageJumper);

var _PageSizer = require('./PageSizer');

var _PageSizer2 = _interopRequireDefault(_PageSizer);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var bpfrpt_proptype_Messages = {
  category: _propTypes2.default.string,
  label: _propTypes2.default.string.isRequired,
  pages: _propTypes2.default.shape({
    pageLabel: _propTypes2.default.func.isRequired,
    next: _propTypes2.default.string.isRequired,
    previous: _propTypes2.default.string.isRequired,
    __exact__: function __exact__(values, prop, displayName) {
      var props = {
        pageLabel: true,
        next: true,
        previous: true
      };
      var extra = [];

      for (var k in values) {
        if (values.hasOwnProperty(k) && !props.hasOwnProperty(k)) {
          extra.push(k);
        }
      }

      if (extra.length > 0) {
        return new Error('Invalid additional prop(s) ' + JSON.stringify(extra));
      }
    }
  }),
  pageJumper: _propTypes2.default.shape({
    label: _propTypes2.default.string.isRequired,
    placeholder: _propTypes2.default.string.isRequired,
    __exact__: function __exact__(values, prop, displayName) {
      var props = {
        label: true,
        placeholder: true
      };
      var extra = [];

      for (var k in values) {
        if (values.hasOwnProperty(k) && !props.hasOwnProperty(k)) {
          extra.push(k);
        }
      }

      if (extra.length > 0) {
        return new Error('Invalid additional prop(s) ' + JSON.stringify(extra));
      }
    }
  }),
  pageSizer: _propTypes2.default.shape({
    status: _propTypes2.default.func.isRequired,
    itemText: _propTypes2.default.func.isRequired,
    __exact__: function __exact__(values, prop, displayName) {
      var props = {
        status: true,
        itemText: true
      };
      var extra = [];

      for (var k in values) {
        if (values.hasOwnProperty(k) && !props.hasOwnProperty(k)) {
          extra.push(k);
        }
      }

      if (extra.length > 0) {
        return new Error('Invalid additional prop(s) ' + JSON.stringify(extra));
      }
    }
  })
};
var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return _extends({
    PaginationPageJumper_width: '4.65em',
    Pagination_gutterWidth: baseTheme.space_inline_sm
  }, baseTheme);
};

var styles = {
  root: function root(_ref) {
    var baseTheme = _ref.theme;

    var theme = componentTheme(baseTheme);
    return {
      flexWrap: 'wrap-reverse',
      marginBottom: '-' + theme.Pagination_gutterWidth,

      '& > *': {
        marginBottom: theme.Pagination_gutterWidth
      }
    };
  }
};

var Root = (0, _styles.createStyledComponent)(_Flex2.default, styles.root, {
  includeStyleReset: true,
  withProps: {
    element: 'nav'
  }
});

/**
 * Pagination offers a means to control the space consumed by a large data set
 * or other collection of items by limiting the page size and providing
 * navigation for access to all pages.
 */

var Pagination = function (_PureComponent) {
  _inherits(Pagination, _PureComponent);

  function Pagination() {
    var _ref2;

    var _temp, _this, _ret;

    _classCallCheck(this, Pagination);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call.apply(_ref2, [this].concat(args))), _this), _this.setPageJumperRef = function (node) {
      _this.pageJumperInput = node;
    }, _this.getTotalPages = function (pageSize) {
      return Math.ceil(_this.props.totalCount / pageSize);
    }, _this.handleClick = function (index) {
      _this.handlePageChange(index);
    }, _this.handleIncrement = function (incrementForward, callback) {
      var currentPage = _this.props.currentPage;

      var nextPage = incrementForward ? currentPage + 1 : currentPage - 1;
      _this.handlePageChange(nextPage);
      callback && callback(nextPage);
    }, _this.handlePageChange = function (currentPage) {
      _this.props.onPageChange(currentPage);
      if (_this.props.showPageJumper && _this.pageJumperInput && parseInt(_this.pageJumperInput.value) !== currentPage) {
        _this.pageJumperInput.value = '';
      }
    }, _this.handlePageSizeChange = function (pageSize) {
      var _this$props = _this.props,
          onPageSizeChange = _this$props.onPageSizeChange,
          currentPage = _this$props.currentPage;

      onPageSizeChange && onPageSizeChange(pageSize);

      var totalPages = _this.getTotalPages(pageSize);
      if (currentPage > totalPages) {
        _this.handlePageChange(totalPages);
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Pagination, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          currentPage = _props.currentPage,
          propMessages = _props.messages,
          pageSize = _props.pageSize,
          pageSizes = _props.pageSizes,
          showPageJumper = _props.showPageJumper,
          showPageSizer = _props.showPageSizer,
          size = _props.size,
          baseTheme = _props.theme,
          totalCount = _props.totalCount,
          restProps = _objectWithoutProperties(_props, ['currentPage', 'messages', 'pageSize', 'pageSizes', 'showPageJumper', 'showPageSizer', 'size', 'theme', 'totalCount']);

      var theme = componentTheme(baseTheme);
      var messages = _extends({}, Pagination.defaultProps.messages, propMessages);

      var rootProps = _extends({
        'aria-label': messages.label,
        gutterWidth: theme.Pagination_gutterWidth
      }, restProps);

      var totalPages = this.getTotalPages(pageSize);

      var pagesProps = _extends({
        currentPage: currentPage,
        handleClick: this.handleClick,
        handleIncrement: this.handleIncrement,
        messages: messages.pages,
        size: size,
        totalPages: totalPages
      }, restProps);

      var showPageSizerOrJumper = showPageSizer || showPageJumper;

      var pageJumperProps = void 0;
      if (showPageJumper) {
        pageJumperProps = {
          currentPage: currentPage,
          inputRef: this.setPageJumperRef,
          key: 'Page Jumper',
          messages: messages.pageJumper,
          onPageChange: this.handlePageChange,
          size: size,
          totalPages: totalPages,
          width: theme.PaginationPageJumper_width
        };
      }

      var pageSizerProps = void 0;
      if (showPageSizer) {
        pageSizerProps = {
          currentPage: currentPage,
          key: 'Page Sizer',
          messages: _extends({ category: messages.category }, messages.pageSizer),
          onPageChange: this.handlePageChange,
          onPageSizeChange: this.handlePageSizeChange,
          pageSize: pageSize,
          pageSizes: pageSizes,
          size: size,
          totalCount: totalCount,
          totalPages: totalPages
        };
      }

      return _react2.default.createElement(
        Root,
        _extends({ justifyContent: 'end' }, rootProps),
        showPageSizerOrJumper && _jsx(_Flex.FlexItem, {
          flex: true,
          grow: 1
        }, void 0, showPageSizer && _jsx(_Flex.FlexItem, {}, void 0, _react2.default.createElement(_PageSizer2.default, pageSizerProps)), showPageJumper && _jsx(_Flex.FlexItem, {
          marginStart: 'auto'
        }, void 0, _react2.default.createElement(_PageJumper2.default, pageJumperProps))),
        _jsx(_Flex.FlexItem, {}, void 0, _react2.default.createElement(_Pages2.default, pagesProps))
      );
    }
  }]);

  return Pagination;
}(_react.PureComponent);

Pagination.displayName = 'Pagination';
Pagination.defaultProps = {
  messages: {
    category: 'rows',
    label: 'Pagination',
    pages: {
      next: 'Next',
      // prettier-ignore
      pageLabel: function pageLabel(isCurrentPage, isLastPage, page) {
        return (isCurrentPage ? 'Current page, ' : '') + (isLastPage ? 'Last page, ' : '') + page;
      },
      previous: 'Previous'
    },
    pageJumper: {
      label: 'Jump to page',
      placeholder: 'Page #'
    },
    pageSizer: {
      status: function status(category, first, last, total) {
        return first + '\u2013' + last + ' of ' + total + ' ' + category;
      },
      itemText: function itemText(pageSize) {
        return pageSize + ' per page';
      }
    }
  },
  pageSizes: [10, 20, 50],
  showPageNumbers: true,
  size: 'medium',
  visibleRange: 5
};
Pagination.propTypes = process.env.NODE_ENV !== "production" ? {
  /** The currently displayed page */
  currentPage: _propTypes2.default.number.isRequired,

  /** Hide the page number buttons */
  showPageNumbers: _propTypes2.default.bool,

  /**
   * Various messages and labels used by Pagination
   * ([see example for more details](#rtl))
   */
  messages: function messages() {
    return (typeof Messages === 'function' ? _propTypes2.default.instanceOf(Messages).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },

  /** Called when current page is changed */
  onPageChange: _propTypes2.default.func.isRequired,

  /** Called when [page size](#page-sizer) is changed */
  onPageSizeChange: _propTypes2.default.func,

  /**
   * Render a [page jumper](#page-jumper)
   * ([TextInput component](/components/text-input)); enables the user to change
   * the current page on number entry
   */
  showPageJumper: _propTypes2.default.bool,

  /** The number of items or data to be rendered on each page */
  pageSize: _propTypes2.default.number.isRequired,

  /**
   * Render a [page sizer](#page-sizer)
   * ([Select component](/components/select)); enables the user to select the
   * page size
   */
  showPageSizer: _propTypes2.default.bool,

  /**
   * A collection of possible page sizes for a user to select from; implemented
   * in [page sizer](#page-sizer). Be sure to provide unique values.
   */
  pageSizes: _propTypes2.default.arrayOf(_propTypes2.default.number.isRequired),

  /** Available sizes */
  size: _propTypes2.default.oneOf(['small', 'medium', 'large', 'jumbo']),

  /** @Private */
  theme: _propTypes2.default.object.isRequired,

  /** The total number of items or data to be paginated */
  totalCount: _propTypes2.default.number.isRequired,

  /**
   * The number of consecutive pages to be displayed when the paginated results
   * are truncated ([see example for details](#visible-range))
   */
  visibleRange: _propTypes2.default.number
} : {};
exports.default = (0, _themes.withTheme)(Pagination);