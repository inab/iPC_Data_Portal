'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash.debounce');

var _lodash2 = _interopRequireDefault(_lodash);

var _styles = require('../styles');

var _Tooltip2 = require('../Tooltip');

var _Tooltip3 = _interopRequireDefault(_Tooltip2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var styles = {
  root: function root(_ref) {
    var baseTheme = _ref.theme;
    return _extends({
      pointerEvents: 'all' }, {
      display: 'inline-block',
      maxWidth: '100%',
      overflow: 'hidden',
      textOverflow: 'ellipsis',
      whiteSpace: 'nowrap',
      wordWrap: 'normal'
    }, {

      '&:focus': {
        outline: '1px solid ' + baseTheme.color_theme,
        outlineOffset: -1
      }
    });
  },
  tooltip: {
    // This style is only necessary because we're using Truncate as a Button child
    whiteSpace: 'normal'
  }
};

var Root = (0, _styles.createStyledComponent)('span', styles.root, {
  displayName: 'Truncate'
});
var Tooltip = (0, _styles.createStyledComponent)(_Tooltip3.default, styles.tooltip);

var Truncate = function (_PureComponent) {
  _inherits(Truncate, _PureComponent);

  function Truncate() {
    var _ref2;

    var _temp, _this, _ret;

    _classCallCheck(this, Truncate);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
      showTooltip: false
    }, _this.setRootRef = function (node) {
      _this.root = node;
    }, _this.toggleTooltip = function () {
      var rootNode = _this.root;

      if (rootNode) {
        var offsetWidth = rootNode.offsetWidth + 1; // `+ 1` necessary for Edge & IE11
        var _showTooltip = Boolean(rootNode.scrollWidth > offsetWidth);
        if (_this.state.showTooltip !== _showTooltip) {
          _this.setState({
            showTooltip: _showTooltip
          });
        }
      }
    }, _this.handleWindowResize = (0, _lodash2.default)(_this.toggleTooltip, 100), _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Truncate, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.toggleTooltip();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.toggleTooltip();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          restProps = _objectWithoutProperties(_props, ['children']);

      var rootProps = _extends({
        innerRef: this.setRootRef
      }, restProps);

      var content = _react2.default.createElement(
        Root,
        rootProps,
        children
      );
      return this.root && this.state.showTooltip ? _jsx(Tooltip, {
        content: this.root.textContent
      }, void 0, content) : content;
    }
  }]);

  return Truncate;
}(_react.PureComponent);

exports.default = Truncate;
Truncate.propTypes = process.env.NODE_ENV !== "production" ? {
  /** Content of Truncate */
  children: function children() {
    return (typeof React$Node === 'function' ? _propTypes2.default.instanceOf(React$Node) : _propTypes2.default.any).apply(this, arguments);
  }
} : {};