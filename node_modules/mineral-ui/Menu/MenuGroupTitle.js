'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentTheme = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = MenuGroupTitle;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../styles');

var _MenuItem = require('../Menu/MenuItem');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// [1] Deviation from h5 for optics relative to a MenuItem
var componentTheme = exports.componentTheme = function componentTheme(baseTheme) {
  return _extends({
    MenuGroupTitle_fontSize: baseTheme.fontSize_mouse, // [1]
    MenuGroupTitle_fontWeight: baseTheme.h5_fontWeight,
    MenuGroupTitle_paddingTop: baseTheme.space_stack_md,
    MenuGroupTitle_paddingBottom: baseTheme.space_stack_sm

  }, baseTheme);
};

var Root = (0, _styles.createStyledComponent)('h3', function (props) {
  var theme = _extends({}, componentTheme(props.theme), (0, _MenuItem.componentTheme)(props.theme));

  var paddingBottom = (0, _styles.getNormalizedValue)(theme.MenuGroupTitle_paddingBottom, theme.MenuGroupTitle_fontSize);

  var paddingTop = (0, _styles.getNormalizedValue)(theme.MenuGroupTitle_paddingTop, theme.MenuGroupTitle_fontSize);

  // We need to use MenuItem's padding, to match
  var paddingHorizontal = (0, _styles.getNormalizedValue)(theme.MenuItem_paddingHorizontal, theme.MenuGroupTitle_fontSize);

  return {
    fontSize: theme.MenuGroupTitle_fontSize,
    fontWeight: theme.MenuGroupTitle_fontWeight,
    margin: 0,
    padding: paddingTop + ' ' + paddingHorizontal + ' ' + paddingBottom
  };
}, {
  displayName: 'MenuGroupTitle'
});

/**
 * Menu group title component
 */
function MenuGroupTitle(props) {
  return _react2.default.createElement(Root, props);
}