{"ast":null,"code":"var _jsxFileName = \"/home/acanosa/React_arranger_template/src/containers/SQON/SQON.js\";\nimport React from 'react'; //$FlowIgnore\n\nimport { storiesOf } from '@storybook/react';\nimport SQONView from '../src/SQONView';\nimport { themeDecorator } from './decorators';\nstoriesOf('SQONView', module).addDecorator(themeDecorator).add('Empty SQON', () => React.createElement(SQONView, {\n  sqon: {},\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n})).add('one field, one value', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: 'in',\n      content: {\n        field: 'primary_site',\n        value: ['lung']\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})).add('one field, two values', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: 'in',\n      content: {\n        field: 'primary_site',\n        value: ['lung', 'heart']\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})).add('one field, 5 values', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: 'in',\n      content: {\n        field: 'primary_site',\n        value: ['lung', 'heart', 'brain', 'blood', 'kidney']\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})).add('one field, 20 values', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: 'in',\n      content: {\n        field: 'primary_site',\n        value: ['lung', 'heart', 'brain', 'blood', 'kidney', 'lung1', 'heart1', 'brain1', 'blood1', 'kidney1', 'lung2', 'heart2', 'brain2', 'blood2', 'kidney2', 'lung3', 'heart3', 'brain3', 'blood3', 'kidney3']\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n})).add('two fields, 3 values each', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: 'in',\n      content: {\n        field: 'primary_site',\n        value: ['lung', 'heart', 'brain']\n      }\n    }, {\n      op: 'in',\n      content: {\n        field: 'gender',\n        value: ['female', 'male', 'unknown']\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n})).add('range', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: '>=',\n      content: {\n        field: 'cases.exposures.cigarettes_per_day',\n        value: ['1']\n      }\n    }, {\n      op: '<=',\n      content: {\n        field: 'cases.exposures.cigarettes_per_day',\n        value: ['5']\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n})).add('range and term', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: '>=',\n      content: {\n        field: 'cases.exposures.cigarettes_per_day',\n        value: ['1']\n      }\n    }, {\n      op: '<=',\n      content: {\n        field: 'cases.exposures.cigarettes_per_day',\n        value: ['5']\n      }\n    }, {\n      op: 'in',\n      content: {\n        field: 'primary_site',\n        value: ['heart', 'lung', 'bone', 'blood', 'liver']\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n})).add('value is not array', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: 'is',\n      content: {\n        field: 'gender',\n        value: 'female'\n      }\n    }, {\n      op: 'is',\n      content: {\n        field: 'cases.exposures.cigarettes_per_day',\n        value: 5\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 172\n  },\n  __self: this\n})).add('text filter', () => React.createElement(SQONView, {\n  sqon: {\n    op: 'and',\n    content: [{\n      op: 'filter',\n      content: {\n        fields: ['gender', 'state', 'country'],\n        value: 'fema'\n      }\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/home/acanosa/React_arranger_template/src/containers/SQON/SQON.js"],"names":["React","storiesOf","SQONView","themeDecorator","module","addDecorator","add","op","content","field","value","fields"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEAF,SAAS,CAAC,UAAD,EAAaG,MAAb,CAAT,CACGC,YADH,CACgBF,cADhB,EAEGG,GAFH,CAEO,YAFP,EAEqB,MAAM,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAF3B,EAGGA,GAHH,CAGO,sBAHP,EAG+B,MAC3B,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,cADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,MAAD;AAFA;AAFX,KADO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAmBGJ,GAnBH,CAmBO,uBAnBP,EAmBgC,MAC5B,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,cADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT;AAFA;AAFX,KADO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EApBJ,EAmCGJ,GAnCH,CAmCO,qBAnCP,EAmC8B,MAC1B,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,cADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,OAA3B,EAAoC,QAApC;AAFA;AAFX,KADO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EApCJ,EAmDGJ,GAnDH,CAmDO,sBAnDP,EAmD+B,MAC3B,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,cADA;AAEPC,QAAAA,KAAK,EAAE,CACL,MADK,EAEL,OAFK,EAGL,OAHK,EAIL,OAJK,EAKL,QALK,EAML,OANK,EAOL,QAPK,EAQL,QARK,EASL,QATK,EAUL,SAVK,EAWL,OAXK,EAYL,QAZK,EAaL,QAbK,EAcL,QAdK,EAeL,SAfK,EAgBL,OAhBK,EAiBL,QAjBK,EAkBL,QAlBK,EAmBL,QAnBK,EAoBL,SApBK;AAFA;AAFX,KADO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EApDJ,EAwFGJ,GAxFH,CAwFO,2BAxFP,EAwFoC,MAChC,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,cADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB;AAFA;AAFX,KADO,EAQP;AACEH,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB;AAFA;AAFX,KARO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAzFJ,EA+GGJ,GA/GH,CA+GO,OA/GP,EA+GgB,MACZ,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,oCADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,GAAD;AAFA;AAFX,KADO,EAQP;AACEH,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,oCADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,GAAD;AAFA;AAFX,KARO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhHJ,EAsIGJ,GAtIH,CAsIO,gBAtIP,EAsIyB,MACrB,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,oCADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,GAAD;AAFA;AAFX,KADO,EAQP;AACEH,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,oCADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,GAAD;AAFA;AAFX,KARO,EAeP;AACEH,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,cADA;AAEPC,QAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,OAAnC;AAFA;AAFX,KAfO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvIJ,EAoKGJ,GApKH,CAoKO,oBApKP,EAoK6B,MACzB,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,KAAK,EAAE;AAFA;AAFX,KADO,EAQP;AACEH,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,oCADA;AAEPC,QAAAA,KAAK,EAAE;AAFA;AAFX,KARO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EArKJ,EA2LGJ,GA3LH,CA2LO,aA3LP,EA2LsB,MAClB,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,KADA;AAEJC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,EAAE,EAAE,QADN;AAEEC,MAAAA,OAAO,EAAE;AACPG,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,CADD;AAEPD,QAAAA,KAAK,EAAE;AAFA;AAFX,KADO;AAFL,GADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA5LJ","sourcesContent":["import React from 'react';\n//$FlowIgnore\nimport { storiesOf } from '@storybook/react';\nimport SQONView from '../src/SQONView';\nimport { themeDecorator } from './decorators';\n\nstoriesOf('SQONView', module)\n  .addDecorator(themeDecorator)\n  .add('Empty SQON', () => <SQONView sqon={{}} />)\n  .add('one field, one value', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: 'in',\n            content: {\n              field: 'primary_site',\n              value: ['lung'],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('one field, two values', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: 'in',\n            content: {\n              field: 'primary_site',\n              value: ['lung', 'heart'],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('one field, 5 values', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: 'in',\n            content: {\n              field: 'primary_site',\n              value: ['lung', 'heart', 'brain', 'blood', 'kidney'],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('one field, 20 values', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: 'in',\n            content: {\n              field: 'primary_site',\n              value: [\n                'lung',\n                'heart',\n                'brain',\n                'blood',\n                'kidney',\n                'lung1',\n                'heart1',\n                'brain1',\n                'blood1',\n                'kidney1',\n                'lung2',\n                'heart2',\n                'brain2',\n                'blood2',\n                'kidney2',\n                'lung3',\n                'heart3',\n                'brain3',\n                'blood3',\n                'kidney3',\n              ],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('two fields, 3 values each', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: 'in',\n            content: {\n              field: 'primary_site',\n              value: ['lung', 'heart', 'brain'],\n            },\n          },\n          {\n            op: 'in',\n            content: {\n              field: 'gender',\n              value: ['female', 'male', 'unknown'],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('range', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: '>=',\n            content: {\n              field: 'cases.exposures.cigarettes_per_day',\n              value: ['1'],\n            },\n          },\n          {\n            op: '<=',\n            content: {\n              field: 'cases.exposures.cigarettes_per_day',\n              value: ['5'],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('range and term', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: '>=',\n            content: {\n              field: 'cases.exposures.cigarettes_per_day',\n              value: ['1'],\n            },\n          },\n          {\n            op: '<=',\n            content: {\n              field: 'cases.exposures.cigarettes_per_day',\n              value: ['5'],\n            },\n          },\n          {\n            op: 'in',\n            content: {\n              field: 'primary_site',\n              value: ['heart', 'lung', 'bone', 'blood', 'liver'],\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('value is not array', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: 'is',\n            content: {\n              field: 'gender',\n              value: 'female',\n            },\n          },\n          {\n            op: 'is',\n            content: {\n              field: 'cases.exposures.cigarettes_per_day',\n              value: 5,\n            },\n          },\n        ],\n      }}\n    />\n  ))\n  .add('text filter', () => (\n    <SQONView\n      sqon={{\n        op: 'and',\n        content: [\n          {\n            op: 'filter',\n            content: {\n              fields: ['gender', 'state', 'country'],\n              value: 'fema',\n            },\n          },\n        ],\n      }}\n    />\n  ));\n"]},"metadata":{},"sourceType":"module"}