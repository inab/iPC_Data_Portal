{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/acanosa/React_arranger_template/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchMapping = void 0;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar fetchMapping =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var _aliases$find;\n\n    var index, es, aliases, alias;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            index = _ref.index, es = _ref.es;\n            _context.next = 3;\n            return es.cat.aliases({\n              format: 'json'\n            });\n\n          case 3:\n            aliases = _context.sent.body;\n            alias = aliases === null || aliases === void 0 ? void 0 : (_aliases$find = aliases.find(function (x) {\n              return x.alias === index;\n            })) === null || _aliases$find === void 0 ? void 0 : _aliases$find.index;\n            return _context.abrupt(\"return\", es.indices.getMapping({\n              index: alias || index\n            })[\"catch\"](function (err) {\n              // TODO: return something more useful than false\n              return false;\n            }).then(function (response) {\n              var mapping = response.body;\n              return {\n                index: index,\n                mapping: mapping,\n                alias: alias\n              };\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchMapping(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.fetchMapping = fetchMapping;","map":null,"metadata":{},"sourceType":"script"}