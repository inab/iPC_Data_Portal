{"ast":null,"code":"var _jsxFileName = \"/home/acanosa/React_arranger_template/src/containers/Tables/Tables.js\";\nimport React, { Component } from 'react';\nimport { compose, withState } from 'recompose';\nimport { orderBy, get } from 'lodash';\nimport jsonPath from 'jsonpath/jsonpath.min';\nimport uuid from 'uuid'; //import { action } from '@storybook/addon-actions';\n\nimport columnsToGraphql from '@arranger/mapping-utils/dist/utils/columnsToGraphql';\nimport DataTable, { Table, TableToolbar, getSingleValue } from '@arranger/components/dist/DataTable'; //import { themeDecorator } from './decorators';\n\nimport api from '@arranger/components/dist/utils/api';\n\nclass Tables extends Component {\n  render() {\n    const withSQON = withState('sqon', 'setSQON', null);\n    const tableConfig = {\n      timestamp: '2018-01-12T16:42:07.495Z',\n      type: 'models',\n      keyField: 'name',\n      defaultSorted: [{\n        id: 'age_at_diagnosis',\n        desc: false\n      }],\n      columns: [{\n        show: true,\n        Header: 'Age At Diagnosis',\n        type: 'number',\n        sortable: true,\n        canChangeShow: true,\n        accessor: 'age_at_diagnosis'\n      }, {\n        show: true,\n        Header: 'Name',\n        type: 'string',\n        sortable: true,\n        canChangeShow: true,\n        accessor: 'name'\n      }]\n    };\n    const dummyConfig = {\n      timestamp: '2018-01-12T16:42:07.495Z',\n      type: 'files',\n      keyField: 'file_id',\n      defaultSorted: [{\n        id: 'access',\n        desc: false\n      }],\n      columns: [{\n        show: true,\n        Header: 'Access',\n        type: 'string',\n        sortable: true,\n        canChangeShow: true,\n        accessor: 'access'\n      }, {\n        show: true,\n        Header: 'File Id',\n        type: 'string',\n        sortable: true,\n        canChangeShow: true,\n        accessor: 'file_id'\n      }, {\n        show: true,\n        Header: 'File Name',\n        type: 'string',\n        sortable: true,\n        canChangeShow: true,\n        accessor: 'file_name'\n      }, {\n        show: true,\n        Header: 'Data Type',\n        type: 'string',\n        sortable: true,\n        canChangeShow: true,\n        accessor: 'data_type'\n      }, {\n        show: true,\n        Header: 'File Size',\n        type: 'bits',\n        sortable: true,\n        canChangeShow: true,\n        accessor: 'file_size'\n      }, {\n        show: true,\n        Header: 'Cases Primary Site',\n        type: 'list',\n        sortable: false,\n        canChangeShow: false,\n        query: 'cases { hits { total, edges { node { primary_site } } } }',\n        jsonPath: '$.cases.hits.edges[*].node.primary_site',\n        id: 'cases.primary_site'\n      }]\n    };\n    const dummyData = Array(1000).fill().map(() => {\n      const cases = Array(Math.floor(Math.random() * 10)).fill().map(() => ({\n        node: {\n          primary_site: uuid()\n        }\n      }));\n      return {\n        access: Math.random() > 0.5 ? 'controlled' : 'open',\n        file_id: uuid(),\n        file_name: uuid(),\n        data_type: uuid(),\n        file_size: Math.floor(Math.random() * 10000000),\n        cases: {\n          hits: {\n            total: cases.length,\n            edges: cases\n          }\n        }\n      };\n    });\n    const withColumns = compose(withState('columns', 'onColumnsChange', dummyConfig.columns));\n    const TableToolbarStory = withColumns(TableToolbar);\n\n    function fetchDummyData({\n      config,\n      sort,\n      offset,\n      first\n    }) {\n      return Promise.resolve({\n        total: dummyData.length,\n        data: orderBy(dummyData, sort.map(s => s.field), sort.map(s => s.order)).slice(offset, offset + first)\n      });\n    }\n\n    const EnhancedDataTable = withSQON(({\n      sqon,\n      setSQON\n    }) => React.createElement(DataTable, {\n      config: tableConfig //setSelectedTableRows={action('selection changed')}\n      ,\n      fetchData: options => {\n        return api({\n          endpoint: 'table',\n          body: columnsToGraphql({ ...options,\n            sqon\n          })\n        }).then(r => {\n          const hits = get(r, `data.${options.config.type}.hits`) || {};\n          const data = get(hits, 'edges', []).map(e => e.node);\n          const total = hits.total || 0;\n          return {\n            total,\n            data\n          };\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Table, {\n      config: dummyConfig,\n      fetchData: fetchDummyData // setSelectedTableRows={action('selection changed')}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(TableToolbarStory, {\n      onFilterChange: console.log.bind(console),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(TableToolbarStory, {\n      customHeaderContent: React.createElement(\"div\", {\n        style: {\n          backgroundColor: 'red',\n          paddingTop: '4px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Red Box\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(DataTable, {\n      config: dummyConfig,\n      filterInputPlaceholder: 'Filter table',\n      customTypes: {\n        list: props => {\n          const values = jsonPath.query(props.original, props.column.jsonPath);\n          const total = values.length;\n          const firstValue = getSingleValue(values[0]);\n          return total > 1 ? React.createElement(\"a\", {\n            href: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, total, \" total\") : firstValue || '';\n        }\n      },\n      fetchData: fetchDummyData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Tables;","map":{"version":3,"sources":["/home/acanosa/React_arranger_template/src/containers/Tables/Tables.js"],"names":["React","Component","compose","withState","orderBy","get","jsonPath","uuid","columnsToGraphql","DataTable","Table","TableToolbar","getSingleValue","api","Tables","render","withSQON","tableConfig","timestamp","type","keyField","defaultSorted","id","desc","columns","show","Header","sortable","canChangeShow","accessor","dummyConfig","query","dummyData","Array","fill","map","cases","Math","floor","random","node","primary_site","access","file_id","file_name","data_type","file_size","hits","total","length","edges","withColumns","TableToolbarStory","fetchDummyData","config","sort","offset","first","Promise","resolve","data","s","field","order","slice","EnhancedDataTable","sqon","setSQON","options","endpoint","body","then","r","e","console","log","bind","backgroundColor","paddingTop","list","props","values","original","column","firstValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { compose, withState } from 'recompose';\nimport { orderBy, get } from 'lodash';\nimport jsonPath from 'jsonpath/jsonpath.min';\nimport uuid from 'uuid';\n//import { action } from '@storybook/addon-actions';\nimport columnsToGraphql from '@arranger/mapping-utils/dist/utils/columnsToGraphql';\nimport DataTable, {\n    Table,\n    TableToolbar,\n    getSingleValue,\n} from '@arranger/components/dist/DataTable';\n//import { themeDecorator } from './decorators';\nimport api from '@arranger/components/dist/utils/api';\n\nclass Tables extends Component {\n\n    render() {\n\n        const withSQON = withState('sqon', 'setSQON', null);\n\n        const tableConfig = {\n            timestamp: '2018-01-12T16:42:07.495Z',\n            type: 'models',\n            keyField: 'name',\n            defaultSorted: [{ id: 'age_at_diagnosis', desc: false }],\n            columns: [\n                {\n                    show: true,\n                    Header: 'Age At Diagnosis',\n                    type: 'number',\n                    sortable: true,\n                    canChangeShow: true,\n                    accessor: 'age_at_diagnosis',\n                },\n                {\n                    show: true,\n                    Header: 'Name',\n                    type: 'string',\n                    sortable: true,\n                    canChangeShow: true,\n                    accessor: 'name',\n                },\n            ],\n        };\n\n        const dummyConfig = {\n            timestamp: '2018-01-12T16:42:07.495Z',\n            type: 'files',\n            keyField: 'file_id',\n            defaultSorted: [{ id: 'access', desc: false }],\n            columns: [\n                {\n                    show: true,\n                    Header: 'Access',\n                    type: 'string',\n                    sortable: true,\n                    canChangeShow: true,\n                    accessor: 'access',\n                },\n                {\n                    show: true,\n                    Header: 'File Id',\n                    type: 'string',\n                    sortable: true,\n                    canChangeShow: true,\n                    accessor: 'file_id',\n                },\n                {\n                    show: true,\n                    Header: 'File Name',\n                    type: 'string',\n                    sortable: true,\n                    canChangeShow: true,\n                    accessor: 'file_name',\n                },\n                {\n                    show: true,\n                    Header: 'Data Type',\n                    type: 'string',\n                    sortable: true,\n                    canChangeShow: true,\n                    accessor: 'data_type',\n                },\n                {\n                    show: true,\n                    Header: 'File Size',\n                    type: 'bits',\n                    sortable: true,\n                    canChangeShow: true,\n                    accessor: 'file_size',\n                },\n                {\n                    show: true,\n                    Header: 'Cases Primary Site',\n                    type: 'list',\n                    sortable: false,\n                    canChangeShow: false,\n                    query: 'cases { hits { total, edges { node { primary_site } } } }',\n                    jsonPath: '$.cases.hits.edges[*].node.primary_site',\n                    id: 'cases.primary_site',\n                },\n            ],\n        };\n\n        const dummyData = Array(1000)\n            .fill()\n            .map(() => {\n                const cases = Array(Math.floor(Math.random() * 10))\n                    .fill()\n                    .map(() => ({\n                        node: {\n                            primary_site: uuid(),\n                        },\n                    }));\n                return {\n                    access: Math.random() > 0.5 ? 'controlled' : 'open',\n                    file_id: uuid(),\n                    file_name: uuid(),\n                    data_type: uuid(),\n                    file_size: Math.floor(Math.random() * 10000000),\n                    cases: {\n                        hits: {\n                            total: cases.length,\n                            edges: cases,\n                        },\n                    },\n                };\n            });\n\n        const withColumns = compose(\n            withState('columns', 'onColumnsChange', dummyConfig.columns),\n        );\n\n        const TableToolbarStory = withColumns(TableToolbar);\n\n        function fetchDummyData({ config, sort, offset, first }) {\n            return Promise.resolve({\n                total: dummyData.length,\n                data: orderBy(\n                    dummyData,\n                    sort.map(s => s.field),\n                    sort.map(s => s.order),\n                ).slice(offset, offset + first),\n            });\n        }\n\n        const EnhancedDataTable = withSQON(({ sqon, setSQON }) => (\n            <DataTable\n                config={tableConfig}\n                //setSelectedTableRows={action('selection changed')}\n                fetchData={options => {\n                    return api({\n                        endpoint: 'table',\n                        body: columnsToGraphql({ ...options, sqon }),\n                    }).then(r => {\n                        const hits = get(r, `data.${options.config.type}.hits`) || {};\n                        const data = get(hits, 'edges', []).map(e => e.node);\n                        const total = hits.total || 0;\n                        return { total, data };\n                    });\n                }}\n            />\n        ));\n\n\n        return (\n\n            <React.Fragment>\n\n                <Table\n                    config={dummyConfig}\n                    fetchData={fetchDummyData}\n                // setSelectedTableRows={action('selection changed')}\n                />\n\n                <TableToolbarStory onFilterChange={console.log.bind(console)} />\n\n                <TableToolbarStory customHeaderContent={(<div style={{ backgroundColor: 'red', paddingTop: '4px' }}>Red Box</div>)} />\n\n                <DataTable\n                    config={dummyConfig}\n                    filterInputPlaceholder={'Filter table'}\n                    customTypes={{\n                        list: props => {\n                            const values = jsonPath.query(props.original, props.column.jsonPath);\n                            const total = values.length;\n                            const firstValue = getSingleValue(values[0]);\n                            return total > 1 ? <a href=\"\">{total} total</a> : firstValue || '';\n                        },\n                    }}\n                    fetchData={fetchDummyData}\n                />\n\n            </React.Fragment>\n\n        )\n    }\n}\n\nexport default Tables;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}