{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/acanosa/React_arranger_template/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _mappingUtils = require(\"@arranger/mapping-utils\");\n\nvar _ = _interopRequireDefault(require(\"./\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _api = _interopRequireDefault(require(\"../utils/api\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar fetchGraphqlQuery =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var query, projectId, _ref$variables, variables, _ref$api, api;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref.query, projectId = _ref.projectId, _ref$variables = _ref.variables, variables = _ref$variables === void 0 ? null : _ref$variables, _ref$api = _ref.api, api = _ref$api === void 0 ? _api[\"default\"] : _ref$api;\n            return _context.abrupt(\"return\", api({\n              endpoint: \"/\".concat(projectId, \"/graphql\"),\n              body: {\n                query: query,\n                variables: variables\n              }\n            }).then(function (data) {\n              return data.data;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchGraphqlQuery(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar fetchMappingData =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(fetchConfig) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", fetchGraphqlQuery(_objectSpread({\n              query: \"{\\n      \".concat(fetchConfig.index, \" {\\n        mapping,\\n        extended,\\n        aggsState {\\n          state {\\n            field, active\\n          }\\n        }\\n      }\\n    }\")\n            }, fetchConfig)).then(function (data) {\n              return data[fetchConfig.index];\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchMappingData(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar fetchAggregationData =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref4) {\n    var sqon, extended, projectId, index, api, fetchConfig, serializeToGraphQl, serializeToPath, allAggsNames, getAggregationQuery, query;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            sqon = _ref4.sqon, extended = _ref4.extended, projectId = _ref4.projectId, index = _ref4.index, api = _ref4.api;\n            fetchConfig = {\n              projectId: projectId,\n              index: index,\n              api: api\n            };\n\n            serializeToGraphQl = function serializeToGraphQl(aggName) {\n              return aggName.split('.').join('__');\n            };\n\n            serializeToPath = function serializeToPath(aggName) {\n              return aggName.split('__').join('.');\n            };\n\n            allAggsNames = extended.map(function (entry) {\n              return entry.field;\n            }).map(serializeToGraphQl);\n\n            getAggregationQuery = function getAggregationQuery() {\n              return allAggsNames.map(function (aggName) {\n                var aggType = extended.find(function (entry) {\n                  return serializeToGraphQl(entry.field) === aggName;\n                }).type;\n                return \"\\n          \".concat(aggName, \" {\\n            \").concat(_mappingUtils.esToAggTypeMap[aggType] === 'Aggregations' ? \"buckets { key key_as_string doc_count }\" : \"stats { max min avg sum }\", \"\\n          }\");\n              }).join('');\n            };\n\n            query = \"\\n    query ($sqon: JSON){\\n      \".concat(index, \" {\\n        aggregations (\\n          aggregations_filter_themselves: false\\n          filters: $sqon\\n        ) { \").concat(getAggregationQuery(), \" }\\n      }\\n    }\");\n            return _context3.abrupt(\"return\", fetchGraphqlQuery(_objectSpread({\n              query: query,\n              variables: {\n                sqon: sqon\n              }\n            }, fetchConfig)).then(function (data) {\n              return {\n                aggregations: Object.keys(data[index].aggregations || {}).reduce(function (agg, key) {\n                  return _objectSpread({}, agg, _defineProperty({}, serializeToPath(key), data[index].aggregations[key]));\n                }, {})\n              };\n            }));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function fetchAggregationData(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar removeFieldTypesFromMapping = function removeFieldTypesFromMapping(_ref6) {\n  var mapping = _ref6.mapping,\n      extended = _ref6.extended,\n      _ref6$parentField = _ref6.parentField,\n      parentField = _ref6$parentField === void 0 ? null : _ref6$parentField,\n      _ref6$fieldTypesToExc = _ref6.fieldTypesToExclude,\n      fieldTypesToExclude = _ref6$fieldTypesToExc === void 0 ? [] : _ref6$fieldTypesToExc;\n\n  var output = _objectSpread({}, Object.entries(mapping).reduce(function (acc, _ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        val = _ref8[1];\n\n    var currentField = \"\".concat(parentField ? \"\".concat(parentField, \".\") : '').concat(key);\n    var isId = fieldTypesToExclude.some(function (type) {\n      var _extended$find;\n\n      return type === ((_extended$find = extended.find(function (ex) {\n        return ex.field === currentField;\n      })) === null || _extended$find === void 0 ? void 0 : _extended$find.type);\n    });\n    var toSpread = !isId ? _objectSpread({}, val.properties ? _defineProperty({}, key, _objectSpread({}, val, {\n      properties: removeFieldTypesFromMapping({\n        mapping: val.properties,\n        extended: extended,\n        parentField: currentField,\n        fieldTypesToExclude: fieldTypesToExclude\n      })\n    })) : _defineProperty({}, key, val)) : {};\n    return _objectSpread({}, acc, {}, toSpread);\n  }, {}));\n\n  return output;\n};\n\nvar defaultFieldTypesToExclude = ['id', 'text'];\n\nvar LiveAdvancedFacetView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LiveAdvancedFacetView, _React$Component);\n\n  function LiveAdvancedFacetView(props) {\n    var _this;\n\n    _classCallCheck(this, LiveAdvancedFacetView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveAdvancedFacetView).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"filterExtendedForFetchingAggs\", function (_ref11) {\n      var extended = _ref11.extended,\n          aggsState = _ref11.aggsState;\n      return extended.filter(function (e) {\n        var _aggsState$state$find;\n\n        return !_this.blackListedAggTypes.includes(e.type) && ((_aggsState$state$find = aggsState.state.find(function (s) {\n          return s.field.split('__').join('.') === e.field;\n        })) === null || _aggsState$state$find === void 0 ? void 0 : _aggsState$state$find.active);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSqonFieldChange\", function (_ref12) {\n      var sqon = _ref12.sqon;\n      var _this$props$onSqonCha = _this.props.onSqonChange,\n          onSqonChange = _this$props$onSqonCha === void 0 ? function () {} : _this$props$onSqonCha;\n      var aggsState = _this.state.aggsState;\n      fetchAggregationData(_objectSpread({}, _this.props, {\n        extended: _this.filterExtendedForFetchingAggs({\n          extended: _this.state.extended,\n          aggsState: aggsState\n        }),\n        sqon: sqon\n      })).then(function (_ref13) {\n        var aggregations = _ref13.aggregations;\n        return _this.setState({\n          sqon: sqon,\n          aggregations: aggregations\n        }, function () {\n          return onSqonChange({\n            sqon: sqon\n          });\n        });\n      });\n    });\n\n    var _sqon = props.sqon,\n        _props$fieldTypesToEx = props.fieldTypesToExclude,\n        fieldTypesToExclude = _props$fieldTypesToEx === void 0 ? defaultFieldTypesToExclude : _props$fieldTypesToEx;\n    _this.state = {\n      mapping: {},\n      extended: [],\n      aggsState: {},\n      aggregations: null,\n      sqon: _sqon || null\n    };\n    _this.blackListedAggTypes = ['object', 'nested'].concat(fieldTypesToExclude);\n    return _this;\n  }\n\n  _createClass(LiveAdvancedFacetView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          projectId = _this$props.projectId,\n          index = _this$props.index,\n          api = _this$props.api;\n      var sqon = this.state.sqon;\n      var fetchConfig = {\n        projectId: projectId,\n        index: index,\n        sqon: sqon,\n        api: api\n      };\n      fetchMappingData(fetchConfig).then(function (_ref14) {\n        var extended = _ref14.extended,\n            mapping = _ref14.mapping,\n            aggsState = _ref14.aggsState;\n        return fetchAggregationData(_objectSpread({\n          extended: _this2.filterExtendedForFetchingAggs({\n            extended: extended,\n            aggsState: aggsState\n          })\n        }, fetchConfig)).then(function (_ref15) {\n          var aggregations = _ref15.aggregations;\n          var _this2$props$fieldTyp = _this2.props.fieldTypesToExclude,\n              fieldTypesToExclude = _this2$props$fieldTyp === void 0 ? defaultFieldTypesToExclude : _this2$props$fieldTyp;\n\n          _this2.setState({\n            mapping: removeFieldTypesFromMapping({\n              mapping: mapping,\n              extended: extended,\n              fieldTypesToExclude: fieldTypesToExclude\n            }),\n            aggsState: aggsState,\n            extended: extended,\n            aggregations: aggregations\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref16) {\n      var sqon = _ref16.sqon;\n\n      if (!(0, _lodash.isEqual)(sqon, this.state.sqon)) {\n        this.setState({\n          sqon: sqon\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _this$props2$fieldTyp = _this$props2.fieldTypesToExclude,\n          fieldTypesToExclude = _this$props2$fieldTyp === void 0 ? defaultFieldTypesToExclude : _this$props2$fieldTyp,\n          props = _objectWithoutProperties(_this$props2, [\"fieldTypesToExclude\"]);\n\n      return _react[\"default\"].createElement(_[\"default\"], _extends({}, props, {\n        rootTypeName: props.graphqlField,\n        elasticMapping: this.state.mapping,\n        extendedMapping: this.state.extended.filter(function (ex) {\n          return !fieldTypesToExclude.some(function (type) {\n            return ex.type === type;\n          });\n        }),\n        aggregations: this.state.aggregations,\n        onSqonFieldChange: this.onSqonFieldChange,\n        sqon: this.state.sqon\n      }));\n    }\n  }]);\n\n  return LiveAdvancedFacetView;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = LiveAdvancedFacetView;","map":null,"metadata":{},"sourceType":"script"}