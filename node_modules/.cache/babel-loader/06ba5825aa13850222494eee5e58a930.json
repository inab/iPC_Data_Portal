{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _Aggs = require(\"../Aggs\");\n\nvar _Query = _interopRequireDefault(require(\"../Query\"));\n\nvar _Stats = require(\"./Stats\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CombinedStatsQuery = function CombinedStatsQuery(_ref) {\n  var api = _ref.api,\n      projectId = _ref.projectId,\n      graphqlField = _ref.graphqlField,\n      sqon = _ref.sqon,\n      stats = _ref.stats,\n      _render = _ref.render;\n  return _react[\"default\"].createElement(_Aggs.AggsState, _extends({\n    api: api,\n    projectId: projectId,\n    graphqlField: graphqlField\n  }, {\n    render: function render(_ref2) {\n      var aggs = _ref2.aggs;\n      var decoratedStats = stats.map(function (s, i) {\n        return _objectSpread({\n          key: \"q\".concat(i),\n          formatResult: function formatResult(x) {\n            return x;\n          },\n          aggsField: aggs.find(function (x) {\n            return x.field === (0, _Stats.underscoreField)(s.field);\n          })\n        }, s);\n      });\n      return _react[\"default\"].createElement(_Query[\"default\"], _extends({\n        api: api,\n        projectId: projectId,\n        graphqlField: graphqlField\n      }, {\n        renderError: true,\n        name: \"CombinedStatsQuery\",\n        shouldFetch: aggs.length,\n        variables: {\n          sqon: sqon\n        },\n        query: \"\\n            query($sqon: JSON) {\\n              data: \".concat(graphqlField, \" {\\n                \").concat(decoratedStats.map(function (_ref3) {\n          var key = _ref3.key,\n              aggsField = _ref3.aggsField,\n              isRoot = _ref3.isRoot;\n          return \"\".concat(key, \": \").concat(isRoot ? \"hits(filters: $sqon) {\\n                            total\\n                          }\" : \"aggregations(filters: $sqon, aggregations_filter_themselves: true) {\\n                            \".concat((aggsField === null || aggsField === void 0 ? void 0 : aggsField.query) || \"\", \"\\n                          }\"));\n        }), \"\\n              }\\n            }\\n          \"),\n        render: function render(_ref4) {\n          var data = _ref4.data,\n              loading = _ref4.loading;\n          return _render({\n            loading: loading,\n            data: decoratedStats.reduce(function (acc, x) {\n              acc[x.label] = x.formatResult((0, _lodash.get)(data, \"data.\".concat(x.key, \".\").concat(x.isRoot ? \"total\" : (0, _Stats.accessor)(x)), null));\n              return acc;\n            }, {})\n          });\n        }\n      }));\n    }\n  }));\n};\n\nvar _default = CombinedStatsQuery;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}