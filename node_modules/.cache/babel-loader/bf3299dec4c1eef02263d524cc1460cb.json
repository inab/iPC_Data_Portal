{"ast":null,"code":"import _classCallCheck from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{DatesAgg,BooleanAgg,TermAgg,RangeAgg,AggsPanel}from'@arranger/components/dist/Aggs';//import { action } from '@storybook/addon-actions';\nimport{inCurrentSQON,currentFieldValue}from'@arranger/components/dist/SQONView/utils';import Component from'react-component-component';import State from'@arranger/components/dist/State';import'./Aggs.css';var Aggs=/*#__PURE__*/function(_Component){_inherits(Aggs,_Component);function Aggs(){_classCallCheck(this,Aggs);return _possibleConstructorReturn(this,_getPrototypeOf(Aggs).apply(this,arguments));}_createClass(Aggs,[{key:\"render\",value:function render(){var bolleanAggs=[{field:'participants__is_proband',displayName:'Participants is proband',active:false,type:'Aggregations',allowedValues:[],restricted:false,buckets:[{key:'0',doc_count:2580,key_as_string:'false'},{key:'1',doc_count:961,key_as_string:'true'}]},{field:'sequencing_experiments__is_paired_end',displayName:'Is Paired Ende',active:false,type:'Aggregations',allowedValues:[],restricted:false,buckets:[{key:'0',doc_count:2580,key_as_string:'false'},{key:'1',doc_count:961,key_as_string:'true'}]},{field:'sequencing_experiments__is_paired_end_0',displayName:'Is Paired Ende',active:false,type:'Aggregations',allowedValues:[],restricted:false,buckets:[{key:'0',doc_count:0,key_as_string:'false'},{key:'1',doc_count:961,key_as_string:'true'}]},{field:'sequencing_experiments__is_paired_end_1',displayName:'Is Paired Ende',active:false,type:'Aggregations',allowedValues:[],restricted:false,buckets:[{key:'0',doc_count:2312,key_as_string:'false'},{key:'1',doc_count:0,key_as_string:'true'}]}];var aggs=[{field:'color',displayName:'Color',active:false,type:'Aggregations',allowedValues:[],restricted:false,buckets:[{doc_count:1,key:'green'},{doc_count:5,key:'yellow'},{doc_count:12,key:'blue'}]},{field:'taste',displayName:'Taste',active:false,type:'Aggregations',allowedValues:[],restricted:false,buckets:[{doc_count:1,key:'spicy'},{doc_count:5,key:'sweet'},{doc_count:12,key:'sour'},{doc_count:5,key:'salty'},{doc_count:12,key:'umami'},{doc_count:12,key:'bland'}]}];return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"term-agg-wrapper\"},React.createElement(TermAgg,{field:\"disease_type\",displayName:\"Disease Type\",buckets:[{doc_count:2,key:'Acute Myeloid Leukemia'},{doc_count:10,key:'Acinar cell neoplasms'}]//handleValueClick={action('Term Agg Selection')}\n}),React.createElement(TermAgg,{field:\"disease_type\",displayName:\"Disease Type\",buckets:[{doc_count:2,key:'Acute Myeloid Leukemia'},{doc_count:10,key:'Acinar cell neoplasms'}],headerTitle:\"# files\"}),React.createElement(State,{initial:{sqon:null},render:function render(_ref){var sqon=_ref.sqon,update=_ref.update;return React.createElement(\"div\",null,React.createElement(\"div\",null,\"SQON: \",JSON.stringify(sqon)),React.createElement(\"div\",null,aggs.map(function(agg){return(// TODO: switch on agg type\nReact.createElement(TermAgg,Object.assign({key:agg.field},agg,{handleValueClick:function handleValueClick(_ref2){var generateNextSQON=_ref2.generateNextSQON;return update({sqon:generateNextSQON(sqon)});},isActive:function isActive(d){return inCurrentSQON({value:d.value,dotField:d.field,currentSQON:sqon});}})));})));}}),React.createElement(DatesAgg,{field:\"disease_type\",displayName:\"Disease Type\",stats:{// expects linux timestamp\nmin:1529539200125,max:1529539259913}//handleValueClick={action('Term Agg Selection')}\n}),React.createElement(Component,{initialState:{sqon:null}},function(_ref3){var sqon=_ref3.state.sqon,setState=_ref3.setState;return React.createElement(\"div\",null,React.createElement(\"div\",null,\"SQON: \",JSON.stringify(sqon)),React.createElement(\"div\",null,React.createElement(DatesAgg,{field:\"disease_type\",displayName:\"Disease Type\",stats:{min:1529539200125,max:1529539259913},handleDateChange:function handleDateChange(){var _ref4=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref4$generateNextSQO=_ref4.generateNextSQON,generateNextSQON=_ref4$generateNextSQO===void 0?function(){}:_ref4$generateNextSQO;return setState({sqon:generateNextSQON(sqon)});},getActiveValue:function getActiveValue(_ref5){var op=_ref5.op,field=_ref5.field;return currentFieldValue({op:op,dotField:field,sqon:sqon});}})));}),React.createElement(RangeAgg,{field:\"cases__diagnoses__days_to_death\",displayName:\"Diagnoses Days To Death\",stats:{min:15,max:820,count:1000,avg:70,sum:15000}//handleChange={action(`Range Change`)}\n}),React.createElement(State,{initial:{sqon:null},render:function render(_ref6){var sqon=_ref6.sqon,update=_ref6.update;return React.createElement(\"div\",{className:\"range with sqon\"},React.createElement(\"div\",null,\"SQON: \",JSON.stringify(sqon)),React.createElement(RangeAgg,{field:\"cases__diagnoses__days_to_death\",displayName:\"Diagnoses Days To Death\",unit:'d',stats:{min:15,max:820,count:1000,avg:70,sum:15000},handleChange:function handleChange(_ref7){var generateNextSQON=_ref7.generateNextSQON;return update({sqon:generateNextSQON(sqon)});}}));}}),React.createElement(BooleanAgg,{field:\"cases__diagnoses__days_to_death\",displayName:\"Diagnoses Days To Death\",buckets:[{key:'0',doc_count:2580,key_as_string:'false'},{key:'1',doc_count:961,key_as_string:'true'}]//handleChange={action(`Range Change`)}\n}),React.createElement(State,{initial:{sqon:null},render:function render(_ref8){var sqon=_ref8.sqon,update=_ref8.update;return React.createElement(\"div\",null,React.createElement(\"div\",null,\"SQON: \",JSON.stringify(sqon)),React.createElement(\"div\",null,bolleanAggs.map(function(agg){return React.createElement(BooleanAgg,Object.assign({key:agg.field},agg,{handleValueClick:function handleValueClick(_ref9){var generateNextSQON=_ref9.generateNextSQON;return update({sqon:generateNextSQON(sqon)});},isActive:function isActive(d){return inCurrentSQON({value:d.value,dotField:d.field,currentSQON:sqon});}}));})));}}),React.createElement(State,{initial:{index:'',sqon:{}},render:function render(_ref10){var index=_ref10.index,update=_ref10.update;return React.createElement(\"div\",null,React.createElement(\"label\",null,\"index: \"),React.createElement(\"input\",{// <-- could be a dropdown of available indices\nvalue:index,onChange:function onChange(e){return update({index:e.target.value});}}),index&&React.createElement(\"div\",null,React.createElement(AggsPanel,{aggs:aggs,index:index,debounceTime:200})));}})));}}]);return Aggs;}(Component);export default Aggs;","map":{"version":3,"sources":["/home/user/iPC_Data_Portal/src/containers/Aggs/Aggs.js"],"names":["React","DatesAgg","BooleanAgg","TermAgg","RangeAgg","AggsPanel","inCurrentSQON","currentFieldValue","Component","State","Aggs","bolleanAggs","field","displayName","active","type","allowedValues","restricted","buckets","key","doc_count","key_as_string","aggs","sqon","update","JSON","stringify","map","agg","generateNextSQON","d","value","dotField","currentSQON","min","max","state","setState","op","count","avg","sum","index","e","target"],"mappings":"+iBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OACEC,QADF,CAEEC,UAFF,CAGEC,OAHF,CAIEC,QAJF,CAKEC,SALF,KAMO,gCANP,CAQA;AAEA,OAASC,aAAT,CAAwBC,iBAAxB,KAAiD,0CAAjD,CAEA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,iCAAlB,CAEA,MAAO,YAAP,C,GAEMC,CAAAA,I,sPAEK,CAEP,GAAMC,CAAAA,WAAW,CAAG,CAClB,CACEC,KAAK,CAAE,0BADT,CAEEC,WAAW,CAAE,yBAFf,CAGEC,MAAM,CAAE,KAHV,CAIEC,IAAI,CAAE,cAJR,CAKEC,aAAa,CAAE,EALjB,CAMEC,UAAU,CAAE,KANd,CAOEC,OAAO,CAAE,CACP,CACEC,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,IAFb,CAGEC,aAAa,CAAE,OAHjB,CADO,CAMP,CACEF,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,GAFb,CAGEC,aAAa,CAAE,MAHjB,CANO,CAPX,CADkB,CAqBlB,CACET,KAAK,CAAE,uCADT,CAEEC,WAAW,CAAE,gBAFf,CAGEC,MAAM,CAAE,KAHV,CAIEC,IAAI,CAAE,cAJR,CAKEC,aAAa,CAAE,EALjB,CAMEC,UAAU,CAAE,KANd,CAOEC,OAAO,CAAE,CACP,CACEC,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,IAFb,CAGEC,aAAa,CAAE,OAHjB,CADO,CAMP,CACEF,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,GAFb,CAGEC,aAAa,CAAE,MAHjB,CANO,CAPX,CArBkB,CAyClB,CACET,KAAK,CAAE,yCADT,CAEEC,WAAW,CAAE,gBAFf,CAGEC,MAAM,CAAE,KAHV,CAIEC,IAAI,CAAE,cAJR,CAKEC,aAAa,CAAE,EALjB,CAMEC,UAAU,CAAE,KANd,CAOEC,OAAO,CAAE,CACP,CACEC,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,CAFb,CAGEC,aAAa,CAAE,OAHjB,CADO,CAMP,CACEF,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,GAFb,CAGEC,aAAa,CAAE,MAHjB,CANO,CAPX,CAzCkB,CA6DlB,CACET,KAAK,CAAE,yCADT,CAEEC,WAAW,CAAE,gBAFf,CAGEC,MAAM,CAAE,KAHV,CAIEC,IAAI,CAAE,cAJR,CAKEC,aAAa,CAAE,EALjB,CAMEC,UAAU,CAAE,KANd,CAOEC,OAAO,CAAE,CACP,CACEC,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,IAFb,CAGEC,aAAa,CAAE,OAHjB,CADO,CAMP,CACEF,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,CAFb,CAGEC,aAAa,CAAE,MAHjB,CANO,CAPX,CA7DkB,CAApB,CAmFA,GAAIC,CAAAA,IAAI,CAAG,CACT,CACEV,KAAK,CAAE,OADT,CAEEC,WAAW,CAAE,OAFf,CAGEC,MAAM,CAAE,KAHV,CAIEC,IAAI,CAAE,cAJR,CAKEC,aAAa,CAAE,EALjB,CAMEC,UAAU,CAAE,KANd,CAOEC,OAAO,CAAE,CACP,CACEE,SAAS,CAAE,CADb,CAEED,GAAG,CAAE,OAFP,CADO,CAKP,CACEC,SAAS,CAAE,CADb,CAEED,GAAG,CAAE,QAFP,CALO,CASP,CACEC,SAAS,CAAE,EADb,CAEED,GAAG,CAAE,MAFP,CATO,CAPX,CADS,CAuBT,CACEP,KAAK,CAAE,OADT,CAEEC,WAAW,CAAE,OAFf,CAGEC,MAAM,CAAE,KAHV,CAIEC,IAAI,CAAE,cAJR,CAKEC,aAAa,CAAE,EALjB,CAMEC,UAAU,CAAE,KANd,CAOEC,OAAO,CAAE,CACP,CACEE,SAAS,CAAE,CADb,CAEED,GAAG,CAAE,OAFP,CADO,CAKP,CACEC,SAAS,CAAE,CADb,CAEED,GAAG,CAAE,OAFP,CALO,CASP,CACEC,SAAS,CAAE,EADb,CAEED,GAAG,CAAE,MAFP,CATO,CAaP,CACEC,SAAS,CAAE,CADb,CAEED,GAAG,CAAE,OAFP,CAbO,CAiBP,CACEC,SAAS,CAAE,EADb,CAEED,GAAG,CAAE,OAFP,CAjBO,CAqBP,CACEC,SAAS,CAAE,EADb,CAEED,GAAG,CAAE,OAFP,CArBO,CAPX,CAvBS,CAAX,CA2DA,MAEE,qBAAC,KAAD,CAAO,QAAP,MAEE,2BAAK,SAAS,CAAC,kBAAf,EACE,oBAAC,OAAD,EACE,KAAK,CAAC,cADR,CAEE,WAAW,CAAC,cAFd,CAGE,OAAO,CAAE,CACP,CACEC,SAAS,CAAE,CADb,CAEED,GAAG,CAAE,wBAFP,CADO,CAKP,CACEC,SAAS,CAAE,EADb,CAEED,GAAG,CAAE,uBAFP,CALO,CAUX;AAbA,EADF,CAiBE,oBAAC,OAAD,EACE,KAAK,CAAC,cADR,CAEE,WAAW,CAAC,cAFd,CAGE,OAAO,CAAE,CACP,CACEC,SAAS,CAAE,CADb,CAEED,GAAG,CAAE,wBAFP,CADO,CAKP,CACEC,SAAS,CAAE,EADb,CAEED,GAAG,CAAE,uBAFP,CALO,CAHX,CAaE,WAAW,CAAC,SAbd,EAjBF,CAiCE,oBAAC,KAAD,EACE,OAAO,CAAE,CAAEI,IAAI,CAAE,IAAR,CADX,CAEE,MAAM,CAAE,yBAAGA,CAAAA,IAAH,MAAGA,IAAH,CAASC,MAAT,MAASA,MAAT,OACN,gCACE,wCAAYC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAZ,CADF,CAEE,+BACGD,IAAI,CAACK,GAAL,CAAS,SAAAC,GAAG,QACX;AACA,oBAAC,OAAD,gBACE,GAAG,CAAEA,GAAG,CAAChB,KADX,EAEMgB,GAFN,EAGE,gBAAgB,CAAE,oCAAGC,CAAAA,gBAAH,OAAGA,gBAAH,OAChBL,CAAAA,MAAM,CAAC,CAAED,IAAI,CAAEM,gBAAgB,CAACN,IAAD,CAAxB,CAAD,CADU,EAHpB,CAME,QAAQ,CAAE,kBAAAO,CAAC,QACTxB,CAAAA,aAAa,CAAC,CACZyB,KAAK,CAAED,CAAC,CAACC,KADG,CAEZC,QAAQ,CAAEF,CAAC,CAAClB,KAFA,CAGZqB,WAAW,CAAEV,IAHD,CAAD,CADJ,EANb,GAFW,GAAZ,CADH,CAFF,CADM,EAFV,EAjCF,CA6DE,oBAAC,QAAD,EACE,KAAK,CAAC,cADR,CAEE,WAAW,CAAC,cAFd,CAGE,KAAK,CAAE,CACL;AACAW,GAAG,CAAE,aAFA,CAGLC,GAAG,CAAE,aAHA,CAKT;AARA,EA7DF,CAwEE,oBAAC,SAAD,EAAW,YAAY,CAAE,CAAEZ,IAAI,CAAE,IAAR,CAAzB,EACG,mBAAYA,CAAAA,IAAZ,OAAGa,KAAH,CAAYb,IAAZ,CAAoBc,QAApB,OAAoBA,QAApB,OACC,gCACE,wCAAYZ,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAZ,CADF,CAEE,+BACE,oBAAC,QAAD,EACE,KAAK,CAAC,cADR,CAEE,WAAW,CAAC,cAFd,CAGE,KAAK,CAAE,CACLW,GAAG,CAAE,aADA,CAELC,GAAG,CAAE,aAFA,CAHT,CAOE,gBAAgB,CAAE,gGAAoC,EAApC,6BAAGN,gBAAH,CAAGA,gBAAH,gCAAsB,UAAM,CAAG,CAA/B,6BAChBQ,CAAAA,QAAQ,CAAC,CAAEd,IAAI,CAAEM,gBAAgB,CAACN,IAAD,CAAxB,CAAD,CADQ,EAPpB,CAUE,cAAc,CAAE,kCAAGe,CAAAA,EAAH,OAAGA,EAAH,CAAO1B,KAAP,OAAOA,KAAP,OACdL,CAAAA,iBAAiB,CAAC,CAChB+B,EAAE,CAAFA,EADgB,CAEhBN,QAAQ,CAAEpB,KAFM,CAGhBW,IAAI,CAAJA,IAHgB,CAAD,CADH,EAVlB,EADF,CAFF,CADD,EADH,CAxEF,CAoGE,oBAAC,QAAD,EACE,KAAK,CAAC,iCADR,CAEE,WAAW,CAAC,yBAFd,CAGE,KAAK,CAAE,CACLW,GAAG,CAAE,EADA,CAELC,GAAG,CAAE,GAFA,CAGLI,KAAK,CAAE,IAHF,CAILC,GAAG,CAAE,EAJA,CAKLC,GAAG,CAAE,KALA,CAOT;AAVA,EApGF,CAiHE,oBAAC,KAAD,EACE,OAAO,CAAE,CAAElB,IAAI,CAAE,IAAR,CADX,CAEE,MAAM,CAAE,0BAAGA,CAAAA,IAAH,OAAGA,IAAH,CAASC,MAAT,OAASA,MAAT,OACN,4BAAK,SAAS,CAAC,iBAAf,EACE,wCAAYC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAZ,CADF,CAEE,oBAAC,QAAD,EACE,KAAK,CAAC,iCADR,CAEE,WAAW,CAAC,yBAFd,CAGE,IAAI,CAAE,GAHR,CAIE,KAAK,CAAE,CACLW,GAAG,CAAE,EADA,CAELC,GAAG,CAAE,GAFA,CAGLI,KAAK,CAAE,IAHF,CAILC,GAAG,CAAE,EAJA,CAKLC,GAAG,CAAE,KALA,CAJT,CAWE,YAAY,CAAE,gCAAGZ,CAAAA,gBAAH,OAAGA,gBAAH,OACZL,CAAAA,MAAM,CAAC,CAAED,IAAI,CAAEM,gBAAgB,CAACN,IAAD,CAAxB,CAAD,CADM,EAXhB,EAFF,CADM,EAFV,EAjHF,CAyIE,oBAAC,UAAD,EACE,KAAK,CAAC,iCADR,CAEE,WAAW,CAAC,yBAFd,CAGE,OAAO,CAAE,CACP,CACEJ,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,IAFb,CAGEC,aAAa,CAAE,OAHjB,CADO,CAMP,CACEF,GAAG,CAAE,GADP,CAEEC,SAAS,CAAE,GAFb,CAGEC,aAAa,CAAE,MAHjB,CANO,CAYX;AAfA,EAzIF,CA2JE,oBAAC,KAAD,EACE,OAAO,CAAE,CAAEE,IAAI,CAAE,IAAR,CADX,CAEE,MAAM,CAAE,0BAAGA,CAAAA,IAAH,OAAGA,IAAH,CAASC,MAAT,OAASA,MAAT,OACN,gCACE,wCAAYC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAZ,CADF,CAEE,+BACGZ,WAAW,CAACgB,GAAZ,CAAgB,SAAAC,GAAG,QAClB,qBAAC,UAAD,gBACE,GAAG,CAAEA,GAAG,CAAChB,KADX,EAEMgB,GAFN,EAGE,gBAAgB,CAAE,oCAAGC,CAAAA,gBAAH,OAAGA,gBAAH,OAChBL,CAAAA,MAAM,CAAC,CAAED,IAAI,CAAEM,gBAAgB,CAACN,IAAD,CAAxB,CAAD,CADU,EAHpB,CAME,QAAQ,CAAE,kBAAAO,CAAC,QACTxB,CAAAA,aAAa,CAAC,CACZyB,KAAK,CAAED,CAAC,CAACC,KADG,CAEZC,QAAQ,CAAEF,CAAC,CAAClB,KAFA,CAGZqB,WAAW,CAAEV,IAHD,CAAD,CADJ,EANb,GADkB,EAAnB,CADH,CAFF,CADM,EAFV,EA3JF,CAsLE,oBAAC,KAAD,EACE,OAAO,CAAE,CAAEmB,KAAK,CAAE,EAAT,CAAanB,IAAI,CAAE,EAAnB,CADX,CAEE,MAAM,CAAE,2BAAGmB,CAAAA,KAAH,QAAGA,KAAH,CAAUlB,MAAV,QAAUA,MAAV,OACN,gCACE,2CADF,CAEE,6BAAO;AACL,KAAK,CAAEkB,KADT,CAEE,QAAQ,CAAE,kBAAAC,CAAC,QAAInB,CAAAA,MAAM,CAAC,CAAEkB,KAAK,CAAEC,CAAC,CAACC,MAAF,CAASb,KAAlB,CAAD,CAAV,EAFb,EAFF,CAMGW,KAAK,EACJ,+BACE,oBAAC,SAAD,EAAW,IAAI,CAAEpB,IAAjB,CAAuB,KAAK,CAAEoB,KAA9B,CAAqC,YAAY,CAAE,GAAnD,EADF,CAPJ,CADM,EAFV,EAtLF,CAFF,CAFF,CAiND,C,kBAnWgBlC,S,EAsWnB,cAAeE,CAAAA,IAAf","sourcesContent":["import React from 'react';\n\nimport {\n  DatesAgg,\n  BooleanAgg,\n  TermAgg,\n  RangeAgg,\n  AggsPanel,\n} from '@arranger/components/dist/Aggs';\n\n//import { action } from '@storybook/addon-actions';\n\nimport { inCurrentSQON, currentFieldValue } from '@arranger/components/dist/SQONView/utils';\n\nimport Component from 'react-component-component';\n\nimport State from '@arranger/components/dist/State';\n\nimport './Aggs.css';\n\nclass Aggs extends Component {\n\n  render() {\n\n    const bolleanAggs = [\n      {\n        field: 'participants__is_proband',\n        displayName: 'Participants is proband',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 2580,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 961,\n            key_as_string: 'true',\n          },\n        ],\n      },\n      {\n        field: 'sequencing_experiments__is_paired_end',\n        displayName: 'Is Paired Ende',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 2580,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 961,\n            key_as_string: 'true',\n          },\n        ],\n      },\n      {\n        field: 'sequencing_experiments__is_paired_end_0',\n        displayName: 'Is Paired Ende',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 0,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 961,\n            key_as_string: 'true',\n          },\n        ],\n      },\n      {\n        field: 'sequencing_experiments__is_paired_end_1',\n        displayName: 'Is Paired Ende',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            key: '0',\n            doc_count: 2312,\n            key_as_string: 'false',\n          },\n          {\n            key: '1',\n            doc_count: 0,\n            key_as_string: 'true',\n          },\n        ],\n      },\n    ];\n\n    let aggs = [\n      {\n        field: 'color',\n        displayName: 'Color',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            doc_count: 1,\n            key: 'green',\n          },\n          {\n            doc_count: 5,\n            key: 'yellow',\n          },\n          {\n            doc_count: 12,\n            key: 'blue',\n          },\n        ],\n      },\n      {\n        field: 'taste',\n        displayName: 'Taste',\n        active: false,\n        type: 'Aggregations',\n        allowedValues: [],\n        restricted: false,\n        buckets: [\n          {\n            doc_count: 1,\n            key: 'spicy',\n          },\n          {\n            doc_count: 5,\n            key: 'sweet',\n          },\n          {\n            doc_count: 12,\n            key: 'sour',\n          },\n          {\n            doc_count: 5,\n            key: 'salty',\n          },\n          {\n            doc_count: 12,\n            key: 'umami',\n          },\n          {\n            doc_count: 12,\n            key: 'bland',\n          },\n        ],\n      },\n    ];\n\n    return (\n\n      <React.Fragment>\n\n        <div className=\"term-agg-wrapper\">\n          <TermAgg\n            field=\"disease_type\"\n            displayName=\"Disease Type\"\n            buckets={[\n              {\n                doc_count: 2,\n                key: 'Acute Myeloid Leukemia',\n              },\n              {\n                doc_count: 10,\n                key: 'Acinar cell neoplasms',\n              },\n            ]}\n          //handleValueClick={action('Term Agg Selection')}\n          />\n\n          <TermAgg\n            field=\"disease_type\"\n            displayName=\"Disease Type\"\n            buckets={[\n              {\n                doc_count: 2,\n                key: 'Acute Myeloid Leukemia',\n              },\n              {\n                doc_count: 10,\n                key: 'Acinar cell neoplasms',\n              },\n            ]}\n            headerTitle=\"# files\"\n          />\n\n          <State\n            initial={{ sqon: null }}\n            render={({ sqon, update }) => (\n              <div>\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <div>\n                  {aggs.map(agg => (\n                    // TODO: switch on agg type\n                    <TermAgg\n                      key={agg.field}\n                      {...agg}\n                      handleValueClick={({ generateNextSQON }) =>\n                        update({ sqon: generateNextSQON(sqon) })\n                      }\n                      isActive={d =>\n                        inCurrentSQON({\n                          value: d.value,\n                          dotField: d.field,\n                          currentSQON: sqon,\n                        })\n                      }\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          />\n\n          <DatesAgg\n            field=\"disease_type\"\n            displayName=\"Disease Type\"\n            stats={{\n              // expects linux timestamp\n              min: 1529539200125,\n              max: 1529539259913,\n            }}\n          //handleValueClick={action('Term Agg Selection')}\n          />\n\n          <Component initialState={{ sqon: null }}>\n            {({ state: { sqon }, setState }) => (\n              <div>\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <div>\n                  <DatesAgg\n                    field=\"disease_type\"\n                    displayName=\"Disease Type\"\n                    stats={{\n                      min: 1529539200125,\n                      max: 1529539259913,\n                    }}\n                    handleDateChange={({ generateNextSQON = () => { } } = {}) =>\n                      setState({ sqon: generateNextSQON(sqon) })\n                    }\n                    getActiveValue={({ op, field }) =>\n                      currentFieldValue({\n                        op,\n                        dotField: field,\n                        sqon,\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            )}\n          </Component>\n\n          <RangeAgg\n            field=\"cases__diagnoses__days_to_death\"\n            displayName=\"Diagnoses Days To Death\"\n            stats={{\n              min: 15,\n              max: 820,\n              count: 1000,\n              avg: 70,\n              sum: 15000,\n            }}\n          //handleChange={action(`Range Change`)}\n          />\n\n          <State\n            initial={{ sqon: null }}\n            render={({ sqon, update }) => (\n              <div className=\"range with sqon\">\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <RangeAgg\n                  field=\"cases__diagnoses__days_to_death\"\n                  displayName=\"Diagnoses Days To Death\"\n                  unit={'d'}\n                  stats={{\n                    min: 15,\n                    max: 820,\n                    count: 1000,\n                    avg: 70,\n                    sum: 15000,\n                  }}\n                  handleChange={({ generateNextSQON }) =>\n                    update({ sqon: generateNextSQON(sqon) })\n                  }\n                />\n              </div>\n            )}\n          />\n\n          <BooleanAgg\n            field=\"cases__diagnoses__days_to_death\"\n            displayName=\"Diagnoses Days To Death\"\n            buckets={[\n              {\n                key: '0',\n                doc_count: 2580,\n                key_as_string: 'false',\n              },\n              {\n                key: '1',\n                doc_count: 961,\n                key_as_string: 'true',\n              },\n            ]}\n          //handleChange={action(`Range Change`)}\n          />\n\n          <State\n            initial={{ sqon: null }}\n            render={({ sqon, update }) => (\n              <div>\n                <div>SQON: {JSON.stringify(sqon)}</div>\n                <div>\n                  {bolleanAggs.map(agg => (\n                    <BooleanAgg\n                      key={agg.field}\n                      {...agg}\n                      handleValueClick={({ generateNextSQON }) =>\n                        update({ sqon: generateNextSQON(sqon) })\n                      }\n                      isActive={d =>\n                        inCurrentSQON({\n                          value: d.value,\n                          dotField: d.field,\n                          currentSQON: sqon,\n                        })\n                      }\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          />\n\n          <State\n            initial={{ index: '', sqon: {} }}\n            render={({ index, update }) => (\n              <div>\n                <label>index: </label>\n                <input // <-- could be a dropdown of available indices\n                  value={index}\n                  onChange={e => update({ index: e.target.value })}\n                />\n                {index && (\n                  <div>\n                    <AggsPanel aggs={aggs} index={index} debounceTime={200} />\n                  </div>\n                )}\n              </div>\n            )}\n          />\n\n        </div>\n\n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default Aggs;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}