{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactComponentComponent = _interopRequireDefault(require(\"react-component-component\"));\n\nvar _clone = _interopRequireDefault(require(\"react-icons/lib/fa/clone\"));\n\nvar _trash = _interopRequireDefault(require(\"react-icons/lib/fa/trash\"));\n\nvar _BooleanOp = _interopRequireDefault(require(\"./sqonPieces/BooleanOp\"));\n\nvar _utils = require(\"./utils\");\n\nvar _config = require(\"../utils/config\");\n\nvar _api = _interopRequireDefault(require(\"../utils/api\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _default = function _default(props) {\n  var _props$arrangerProjec = props.arrangerProjectId,\n      arrangerProjectId = _props$arrangerProjec === void 0 ? _config.PROJECT_ID : _props$arrangerProjec,\n      arrangerProjectIndex = props.arrangerProjectIndex,\n      syntheticSqon = props.syntheticSqon,\n      getActiveExecutableSqon = props.getActiveExecutableSqon,\n      _props$SqonActionComp = props.SqonActionComponent,\n      SqonActionComponent = _props$SqonActionComp === void 0 ? function (_ref) {\n    var sqonIndex = _ref.sqonIndex,\n        isActive = _ref.isActive,\n        isSelected = _ref.isSelected;\n    return null;\n  } : _props$SqonActionComp,\n      _props$isActiveSqon = props.isActiveSqon,\n      isActiveSqon = _props$isActiveSqon === void 0 ? false : _props$isActiveSqon,\n      _props$isSelected = props.isSelected,\n      isSelected = _props$isSelected === void 0 ? false : _props$isSelected,\n      _props$index = props.index,\n      index = _props$index === void 0 ? 0 : _props$index,\n      _props$FieldOpModifie = props.FieldOpModifierContainer,\n      FieldOpModifierContainer = _props$FieldOpModifie === void 0 ? undefined : _props$FieldOpModifie,\n      _props$api = props.api,\n      api = _props$api === void 0 ? _api[\"default\"] : _props$api,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$getColorForRef = props.getColorForReference,\n      getColorForReference = _props$getColorForRef === void 0 ? function (index) {\n    return '';\n  } : _props$getColorForRef,\n      _props$isReferenced = props.isReferenced,\n      isReferenced = _props$isReferenced === void 0 ? false : _props$isReferenced,\n      _props$isIndexReferen = props.isIndexReferenced,\n      isIndexReferenced = _props$isIndexReferen === void 0 ? function (index) {\n    return false;\n  } : _props$isIndexReferen,\n      _props$isDeleting = props.isDeleting,\n      isDeleting = _props$isDeleting === void 0 ? false : _props$isDeleting,\n      _props$dependentIndic = props.dependentIndices,\n      dependentIndices = _props$dependentIndic === void 0 ? [] : _props$dependentIndic,\n      _props$onSqonCheckedC = props.onSqonCheckedChange,\n      onSqonCheckedChange = _props$onSqonCheckedC === void 0 ? function () {} : _props$onSqonCheckedC,\n      _props$onSqonDuplicat = props.onSqonDuplicate,\n      onSqonDuplicate = _props$onSqonDuplicat === void 0 ? function () {} : _props$onSqonDuplicat,\n      _props$onSqonRemove = props.onSqonRemove,\n      onSqonRemove = _props$onSqonRemove === void 0 ? function () {} : _props$onSqonRemove,\n      _props$onSqonChange = props.onSqonChange,\n      onSqonChange = _props$onSqonChange === void 0 ? function (sqon) {} : _props$onSqonChange,\n      _props$onActivate = props.onActivate,\n      onActivate = _props$onActivate === void 0 ? function () {} : _props$onActivate,\n      _props$onDeleteConfir = props.onDeleteConfirmed,\n      onDeleteConfirmed = _props$onDeleteConfir === void 0 ? function () {} : _props$onDeleteConfir,\n      _props$onDeleteCancel = props.onDeleteCanceled,\n      onDeleteCanceled = _props$onDeleteCancel === void 0 ? function () {} : _props$onDeleteCancel,\n      _props$emptyEntryMess = props.emptyEntryMessage,\n      emptyEntryMessage = _props$emptyEntryMess === void 0 ? null : _props$emptyEntryMess;\n  var referenceColor = getColorForReference(index);\n  var initialState = {\n    hoverring: false\n  };\n\n  var hoverStart = function hoverStart(s) {\n    return function (e) {\n      s.setState({\n        hoverring: true\n      });\n    };\n  };\n\n  var hoverEnd = function hoverEnd(s) {\n    return function (e) {\n      s.setState({\n        hoverring: false\n      });\n    };\n  };\n\n  var onFieldOpRemove = function onFieldOpRemove(removedPath) {\n    return onSqonChange((0, _utils.removeSqonPath)(removedPath)(syntheticSqon));\n  };\n\n  var onLogicalOpChanged = function onLogicalOpChanged(changedPath, newSqon) {\n    return onSqonChange((0, _utils.setSqonAtPath)(changedPath, newSqon)(syntheticSqon));\n  };\n\n  return _react[\"default\"].createElement(_reactComponentComponent[\"default\"], {\n    initialState: initialState\n  }, function (s) {\n    return _react[\"default\"].createElement(\"div\", {\n      onMouseEnter: hoverStart(s),\n      onMouseLeave: hoverEnd(s),\n      className: \"sqonEntry \".concat(isActiveSqon ? 'active' : ''),\n      onClick: onActivate\n    }, _react[\"default\"].createElement(\"div\", {\n      className: \"activeStateIndicator\",\n      style: !isReferenced ? {} : {\n        background: referenceColor\n      }\n    }), _react[\"default\"].createElement(\"div\", {\n      className: \"selectionContainer\",\n      onClick: onSqonCheckedChange\n    }, _react[\"default\"].createElement(\"input\", {\n      readOnly: true,\n      type: \"checkbox\",\n      checked: isSelected,\n      disabled: disabled\n    }), ' ', \"#\", index + 1), _react[\"default\"].createElement(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center'\n      }\n    }, _react[\"default\"].createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      }\n    }, _react[\"default\"].createElement(\"div\", {\n      className: \"sqonView\"\n    }, (0, _utils.isEmptySqon)(syntheticSqon) ? emptyEntryMessage : (0, _utils.isBooleanOp)(syntheticSqon) && _react[\"default\"].createElement(_BooleanOp[\"default\"], {\n      arrangerProjectId: arrangerProjectId,\n      arrangerProjectIndex: arrangerProjectIndex,\n      index: 0,\n      onFieldOpRemove: onFieldOpRemove,\n      onChange: onLogicalOpChanged,\n      sqon: syntheticSqon,\n      FieldOpModifierContainer: FieldOpModifierContainer,\n      api: api,\n      getActiveExecutableSqon: getActiveExecutableSqon,\n      getColorForReference: getColorForReference,\n      isIndexReferenced: isIndexReferenced,\n      referencesShouldHighlight: isActiveSqon\n    })))), (isActiveSqon || s.state.hoverring) && _react[\"default\"].createElement(\"div\", {\n      className: \"actionButtonsContainer\"\n    }, _react[\"default\"].createElement(\"button\", {\n      className: \"sqonListActionButton\",\n      disabled: disabled,\n      onClick: onSqonDuplicate\n    }, _react[\"default\"].createElement(_clone[\"default\"], null)), _react[\"default\"].createElement(\"button\", {\n      className: \"sqonListActionButton\",\n      onClick: onSqonRemove\n    }, _react[\"default\"].createElement(_trash[\"default\"], null))), isDeleting && _react[\"default\"].createElement(\"div\", {\n      className: 'actionButtonsContainer deleteConfirmation'\n    }, _react[\"default\"].createElement(\"div\", null, !!dependentIndices.length && _react[\"default\"].createElement(\"div\", null, \"Dependent queries will be deleted.\"), _react[\"default\"].createElement(\"div\", null, \"Are you sure you want to delete?\")), _react[\"default\"].createElement(\"button\", {\n      className: \"button cancel\",\n      onClick: onDeleteCanceled\n    }, \"CANCEL\"), _react[\"default\"].createElement(\"button\", {\n      className: \"button delete\",\n      onClick: onDeleteConfirmed\n    }, \"DELETE\")), _react[\"default\"].createElement(SqonActionComponent, {\n      isHoverring: s.state.hoverring,\n      sqonIndex: index,\n      isActive: isActiveSqon,\n      isSelected: isSelected\n    }));\n  });\n};\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}