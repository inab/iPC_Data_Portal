{"ast":null,"code":"import _classCallCheck from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/user/iPC_Data_Portal/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';//$FlowIgnore\nimport SQONView from'@arranger/components/dist/SQONView';//import { themeDecorator } from './decorators';\nvar SQON=/*#__PURE__*/function(_Component){_inherits(SQON,_Component);function SQON(){_classCallCheck(this,SQON);return _possibleConstructorReturn(this,_getPrototypeOf(SQON).apply(this,arguments));}_createClass(SQON,[{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(SQONView,{sqon:{op:'and',content:[{op:'is',content:{field:'gender',value:'female'}},{op:'is',content:{field:'cases.exposures.cigarettes_per_day',value:5}}]}}),React.createElement(SQONView,{sqon:{op:'and',content:[{op:'filter',content:{fields:['gender','state','country'],value:'fema'}}]}}));}}]);return SQON;}(Component);export default SQON;","map":{"version":3,"sources":["/home/user/iPC_Data_Portal/src/containers/SQON/SQON.js"],"names":["React","Component","SQONView","SQON","op","content","field","value","fields"],"mappings":"+iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,oCAArB,CACA;GAEMC,CAAAA,I,sPAEK,CAEP,MAEE,qBAAC,KAAD,CAAO,QAAP,MA6JE,oBAAC,QAAD,EACE,IAAI,CAAE,CACJC,EAAE,CAAE,KADA,CAEJC,OAAO,CAAE,CACP,CACED,EAAE,CAAE,IADN,CAEEC,OAAO,CAAE,CACPC,KAAK,CAAE,QADA,CAEPC,KAAK,CAAE,QAFA,CAFX,CADO,CAQP,CACEH,EAAE,CAAE,IADN,CAEEC,OAAO,CAAE,CACPC,KAAK,CAAE,oCADA,CAEPC,KAAK,CAAE,CAFA,CAFX,CARO,CAFL,CADR,EA7JF,CAmLE,oBAAC,QAAD,EACE,IAAI,CAAE,CACJH,EAAE,CAAE,KADA,CAEJC,OAAO,CAAE,CACP,CACED,EAAE,CAAE,QADN,CAEEC,OAAO,CAAE,CACPG,MAAM,CAAE,CAAC,QAAD,CAAW,OAAX,CAAoB,SAApB,CADD,CAEPD,KAAK,CAAE,MAFA,CAFX,CADO,CAFL,CADR,EAnLF,CAFF,CAsMD,C,kBA1MgBN,S,EA6MnB,cAAeE,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react';\n//$FlowIgnore\nimport SQONView from '@arranger/components/dist/SQONView';\n//import { themeDecorator } from './decorators';\n\nclass SQON extends Component {\n\n  render() {\n\n    return (\n\n      <React.Fragment>\n\n        {/*\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung', 'heart'],\n                },\n              },\n            ],\n          }}\n        />\n        \n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung', 'heart', 'brain', 'blood', 'kidney'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: [\n                    'lung',\n                    'heart',\n                    'brain',\n                    'blood',\n                    'kidney',\n                    'lung1',\n                    'heart1',\n                    'brain1',\n                    'blood1',\n                    'kidney1',\n                    'lung2',\n                    'heart2',\n                    'brain2',\n                    'blood2',\n                    'kidney2',\n                    'lung3',\n                    'heart3',\n                    'brain3',\n                    'blood3',\n                    'kidney3',\n                  ],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['lung', 'heart', 'brain'],\n                },\n              },\n              {\n                op: 'in',\n                content: {\n                  field: 'gender',\n                  value: ['female', 'male', 'unknown'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: '>=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['1'],\n                },\n              },\n              {\n                op: '<=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['5'],\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: '>=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['1'],\n                },\n              },\n              {\n                op: '<=',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: ['5'],\n                },\n              },\n              {\n                op: 'in',\n                content: {\n                  field: 'primary_site',\n                  value: ['heart', 'lung', 'bone', 'blood', 'liver'],\n                },\n              },\n            ],\n          }}\n        />\n*/}\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'is',\n                content: {\n                  field: 'gender',\n                  value: 'female',\n                },\n              },\n              {\n                op: 'is',\n                content: {\n                  field: 'cases.exposures.cigarettes_per_day',\n                  value: 5,\n                },\n              },\n            ],\n          }}\n        />\n\n        <SQONView\n          sqon={{\n            op: 'and',\n            content: [\n              {\n                op: 'filter',\n                content: {\n                  fields: ['gender', 'state', 'country'],\n                  value: 'fema',\n                },\n              },\n            ],\n          }}\n        />\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SQON;"]},"metadata":{},"sourceType":"module"}