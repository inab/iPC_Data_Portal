{"ast":null,"code":"var _jsxFileName = \"/home/acanosa/React_arranger_template/src/containers/Search/Search.js\";\nimport React, { Component } from 'react';\nimport classes from './Search.module.css';\nimport { PORTAL_NAME, ACTIVE_INDEX, ACTIVE_INDEX_NAME, PROJECT_ID, deleteValue, setValue } from '@arranger/components/dist/utils/config';\nimport State from '@arranger/components/dist/State';\nimport { Arranger, GetProjects, Aggregations, CurrentSQON, Table } from '@arranger/components/dist/Arranger';\n\nclass Search extends Component {\n  render() {\n    const ChooseProject = ({\n      index,\n      projectId,\n      update,\n      projects\n    }) => {\n      var _projects$find2, _projects$find2$types, _projects$find2$types2;\n\n      return React.createElement(\"div\", {\n        css: `\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            height: 100%;\n            justify-content: center;\n          `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        css: `\n              margin-top: 0;\n            `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, PORTAL_NAME), React.createElement(\"select\", {\n        value: projectId,\n        onChange: e => {\n          setValue('PROJECT_ID', e.target.value);\n          update({\n            projectId: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        id: \"version\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Select a version\"), projects.map(x => React.createElement(\"option\", {\n        key: x.id,\n        value: x.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, x.id))), React.createElement(\"select\", {\n        value: index,\n        onChange: e => {\n          var _projects$find, _projects$find$types;\n\n          setValue('ACTIVE_INDEX', e.target.value);\n          let graphqlField = (_projects$find = projects.find(x => x.id === projectId)) === null || _projects$find === void 0 ? void 0 : (_projects$find$types = _projects$find.types) === null || _projects$find$types === void 0 ? void 0 : _projects$find$types.types.find(x => x.index === e.target.value).name;\n          setValue('ACTIVE_INDEX_NAME', graphqlField);\n          update({\n            index: e.target.value,\n            graphqlField\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        id: \"version\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Select an index\"), (_projects$find2 = projects.find(x => x.id === projectId)) === null || _projects$find2 === void 0 ? void 0 : (_projects$find2$types = _projects$find2.types) === null || _projects$find2$types === void 0 ? void 0 : (_projects$find2$types2 = _projects$find2$types.types) === null || _projects$find2$types2 === void 0 ? void 0 : _projects$find2$types2.map(x => React.createElement(\"option\", {\n        key: x.index,\n        value: x.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, x.index))));\n    };\n\n    const Portal = ({\n      style,\n      ...props\n    }) => {\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          ...style\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Aggregations, Object.assign({\n        style: {\n          width: 300\n        },\n        componentProps: {\n          getTermAggProps: () => ({\n            maxTerms: 3\n          })\n        }\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        css: `\n              position: relative;\n              flex-grow: 1;\n              display: flex;\n              flex-direction: column;\n            `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CurrentSQON, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(Table, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))));\n    };\n\n    console.log(\"PORTAL_NAME, ACTIVE_INDEX, ACTIVE_INDEX_NAME, PROJECT_ID, deleteValue, setValue : \\n\", PORTAL_NAME, ACTIVE_INDEX, ACTIVE_INDEX_NAME, PROJECT_ID, deleteValue, setValue);\n    console.log(\"State: \\n\", State);\n    console.log(\"Arranger, GetProjects, Aggregations, CurrentSQON, Table : \\n\", Arranger, GetProjects, Aggregations, CurrentSQON, Table);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \" ARRANGER SEARCH PAGE \"))), React.createElement(State, {\n      initial: {\n        index: ACTIVE_INDEX,\n        graphqlField: ACTIVE_INDEX_NAME,\n        projectId: PROJECT_ID\n      },\n      render: ({\n        index,\n        graphqlField,\n        projectId,\n        update\n      }) => {\n        return index && projectId ? React.createElement(Arranger, {\n          disableSocket: true,\n          index: index,\n          graphqlField: graphqlField,\n          projectId: projectId,\n          render: props => {\n            return React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168\n              },\n              __self: this\n            }, React.createElement(Portal, Object.assign({ ...props,\n              graphqlField,\n              projectId\n            }, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169\n              },\n              __self: this\n            })));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }) : React.createElement(GetProjects, {\n          render: props => React.createElement(ChooseProject, Object.assign({}, props, {\n            index: index,\n            projectId: projectId,\n            update: update,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/acanosa/React_arranger_template/src/containers/Search/Search.js"],"names":["React","Component","classes","PORTAL_NAME","ACTIVE_INDEX","ACTIVE_INDEX_NAME","PROJECT_ID","deleteValue","setValue","State","Arranger","GetProjects","Aggregations","CurrentSQON","Table","Search","render","ChooseProject","index","projectId","update","projects","e","target","value","map","x","id","graphqlField","find","types","name","Portal","style","props","display","width","getTermAggProps","maxTerms","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Search.module.css';\n\nimport {\n  PORTAL_NAME,\n  ACTIVE_INDEX,\n  ACTIVE_INDEX_NAME,\n  PROJECT_ID,\n  deleteValue,\n  setValue,\n} from '@arranger/components/dist/utils/config';\n\nimport State from '@arranger/components/dist/State';\n\nimport {\n  Arranger,\n  GetProjects,\n  Aggregations,\n  CurrentSQON,\n  Table\n} from '@arranger/components/dist/Arranger';\n\n\nclass Search extends Component {\n\n  render() {\n\n    const ChooseProject = ({ index, projectId, update, projects }) => {\n      return (\n        <div\n          css={`\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            height: 100%;\n            justify-content: center;\n          `}\n        >\n          <h2\n            css={`\n              margin-top: 0;\n            `}\n          >\n            {PORTAL_NAME}\n          </h2>\n          <select\n            value={projectId}\n            onChange={e => {\n              setValue('PROJECT_ID', e.target.value);\n              update({\n                projectId: e.target.value,\n              });\n            }}\n          >\n            <option id=\"version\">Select a version</option>\n            {projects.map(x => (\n              <option key={x.id} value={x.id}>\n                {x.id}\n              </option>\n            ))}\n          </select>\n          <select\n            value={index}\n            onChange={e => {\n              setValue('ACTIVE_INDEX', e.target.value);\n\n              let graphqlField = projects\n                .find(x => x.id === projectId)\n                ?.types ?.types.find(x => x.index === e.target.value).name;\n\n              setValue('ACTIVE_INDEX_NAME', graphqlField);\n              update({\n                index: e.target.value,\n                graphqlField,\n              });\n            }}\n          >\n            <option id=\"version\">Select an index</option>\n            {projects\n              .find(x => x.id === projectId)\n              ?.types ?.types ?.map(x => (\n                <option key={x.index} value={x.index}>\n                  {x.index}\n                </option>\n              ))}\n          </select>\n        </div>\n      );\n    };\n\n    const Portal = ({ style, ...props }) => {\n      return (\n        <div style={{ display: 'flex', ...style }}>\n          <Aggregations\n            style={{ width: 300 }}\n            componentProps={{\n              getTermAggProps: () => ({\n                maxTerms: 3,\n              }),\n            }}\n            {...props}\n          />\n          <div\n            css={`\n              position: relative;\n              flex-grow: 1;\n              display: flex;\n              flex-direction: column;\n            `}\n          >\n            <CurrentSQON {...props} />\n            <Table {...props} />\n          </div>\n        </div>\n      );\n    };\n\n    console.log(\"PORTAL_NAME, ACTIVE_INDEX, ACTIVE_INDEX_NAME, PROJECT_ID, deleteValue, setValue : \\n\",\n      PORTAL_NAME, ACTIVE_INDEX, ACTIVE_INDEX_NAME, PROJECT_ID, deleteValue, setValue);\n\n    console.log(\"State: \\n\",\n      State);\n\n    console.log(\"Arranger, GetProjects, Aggregations, CurrentSQON, Table : \\n\",\n      Arranger, GetProjects, Aggregations, CurrentSQON, Table);\n\n\n    return (\n\n      <React.Fragment>\n\n        <div>\n          <h3>\n            <strong> ARRANGER SEARCH PAGE </strong>\n          </h3>\n        </div>\n\n        {/*\n        <div>\n          <TermAgg graphqlField=\"fileCentric\" projectId=\"file_centric\"/>\n        </div>\n*/}\n\n        {/*\n        <div>\n          <Arranger graphqlField=\"fileCentric\" projectId=\"file_centric\" component={Table}/>\n        </div>\n*/}\n\n        {/*\n      <Portal {...{ ...props, graphqlField, projectId }} />\n*/}\n        <State\n          initial={{\n            index: ACTIVE_INDEX,\n            graphqlField: ACTIVE_INDEX_NAME,\n            projectId: PROJECT_ID,\n          }}\n          render={({ index, graphqlField, projectId, update }) => {\n            return index && projectId ? (\n              <Arranger\n                disableSocket\n                index={index}\n                graphqlField={graphqlField}\n                projectId={projectId}\n                render={props => {\n                  return (\n                    <React.Fragment>\n                      <Portal {...{ ...props, graphqlField, projectId }} />\n                    </React.Fragment>\n                  );\n                }}\n              />) : (\n                <GetProjects\n                  render={props => (\n                    <ChooseProject\n                      {...props}\n                      index={index}\n                      projectId={projectId}\n                      update={update}\n                    />\n                  )}\n                />\n              );\n          }}\n        />\n\n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default Search;\n\n"]},"metadata":{},"sourceType":"module"}