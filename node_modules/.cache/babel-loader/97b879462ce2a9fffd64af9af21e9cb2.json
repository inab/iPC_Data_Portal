{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import{BrowserRouter}from'react-router-dom';import App from'./App';import*as Keycloak from'keycloak-js';var app=React.createElement(BrowserRouter,null,React.createElement(App,null));var initOptions={url:'https://inb.bsc.es/auth/',realm:'IPC',clientId:'ipc-react-portal',onLoad:'login-required'};var keycloak=Keycloak(initOptions);keycloak.init({onLoad:initOptions.onLoad}).success(function(auth){if(!auth){window.location.reload();}else{console.info(\"Authenticated\");}ReactDOM.render(app,document.getElementById('root'));localStorage.setItem(\"react-token\",keycloak.token);localStorage.setItem(\"react-refresh-token\",keycloak.refreshToken);setTimeout(function(){keycloak.updateToken(70).success(function(refreshed){if(refreshed){console.debug('Token refreshed'+refreshed);}else{console.warn('Token not refreshed, valid for '+Math.round(keycloak.tokenParsed.exp+keycloak.timeSkew-new Date().getTime()/1000)+' seconds');}}).error(function(){console.error('Failed to refresh token');});},60000);}).error(function(){console.error(\"Authenticated Failed\");});","map":{"version":3,"sources":["/home/acanosa/React_arranger_template/src/index.js"],"names":["React","ReactDOM","BrowserRouter","App","Keycloak","app","initOptions","url","realm","clientId","onLoad","keycloak","init","success","auth","window","location","reload","console","info","render","document","getElementById","localStorage","setItem","token","refreshToken","setTimeout","updateToken","refreshed","debug","warn","Math","round","tokenParsed","exp","timeSkew","Date","getTime","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,aAA1B,CAEA,GAAMC,CAAAA,GAAG,CACL,oBAAC,aAAD,MACI,oBAAC,GAAD,MADJ,CADJ,CAMA,GAAIC,CAAAA,WAAW,CAAG,CACdC,GAAG,CAAE,0BADS,CACmBC,KAAK,CAAE,KAD1B,CACiCC,QAAQ,CAAE,kBAD3C,CAC+DC,MAAM,CAAE,gBADvE,CAAlB,CAIA,GAAIC,CAAAA,QAAQ,CAAGP,QAAQ,CAACE,WAAD,CAAvB,CAEAK,QAAQ,CAACC,IAAT,CAAc,CAAEF,MAAM,CAAEJ,WAAW,CAACI,MAAtB,CAAd,EAA8CG,OAA9C,CAAsD,SAACC,IAAD,CAAU,CAE5D,GAAI,CAACA,IAAL,CAAW,CACPC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACH,CAFD,IAEO,CACHC,OAAO,CAACC,IAAR,CAAa,eAAb,EACH,CAEDlB,QAAQ,CAACmB,MAAT,CAAgBf,GAAhB,CAAqBgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,EAEAC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoCb,QAAQ,CAACc,KAA7C,EACAF,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAA4Cb,QAAQ,CAACe,YAArD,EAEAC,UAAU,CAAC,UAAM,CACbhB,QAAQ,CAACiB,WAAT,CAAqB,EAArB,EAAyBf,OAAzB,CAAiC,SAACgB,SAAD,CAAe,CAC5C,GAAIA,SAAJ,CAAe,CACXX,OAAO,CAACY,KAAR,CAAc,kBAAoBD,SAAlC,EACH,CAFD,IAEO,CACHX,OAAO,CAACa,IAAR,CAAa,kCACPC,IAAI,CAACC,KAAL,CAAWtB,QAAQ,CAACuB,WAAT,CAAqBC,GAArB,CAA2BxB,QAAQ,CAACyB,QAApC,CAA+C,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,GAAuB,IAAjF,CADO,CACkF,UAD/F,EAEH,CACJ,CAPD,EAOGC,KAPH,CAOS,UAAM,CACXrB,OAAO,CAACqB,KAAR,CAAc,yBAAd,EACH,CATD,EAYH,CAbS,CAaP,KAbO,CAAV,CAeH,CA5BD,EA4BGA,KA5BH,CA4BS,UAAM,CACXrB,OAAO,CAACqB,KAAR,CAAc,sBAAd,EACH,CA9BD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as Keycloak from 'keycloak-js';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nlet initOptions = {\n    url: 'https://inb.bsc.es/auth/', realm: 'IPC', clientId: 'ipc-react-portal', onLoad: 'login-required'\n}\n\nlet keycloak = Keycloak(initOptions);\n\nkeycloak.init({ onLoad: initOptions.onLoad }).success((auth) => {\n\n    if (!auth) {\n        window.location.reload();\n    } else {\n        console.info(\"Authenticated\");\n    }\n\n    ReactDOM.render(app, document.getElementById('root'));\n\n    localStorage.setItem(\"react-token\", keycloak.token);\n    localStorage.setItem(\"react-refresh-token\", keycloak.refreshToken);\n\n    setTimeout(() => {\n        keycloak.updateToken(70).success((refreshed) => {\n            if (refreshed) {\n                console.debug('Token refreshed' + refreshed);\n            } else {\n                console.warn('Token not refreshed, valid for '\n                    + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n            }\n        }).error(() => {\n            console.error('Failed to refresh token');\n        });\n\n\n    }, 60000)\n\n}).error(() => {\n    console.error(\"Authenticated Failed\");\n});\n"]},"metadata":{},"sourceType":"module"}