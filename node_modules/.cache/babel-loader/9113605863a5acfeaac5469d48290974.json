{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Aggs = require(\"../Aggs\");\n\nvar _utils = require(\"../SQONView/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar composedTermAgg = function composedTermAgg(_ref) {\n  var sqon = _ref.sqon,\n      onValueChange = _ref.onValueChange,\n      _ref$getTermAggProps = _ref.getTermAggProps,\n      getTermAggProps = _ref$getTermAggProps === void 0 ? function () {\n    return {};\n  } : _ref$getTermAggProps,\n      rest = _objectWithoutProperties(_ref, [\"sqon\", \"onValueChange\", \"getTermAggProps\"]);\n\n  return _react.default.createElement(_Aggs.TermAgg, _extends({\n    handleValueClick: function handleValueClick(_ref2) {\n      var generateNextSQON = _ref2.generateNextSQON,\n          value = _ref2.value,\n          field = _ref2.field;\n      var nextSQON = generateNextSQON(sqon);\n      var active = (0, _utils.fieldInCurrentSQON)({\n        currentSQON: (nextSQON === null || nextSQON === void 0 ? void 0 : nextSQON.content) || [],\n        field: field\n      });\n      onValueChange({\n        sqon: nextSQON,\n        value: {\n          field: field,\n          value: value,\n          active: active\n        }\n      });\n    },\n    isActive: function isActive(d) {\n      return (0, _utils.inCurrentSQON)({\n        value: d.value,\n        dotField: d.field,\n        currentSQON: sqon\n      });\n    }\n  }, _objectSpread({}, rest, {}, getTermAggProps())));\n};\n\nvar composedRangeAgg = function composedRangeAgg(_ref3) {\n  var sqon = _ref3.sqon,\n      onValueChange = _ref3.onValueChange,\n      field = _ref3.field,\n      stats = _ref3.stats,\n      _ref3$getRangeAggProp = _ref3.getRangeAggProps,\n      getRangeAggProps = _ref3$getRangeAggProp === void 0 ? function () {\n    return {};\n  } : _ref3$getRangeAggProp,\n      rest = _objectWithoutProperties(_ref3, [\"sqon\", \"onValueChange\", \"field\", \"stats\", \"getRangeAggProps\"]);\n\n  return _react.default.createElement(_Aggs.RangeAgg, _extends({\n    value: {\n      min: (0, _utils.currentFieldValue)({\n        sqon: sqon,\n        dotField: field,\n        op: '>='\n      }) || (stats === null || stats === void 0 ? void 0 : stats.min) || 0,\n      max: (0, _utils.currentFieldValue)({\n        sqon: sqon,\n        dotField: field,\n        op: '<='\n      }) || (stats === null || stats === void 0 ? void 0 : stats.max) || 0\n    },\n    handleChange: function handleChange(_ref4) {\n      var generateNextSQON = _ref4.generateNextSQON,\n          _ref4$field = _ref4.field,\n          displayName = _ref4$field.displayName,\n          displayUnit = _ref4$field.displayUnit,\n          field = _ref4$field.field,\n          value = _ref4.value;\n      var nextSQON = generateNextSQON(sqon);\n      onValueChange({\n        sqon: nextSQON,\n        value: {\n          field: \"\".concat(displayName, \" (\").concat(displayUnit, \")\"),\n          value: value,\n          active: (0, _utils.fieldInCurrentSQON)({\n            currentSQON: nextSQON.content,\n            field: field\n          })\n        }\n      });\n    }\n  }, _objectSpread({}, rest, {\n    stats: stats,\n    field: field\n  }, getRangeAggProps())));\n};\n\nvar composedBooleanAgg = function composedBooleanAgg(_ref5) {\n  var sqon = _ref5.sqon,\n      onValueChange = _ref5.onValueChange,\n      componentProps = _ref5.componentProps,\n      _ref5$getBooleanAggPr = _ref5.getBooleanAggProps,\n      getBooleanAggProps = _ref5$getBooleanAggPr === void 0 ? function () {\n    return {};\n  } : _ref5$getBooleanAggPr,\n      rest = _objectWithoutProperties(_ref5, [\"sqon\", \"onValueChange\", \"componentProps\", \"getBooleanAggProps\"]);\n\n  return _react.default.createElement(_Aggs.BooleanAgg, _extends({\n    isActive: function isActive(d) {\n      return (0, _utils.inCurrentSQON)({\n        value: d.value,\n        dotField: d.field,\n        currentSQON: sqon\n      });\n    },\n    handleValueClick: function handleValueClick(_ref6) {\n      var generateNextSQON = _ref6.generateNextSQON,\n          value = _ref6.value,\n          field = _ref6.field;\n      var nextSQON = generateNextSQON(sqon);\n      onValueChange({\n        sqon: nextSQON,\n        value: {\n          value: value,\n          field: field,\n          active: (0, _utils.fieldInCurrentSQON)({\n            currentSQON: nextSQON ? nextSQON.content : [],\n            field: field\n          })\n        }\n      });\n    }\n  }, _objectSpread({}, rest, {}, getBooleanAggProps())));\n};\n\nvar composedDatesAgg = function composedDatesAgg(_ref7) {\n  var sqon = _ref7.sqon,\n      onValueChange = _ref7.onValueChange,\n      _ref7$getDatesAggProp = _ref7.getDatesAggProps,\n      getDatesAggProps = _ref7$getDatesAggProp === void 0 ? function () {\n    return {};\n  } : _ref7$getDatesAggProp,\n      rest = _objectWithoutProperties(_ref7, [\"sqon\", \"onValueChange\", \"getDatesAggProps\"]);\n\n  return _react.default.createElement(_Aggs.DatesAgg, _extends({\n    handleDateChange: function handleDateChange() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$generateNextSQO = _ref8.generateNextSQON,\n          generateNextSQON = _ref8$generateNextSQO === void 0 ? function () {} : _ref8$generateNextSQO,\n          field = _ref8.field,\n          value = _ref8.value;\n\n      var nextSQON = generateNextSQON(sqon);\n      onValueChange({\n        sqon: nextSQON,\n        value: {\n          field: field,\n          value: value,\n          active: (0, _utils.fieldInCurrentSQON)({\n            currentSQON: nextSQON ? nextSQON.content : [],\n            field: field\n          })\n        }\n      });\n    },\n    getActiveValue: function getActiveValue(_ref9) {\n      var op = _ref9.op,\n          field = _ref9.field;\n      return (0, _utils.currentFieldValue)({\n        op: op,\n        dotField: field,\n        sqon: sqon\n      });\n    }\n  }, _objectSpread({}, rest, {}, getDatesAggProps())));\n};\n\nvar _default = {\n  keyword: composedTermAgg,\n  long: composedRangeAgg,\n  float: composedRangeAgg,\n  boolean: composedBooleanAgg,\n  date: composedDatesAgg,\n  integer: composedRangeAgg\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}