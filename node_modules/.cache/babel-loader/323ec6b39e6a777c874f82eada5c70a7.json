{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar TreeView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TreeView, _React$PureComponent);\n\n  function TreeView(props) {\n    var _this;\n\n    _classCallCheck(this, TreeView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TreeView).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      _this.setState({\n        collapsed: !_this.state.collapsed\n      });\n\n      if (_this.props.onClick) {\n        var _this$props;\n\n        (_this$props = _this.props).onClick.apply(_this$props, arguments);\n      }\n    });\n\n    _this.state = {\n      collapsed: props.defaultCollapsed\n    };\n    return _this;\n  }\n\n  _createClass(TreeView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _this$props2$collapse = _this$props2.collapsed,\n          collapsed = _this$props2$collapse === void 0 ? this.state.collapsed : _this$props2$collapse,\n          _this$props2$classNam = _this$props2.className,\n          className = _this$props2$classNam === void 0 ? '' : _this$props2$classNam,\n          _this$props2$itemClas = _this$props2.itemClassName,\n          itemClassName = _this$props2$itemClas === void 0 ? '' : _this$props2$itemClas,\n          _this$props2$treeView = _this$props2.treeViewClassName,\n          treeViewClassName = _this$props2$treeView === void 0 ? '' : _this$props2$treeView,\n          _this$props2$children = _this$props2.childrenClassName,\n          childrenClassName = _this$props2$children === void 0 ? '' : _this$props2$children,\n          _this$props2$nodeLabe = _this$props2.nodeLabel,\n          nodeLabel = _this$props2$nodeLabe === void 0 ? '' : _this$props2$nodeLabe,\n          children = _this$props2.children,\n          defaultCollapsed = _this$props2.defaultCollapsed,\n          _this$props2$renderAr = _this$props2.renderArrow,\n          renderArrow = _this$props2$renderAr === void 0 ? function (_ref) {\n        var props = _ref.props,\n            state = _ref.state;\n      } : _this$props2$renderAr,\n          rest = _objectWithoutProperties(_this$props2, [\"collapsed\", \"className\", \"itemClassName\", \"treeViewClassName\", \"childrenClassName\", \"nodeLabel\", \"children\", \"defaultCollapsed\", \"renderArrow\"]);\n\n      var arrowClassName = 'tree-view_arrow';\n      var containerClassName = 'tree-view_children';\n\n      if (collapsed) {\n        arrowClassName += ' tree-view_arrow-collapsed';\n        containerClassName += ' tree-view_children-collapsed';\n      }\n\n      var arrow = renderArrow({\n        props: _objectSpread({}, rest, {\n          className: className + ' ' + arrowClassName\n        }),\n        state: this.state,\n        handleClick: this.handleClick\n      }) || _react[\"default\"].createElement(\"div\", _extends({}, rest, {\n        className: className + ' ' + arrowClassName,\n        onClick: this.handleClick\n      }));\n\n      return _react[\"default\"].createElement(\"div\", {\n        className: 'tree-view ' + treeViewClassName\n      }, _react[\"default\"].createElement(\"div\", {\n        className: 'tree-view_item ' + itemClassName\n      }, arrow, nodeLabel({\n        open: this.handleClick\n      })), _react[\"default\"].createElement(\"div\", {\n        className: containerClassName + ' ' + childrenClassName\n      }, collapsed ? null : children));\n    }\n  }]);\n\n  return TreeView;\n}(_react[\"default\"].PureComponent);\n\nvar _default = TreeView;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}