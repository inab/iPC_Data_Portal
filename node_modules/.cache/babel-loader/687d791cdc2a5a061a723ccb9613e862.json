{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergePath = mergePath;\nexports.isNested = isNested;\nexports.readPath = readPath;\nexports.wrapMustNot = wrapMustNot;\nexports.wrapMust = wrapMust;\nexports.wrapShould = wrapShould;\nexports.wrapNested = wrapNested;\nexports.wrapBool = wrapBool;\nexports.toEsRangeValue = toEsRangeValue;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _dateFns = require(\"date-fns\");\n\nvar CONSTANTS = _interopRequireWildcard(require(\"../constants\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction mergePath(target, _ref, data) {\n  var _ref2 = _toArray(_ref),\n      key = _ref2[0],\n      path = _ref2.slice(1);\n\n  return _objectSpread({}, target, _defineProperty({}, key, path.length ? mergePath(_lodash[\"default\"].get(target, key, {}), path, data) : data));\n}\n\nfunction isNested(filter) {\n  return filter && filter.hasOwnProperty(CONSTANTS.ES_NESTED);\n}\n\nfunction readPath(filter) {\n  return _lodash[\"default\"].get(filter, [CONSTANTS.ES_NESTED, CONSTANTS.ES_PATH], '');\n}\n\nfunction wrapMustNot(value) {\n  return wrapBool(CONSTANTS.ES_MUST_NOT, value);\n}\n\nfunction wrapMust(value) {\n  return wrapBool(CONSTANTS.ES_MUST, value);\n}\n\nfunction wrapShould(value) {\n  return wrapBool(CONSTANTS.ES_SHOULD, value);\n}\n\nfunction wrapNested(esFilter, path) {\n  var _CONSTANTS$ES_NESTED;\n\n  return _defineProperty({}, CONSTANTS.ES_NESTED, (_CONSTANTS$ES_NESTED = {}, _defineProperty(_CONSTANTS$ES_NESTED, CONSTANTS.ES_PATH, path), _defineProperty(_CONSTANTS$ES_NESTED, CONSTANTS.ES_QUERY, esFilter[CONSTANTS.ES_BOOL] ? esFilter : wrapMust(esFilter)), _CONSTANTS$ES_NESTED));\n}\n\nfunction wrapBool(op, value) {\n  return _defineProperty({}, CONSTANTS.ES_BOOL, _defineProperty({}, op, Array.isArray(value) ? value : [value]));\n}\n\nfunction toEsRangeValue(value) {\n  var dateValue = (0, _dateFns.parse)(value);\n  return (0, _dateFns.format)(dateValue, CONSTANTS.DATE_FORMAT) === value ? (0, _dateFns.format)(dateValue, CONSTANTS.ES_DATE_FORMAT) : value;\n}","map":null,"metadata":{},"sourceType":"script"}