{"ast":null,"code":"/*! jsonpath 1.0.2 */\n!function (a) {\n  if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = a();else if (\"function\" == typeof define && define.amd) define([], a);else {\n    var b;\n    b = \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : this, b.jsonpath = a();\n  }\n}(function () {\n  var a;\n  return function a(b, c, d) {\n    function e(g, h) {\n      if (!c[g]) {\n        if (!b[g]) {\n          var i = \"function\" == typeof require && require;\n          if (!h && i) return i(g, !0);\n          if (f) return f(g, !0);\n          var j = new Error(\"Cannot find module '\" + g + \"'\");\n          throw j.code = \"MODULE_NOT_FOUND\", j;\n        }\n\n        var k = c[g] = {\n          exports: {}\n        };\n        b[g][0].call(k.exports, function (a) {\n          var c = b[g][1][a];\n          return e(c || a);\n        }, k, k.exports, a, b, c, d);\n      }\n\n      return c[g].exports;\n    }\n\n    for (var f = \"function\" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);\n\n    return e;\n  }({\n    \"./aesprim\": [function (b, c, d) {\n      !function (b, c) {\n        \"use strict\";\n\n        \"function\" == typeof a && a.amd ? a([\"exports\"], c) : c(void 0 !== d ? d : b.esprima = {});\n      }(this, function (a) {\n        \"use strict\";\n\n        function b(a, b) {\n          if (!a) throw new Error(\"ASSERT: \" + b);\n        }\n\n        function c(a) {\n          return a >= 48 && a <= 57;\n        }\n\n        function d(a) {\n          return \"0123456789abcdefABCDEF\".indexOf(a) >= 0;\n        }\n\n        function e(a) {\n          return \"01234567\".indexOf(a) >= 0;\n        }\n\n        function f(a) {\n          return 32 === a || 9 === a || 11 === a || 12 === a || 160 === a || a >= 5760 && [5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279].indexOf(a) >= 0;\n        }\n\n        function g(a) {\n          return 10 === a || 13 === a || 8232 === a || 8233 === a;\n        }\n\n        function h(a) {\n          return 64 == a || 36 === a || 95 === a || a >= 65 && a <= 90 || a >= 97 && a <= 122 || 92 === a || a >= 128 && eb.NonAsciiIdentifierStart.test(String.fromCharCode(a));\n        }\n\n        function i(a) {\n          return 36 === a || 95 === a || a >= 65 && a <= 90 || a >= 97 && a <= 122 || a >= 48 && a <= 57 || 92 === a || a >= 128 && eb.NonAsciiIdentifierPart.test(String.fromCharCode(a));\n        }\n\n        function j(a) {\n          switch (a) {\n            case \"class\":\n            case \"enum\":\n            case \"export\":\n            case \"extends\":\n            case \"import\":\n            case \"super\":\n              return !0;\n\n            default:\n              return !1;\n          }\n        }\n\n        function k(a) {\n          switch (a) {\n            case \"implements\":\n            case \"interface\":\n            case \"package\":\n            case \"private\":\n            case \"protected\":\n            case \"public\":\n            case \"static\":\n            case \"yield\":\n            case \"let\":\n              return !0;\n\n            default:\n              return !1;\n          }\n        }\n\n        function l(a) {\n          return \"eval\" === a || \"arguments\" === a;\n        }\n\n        function m(a) {\n          if (hb && k(a)) return !0;\n\n          switch (a.length) {\n            case 2:\n              return \"if\" === a || \"in\" === a || \"do\" === a;\n\n            case 3:\n              return \"var\" === a || \"for\" === a || \"new\" === a || \"try\" === a || \"let\" === a;\n\n            case 4:\n              return \"this\" === a || \"else\" === a || \"case\" === a || \"void\" === a || \"with\" === a || \"enum\" === a;\n\n            case 5:\n              return \"while\" === a || \"break\" === a || \"catch\" === a || \"throw\" === a || \"const\" === a || \"yield\" === a || \"class\" === a || \"super\" === a;\n\n            case 6:\n              return \"return\" === a || \"typeof\" === a || \"delete\" === a || \"switch\" === a || \"export\" === a || \"import\" === a;\n\n            case 7:\n              return \"default\" === a || \"finally\" === a || \"extends\" === a;\n\n            case 8:\n              return \"function\" === a || \"continue\" === a || \"debugger\" === a;\n\n            case 10:\n              return \"instanceof\" === a;\n\n            default:\n              return !1;\n          }\n        }\n\n        function n(a, c, d, e, f) {\n          var g;\n          b(\"number\" == typeof d, \"Comment must have valid position\"), ob.lastCommentStart >= d || (ob.lastCommentStart = d, g = {\n            type: a,\n            value: c\n          }, pb.range && (g.range = [d, e]), pb.loc && (g.loc = f), pb.comments.push(g), pb.attachComment && (pb.leadingComments.push(g), pb.trailingComments.push(g)));\n        }\n\n        function o(a) {\n          var b, c, d, e;\n\n          for (b = ib - a, c = {\n            start: {\n              line: jb,\n              column: ib - kb - a\n            }\n          }; ib < lb;) if (d = gb.charCodeAt(ib), ++ib, g(d)) return pb.comments && (e = gb.slice(b + a, ib - 1), c.end = {\n            line: jb,\n            column: ib - kb - 1\n          }, n(\"Line\", e, b, ib - 1, c)), 13 === d && 10 === gb.charCodeAt(ib) && ++ib, ++jb, void (kb = ib);\n\n          pb.comments && (e = gb.slice(b + a, ib), c.end = {\n            line: jb,\n            column: ib - kb\n          }, n(\"Line\", e, b, ib, c));\n        }\n\n        function p() {\n          var a, b, c, d;\n\n          for (pb.comments && (a = ib - 2, b = {\n            start: {\n              line: jb,\n              column: ib - kb - 2\n            }\n          }); ib < lb;) if (c = gb.charCodeAt(ib), g(c)) 13 === c && 10 === gb.charCodeAt(ib + 1) && ++ib, ++jb, ++ib, kb = ib, ib >= lb && O({}, db.UnexpectedToken, \"ILLEGAL\");else if (42 === c) {\n            if (47 === gb.charCodeAt(ib + 1)) return ++ib, ++ib, void (pb.comments && (d = gb.slice(a + 2, ib - 2), b.end = {\n              line: jb,\n              column: ib - kb\n            }, n(\"Block\", d, a, ib, b)));\n            ++ib;\n          } else ++ib;\n\n          O({}, db.UnexpectedToken, \"ILLEGAL\");\n        }\n\n        function q() {\n          var a, b;\n\n          for (b = 0 === ib; ib < lb;) if (a = gb.charCodeAt(ib), f(a)) ++ib;else if (g(a)) ++ib, 13 === a && 10 === gb.charCodeAt(ib) && ++ib, ++jb, kb = ib, b = !0;else if (47 === a) {\n            if (47 === (a = gb.charCodeAt(ib + 1))) ++ib, ++ib, o(2), b = !0;else {\n              if (42 !== a) break;\n              ++ib, ++ib, p();\n            }\n          } else if (b && 45 === a) {\n            if (45 !== gb.charCodeAt(ib + 1) || 62 !== gb.charCodeAt(ib + 2)) break;\n            ib += 3, o(3);\n          } else {\n            if (60 !== a) break;\n            if (\"!--\" !== gb.slice(ib + 1, ib + 4)) break;\n            ++ib, ++ib, ++ib, ++ib, o(4);\n          }\n        }\n\n        function r(a) {\n          var b,\n              c,\n              e,\n              f = 0;\n\n          for (c = \"u\" === a ? 4 : 2, b = 0; b < c; ++b) {\n            if (!(ib < lb && d(gb[ib]))) return \"\";\n            e = gb[ib++], f = 16 * f + \"0123456789abcdef\".indexOf(e.toLowerCase());\n          }\n\n          return String.fromCharCode(f);\n        }\n\n        function s() {\n          var a, b;\n\n          for (a = gb.charCodeAt(ib++), b = String.fromCharCode(a), 92 === a && (117 !== gb.charCodeAt(ib) && O({}, db.UnexpectedToken, \"ILLEGAL\"), ++ib, a = r(\"u\"), a && \"\\\\\" !== a && h(a.charCodeAt(0)) || O({}, db.UnexpectedToken, \"ILLEGAL\"), b = a); ib < lb && (a = gb.charCodeAt(ib), i(a));) ++ib, b += String.fromCharCode(a), 92 === a && (b = b.substr(0, b.length - 1), 117 !== gb.charCodeAt(ib) && O({}, db.UnexpectedToken, \"ILLEGAL\"), ++ib, a = r(\"u\"), a && \"\\\\\" !== a && i(a.charCodeAt(0)) || O({}, db.UnexpectedToken, \"ILLEGAL\"), b += a);\n\n          return b;\n        }\n\n        function t() {\n          var a, b;\n\n          for (a = ib++; ib < lb;) {\n            if (92 === (b = gb.charCodeAt(ib))) return ib = a, s();\n            if (!i(b)) break;\n            ++ib;\n          }\n\n          return gb.slice(a, ib);\n        }\n\n        function u() {\n          var a, b, c;\n          return a = ib, b = 92 === gb.charCodeAt(ib) ? s() : t(), c = 1 === b.length ? $a.Identifier : m(b) ? $a.Keyword : \"null\" === b ? $a.NullLiteral : \"true\" === b || \"false\" === b ? $a.BooleanLiteral : $a.Identifier, {\n            type: c,\n            value: b,\n            lineNumber: jb,\n            lineStart: kb,\n            start: a,\n            end: ib\n          };\n        }\n\n        function v() {\n          var a,\n              b,\n              c,\n              d,\n              e = ib,\n              f = gb.charCodeAt(ib),\n              g = gb[ib];\n\n          switch (f) {\n            case 46:\n            case 40:\n            case 41:\n            case 59:\n            case 44:\n            case 123:\n            case 125:\n            case 91:\n            case 93:\n            case 58:\n            case 63:\n            case 126:\n              return ++ib, pb.tokenize && (40 === f ? pb.openParenToken = pb.tokens.length : 123 === f && (pb.openCurlyToken = pb.tokens.length)), {\n                type: $a.Punctuator,\n                value: String.fromCharCode(f),\n                lineNumber: jb,\n                lineStart: kb,\n                start: e,\n                end: ib\n              };\n\n            default:\n              if (61 === (a = gb.charCodeAt(ib + 1))) switch (f) {\n                case 43:\n                case 45:\n                case 47:\n                case 60:\n                case 62:\n                case 94:\n                case 124:\n                case 37:\n                case 38:\n                case 42:\n                  return ib += 2, {\n                    type: $a.Punctuator,\n                    value: String.fromCharCode(f) + String.fromCharCode(a),\n                    lineNumber: jb,\n                    lineStart: kb,\n                    start: e,\n                    end: ib\n                  };\n\n                case 33:\n                case 61:\n                  return ib += 2, 61 === gb.charCodeAt(ib) && ++ib, {\n                    type: $a.Punctuator,\n                    value: gb.slice(e, ib),\n                    lineNumber: jb,\n                    lineStart: kb,\n                    start: e,\n                    end: ib\n                  };\n              }\n          }\n\n          return \">>>=\" === (d = gb.substr(ib, 4)) ? (ib += 4, {\n            type: $a.Punctuator,\n            value: d,\n            lineNumber: jb,\n            lineStart: kb,\n            start: e,\n            end: ib\n          }) : \">>>\" === (c = d.substr(0, 3)) || \"<<=\" === c || \">>=\" === c ? (ib += 3, {\n            type: $a.Punctuator,\n            value: c,\n            lineNumber: jb,\n            lineStart: kb,\n            start: e,\n            end: ib\n          }) : (b = c.substr(0, 2), g === b[1] && \"+-<>&|\".indexOf(g) >= 0 || \"=>\" === b ? (ib += 2, {\n            type: $a.Punctuator,\n            value: b,\n            lineNumber: jb,\n            lineStart: kb,\n            start: e,\n            end: ib\n          }) : \"<>=!+-*%&|^/\".indexOf(g) >= 0 ? (++ib, {\n            type: $a.Punctuator,\n            value: g,\n            lineNumber: jb,\n            lineStart: kb,\n            start: e,\n            end: ib\n          }) : void O({}, db.UnexpectedToken, \"ILLEGAL\"));\n        }\n\n        function w(a) {\n          for (var b = \"\"; ib < lb && d(gb[ib]);) b += gb[ib++];\n\n          return 0 === b.length && O({}, db.UnexpectedToken, \"ILLEGAL\"), h(gb.charCodeAt(ib)) && O({}, db.UnexpectedToken, \"ILLEGAL\"), {\n            type: $a.NumericLiteral,\n            value: parseInt(\"0x\" + b, 16),\n            lineNumber: jb,\n            lineStart: kb,\n            start: a,\n            end: ib\n          };\n        }\n\n        function x(a) {\n          for (var b = \"0\" + gb[ib++]; ib < lb && e(gb[ib]);) b += gb[ib++];\n\n          return (h(gb.charCodeAt(ib)) || c(gb.charCodeAt(ib))) && O({}, db.UnexpectedToken, \"ILLEGAL\"), {\n            type: $a.NumericLiteral,\n            value: parseInt(b, 8),\n            octal: !0,\n            lineNumber: jb,\n            lineStart: kb,\n            start: a,\n            end: ib\n          };\n        }\n\n        function y() {\n          var a, d, f;\n\n          if (f = gb[ib], b(c(f.charCodeAt(0)) || \".\" === f, \"Numeric literal must start with a decimal digit or a decimal point\"), d = ib, a = \"\", \".\" !== f) {\n            if (a = gb[ib++], f = gb[ib], \"0\" === a) {\n              if (\"x\" === f || \"X\" === f) return ++ib, w(d);\n              if (e(f)) return x(d);\n              f && c(f.charCodeAt(0)) && O({}, db.UnexpectedToken, \"ILLEGAL\");\n            }\n\n            for (; c(gb.charCodeAt(ib));) a += gb[ib++];\n\n            f = gb[ib];\n          }\n\n          if (\".\" === f) {\n            for (a += gb[ib++]; c(gb.charCodeAt(ib));) a += gb[ib++];\n\n            f = gb[ib];\n          }\n\n          if (\"e\" === f || \"E\" === f) if (a += gb[ib++], f = gb[ib], \"+\" !== f && \"-\" !== f || (a += gb[ib++]), c(gb.charCodeAt(ib))) for (; c(gb.charCodeAt(ib));) a += gb[ib++];else O({}, db.UnexpectedToken, \"ILLEGAL\");\n          return h(gb.charCodeAt(ib)) && O({}, db.UnexpectedToken, \"ILLEGAL\"), {\n            type: $a.NumericLiteral,\n            value: parseFloat(a),\n            lineNumber: jb,\n            lineStart: kb,\n            start: d,\n            end: ib\n          };\n        }\n\n        function z() {\n          var a,\n              c,\n              d,\n              f,\n              h,\n              i,\n              j,\n              k,\n              l = \"\",\n              m = !1;\n\n          for (j = jb, k = kb, a = gb[ib], b(\"'\" === a || '\"' === a, \"String literal must starts with a quote\"), c = ib, ++ib; ib < lb;) {\n            if ((d = gb[ib++]) === a) {\n              a = \"\";\n              break;\n            }\n\n            if (\"\\\\\" === d) {\n              if ((d = gb[ib++]) && g(d.charCodeAt(0))) ++jb, \"\\r\" === d && \"\\n\" === gb[ib] && ++ib, kb = ib;else switch (d) {\n                case \"u\":\n                case \"x\":\n                  i = ib, h = r(d), h ? l += h : (ib = i, l += d);\n                  break;\n\n                case \"n\":\n                  l += \"\\n\";\n                  break;\n\n                case \"r\":\n                  l += \"\\r\";\n                  break;\n\n                case \"t\":\n                  l += \"\\t\";\n                  break;\n\n                case \"b\":\n                  l += \"\\b\";\n                  break;\n\n                case \"f\":\n                  l += \"\\f\";\n                  break;\n\n                case \"v\":\n                  l += \"\\v\";\n                  break;\n\n                default:\n                  e(d) ? (f = \"01234567\".indexOf(d), 0 !== f && (m = !0), ib < lb && e(gb[ib]) && (m = !0, f = 8 * f + \"01234567\".indexOf(gb[ib++]), \"0123\".indexOf(d) >= 0 && ib < lb && e(gb[ib]) && (f = 8 * f + \"01234567\".indexOf(gb[ib++]))), l += String.fromCharCode(f)) : l += d;\n              }\n            } else {\n              if (g(d.charCodeAt(0))) break;\n              l += d;\n            }\n          }\n\n          return \"\" !== a && O({}, db.UnexpectedToken, \"ILLEGAL\"), {\n            type: $a.StringLiteral,\n            value: l,\n            octal: m,\n            startLineNumber: j,\n            startLineStart: k,\n            lineNumber: jb,\n            lineStart: kb,\n            start: c,\n            end: ib\n          };\n        }\n\n        function A(a, b) {\n          var c;\n\n          try {\n            c = new RegExp(a, b);\n          } catch (d) {\n            O({}, db.InvalidRegExp);\n          }\n\n          return c;\n        }\n\n        function B() {\n          var a, c, d, e, f;\n\n          for (a = gb[ib], b(\"/\" === a, \"Regular expression literal must start with a slash\"), c = gb[ib++], d = !1, e = !1; ib < lb;) if (a = gb[ib++], c += a, \"\\\\\" === a) a = gb[ib++], g(a.charCodeAt(0)) && O({}, db.UnterminatedRegExp), c += a;else if (g(a.charCodeAt(0))) O({}, db.UnterminatedRegExp);else if (d) \"]\" === a && (d = !1);else {\n            if (\"/\" === a) {\n              e = !0;\n              break;\n            }\n\n            \"[\" === a && (d = !0);\n          }\n\n          return e || O({}, db.UnterminatedRegExp), f = c.substr(1, c.length - 2), {\n            value: f,\n            literal: c\n          };\n        }\n\n        function C() {\n          var a, b, c, d;\n\n          for (b = \"\", c = \"\"; ib < lb && (a = gb[ib], i(a.charCodeAt(0)));) if (++ib, \"\\\\\" === a && ib < lb) {\n            if (\"u\" === (a = gb[ib])) {\n              if (++ib, d = ib, a = r(\"u\")) for (c += a, b += \"\\\\u\"; d < ib; ++d) b += gb[d];else ib = d, c += \"u\", b += \"\\\\u\";\n              P({}, db.UnexpectedToken, \"ILLEGAL\");\n            } else b += \"\\\\\", P({}, db.UnexpectedToken, \"ILLEGAL\");\n          } else c += a, b += a;\n\n          return {\n            value: c,\n            literal: b\n          };\n        }\n\n        function D() {\n          var a, b, c, d;\n          return nb = null, q(), a = ib, b = B(), c = C(), d = A(b.value, c.value), pb.tokenize ? {\n            type: $a.RegularExpression,\n            value: d,\n            lineNumber: jb,\n            lineStart: kb,\n            start: a,\n            end: ib\n          } : {\n            literal: b.literal + c.literal,\n            value: d,\n            start: a,\n            end: ib\n          };\n        }\n\n        function E() {\n          var a, b, c, d;\n          return q(), a = ib, b = {\n            start: {\n              line: jb,\n              column: ib - kb\n            }\n          }, c = D(), b.end = {\n            line: jb,\n            column: ib - kb\n          }, pb.tokenize || (pb.tokens.length > 0 && (d = pb.tokens[pb.tokens.length - 1], d.range[0] === a && \"Punctuator\" === d.type && (\"/\" !== d.value && \"/=\" !== d.value || pb.tokens.pop())), pb.tokens.push({\n            type: \"RegularExpression\",\n            value: c.literal,\n            range: [a, ib],\n            loc: b\n          })), c;\n        }\n\n        function F(a) {\n          return a.type === $a.Identifier || a.type === $a.Keyword || a.type === $a.BooleanLiteral || a.type === $a.NullLiteral;\n        }\n\n        function G() {\n          var a, b;\n          if (!(a = pb.tokens[pb.tokens.length - 1])) return E();\n\n          if (\"Punctuator\" === a.type) {\n            if (\"]\" === a.value) return v();\n            if (\")\" === a.value) return b = pb.tokens[pb.openParenToken - 1], !b || \"Keyword\" !== b.type || \"if\" !== b.value && \"while\" !== b.value && \"for\" !== b.value && \"with\" !== b.value ? v() : E();\n\n            if (\"}\" === a.value) {\n              if (pb.tokens[pb.openCurlyToken - 3] && \"Keyword\" === pb.tokens[pb.openCurlyToken - 3].type) {\n                if (!(b = pb.tokens[pb.openCurlyToken - 4])) return v();\n              } else {\n                if (!pb.tokens[pb.openCurlyToken - 4] || \"Keyword\" !== pb.tokens[pb.openCurlyToken - 4].type) return v();\n                if (!(b = pb.tokens[pb.openCurlyToken - 5])) return E();\n              }\n\n              return ab.indexOf(b.value) >= 0 ? v() : E();\n            }\n\n            return E();\n          }\n\n          return \"Keyword\" === a.type ? E() : v();\n        }\n\n        function H() {\n          var a;\n          return q(), ib >= lb ? {\n            type: $a.EOF,\n            lineNumber: jb,\n            lineStart: kb,\n            start: ib,\n            end: ib\n          } : (a = gb.charCodeAt(ib), h(a) ? u() : 40 === a || 41 === a || 59 === a ? v() : 39 === a || 34 === a ? z() : 46 === a ? c(gb.charCodeAt(ib + 1)) ? y() : v() : c(a) ? y() : pb.tokenize && 47 === a ? G() : v());\n        }\n\n        function I() {\n          var a, b, c;\n          return q(), a = {\n            start: {\n              line: jb,\n              column: ib - kb\n            }\n          }, b = H(), a.end = {\n            line: jb,\n            column: ib - kb\n          }, b.type !== $a.EOF && (c = gb.slice(b.start, b.end), pb.tokens.push({\n            type: _a[b.type],\n            value: c,\n            range: [b.start, b.end],\n            loc: a\n          })), b;\n        }\n\n        function J() {\n          var a;\n          return a = nb, ib = a.end, jb = a.lineNumber, kb = a.lineStart, nb = void 0 !== pb.tokens ? I() : H(), ib = a.end, jb = a.lineNumber, kb = a.lineStart, a;\n        }\n\n        function K() {\n          var a, b, c;\n          a = ib, b = jb, c = kb, nb = void 0 !== pb.tokens ? I() : H(), ib = a, jb = b, kb = c;\n        }\n\n        function L(a, b) {\n          this.line = a, this.column = b;\n        }\n\n        function M(a, b, c, d) {\n          this.start = new L(a, b), this.end = new L(c, d);\n        }\n\n        function N() {\n          var a, b, c, d;\n          return a = ib, b = jb, c = kb, q(), d = jb !== b, ib = a, jb = b, kb = c, d;\n        }\n\n        function O(a, c) {\n          var d,\n              e = Array.prototype.slice.call(arguments, 2),\n              f = c.replace(/%(\\d)/g, function (a, c) {\n            return b(c < e.length, \"Message reference must be in range\"), e[c];\n          });\n          throw \"number\" == typeof a.lineNumber ? (d = new Error(\"Line \" + a.lineNumber + \": \" + f), d.index = a.start, d.lineNumber = a.lineNumber, d.column = a.start - kb + 1) : (d = new Error(\"Line \" + jb + \": \" + f), d.index = ib, d.lineNumber = jb, d.column = ib - kb + 1), d.description = f, d;\n        }\n\n        function P() {\n          try {\n            O.apply(null, arguments);\n          } catch (a) {\n            if (!pb.errors) throw a;\n            pb.errors.push(a);\n          }\n        }\n\n        function Q(a) {\n          if (a.type === $a.EOF && O(a, db.UnexpectedEOS), a.type === $a.NumericLiteral && O(a, db.UnexpectedNumber), a.type === $a.StringLiteral && O(a, db.UnexpectedString), a.type === $a.Identifier && O(a, db.UnexpectedIdentifier), a.type === $a.Keyword) {\n            if (j(a.value)) O(a, db.UnexpectedReserved);else if (hb && k(a.value)) return void P(a, db.StrictReservedWord);\n            O(a, db.UnexpectedToken, a.value);\n          }\n\n          O(a, db.UnexpectedToken, a.value);\n        }\n\n        function R(a) {\n          var b = J();\n          b.type === $a.Punctuator && b.value === a || Q(b);\n        }\n\n        function S(a) {\n          var b = J();\n          b.type === $a.Keyword && b.value === a || Q(b);\n        }\n\n        function T(a) {\n          return nb.type === $a.Punctuator && nb.value === a;\n        }\n\n        function U(a) {\n          return nb.type === $a.Keyword && nb.value === a;\n        }\n\n        function V() {\n          var a;\n          return nb.type === $a.Punctuator && (\"=\" === (a = nb.value) || \"*=\" === a || \"/=\" === a || \"%=\" === a || \"+=\" === a || \"-=\" === a || \"<<=\" === a || \">>=\" === a || \">>>=\" === a || \"&=\" === a || \"^=\" === a || \"|=\" === a);\n        }\n\n        function W() {\n          var a;\n          if (59 === gb.charCodeAt(ib) || T(\";\")) return void J();\n          a = jb, q(), jb === a && (nb.type === $a.EOF || T(\"}\") || Q(nb));\n        }\n\n        function X(a) {\n          return a.type === bb.Identifier || a.type === bb.MemberExpression;\n        }\n\n        function Y() {\n          var a,\n              b = [];\n\n          for (a = nb, R(\"[\"); !T(\"]\");) T(\",\") ? (J(), b.push(null)) : (b.push(pa()), T(\"]\") || R(\",\"));\n\n          return J(), mb.markEnd(mb.createArrayExpression(b), a);\n        }\n\n        function Z(a, b) {\n          var c, d, e;\n          return c = hb, e = nb, d = Qa(), b && hb && l(a[0].name) && P(b, db.StrictParamName), hb = c, mb.markEnd(mb.createFunctionExpression(null, a, [], d), e);\n        }\n\n        function $() {\n          var a, b;\n          return b = nb, a = J(), a.type === $a.StringLiteral || a.type === $a.NumericLiteral ? (hb && a.octal && P(a, db.StrictOctalLiteral), mb.markEnd(mb.createLiteral(a), b)) : mb.markEnd(mb.createIdentifier(a.value), b);\n        }\n\n        function _() {\n          var a, b, c, d, e, f;\n          return a = nb, f = nb, a.type === $a.Identifier ? (c = $(), \"get\" !== a.value || T(\":\") ? \"set\" !== a.value || T(\":\") ? (R(\":\"), d = pa(), mb.markEnd(mb.createProperty(\"init\", c, d), f)) : (b = $(), R(\"(\"), a = nb, a.type !== $a.Identifier ? (R(\")\"), P(a, db.UnexpectedToken, a.value), d = Z([])) : (e = [ta()], R(\")\"), d = Z(e, a)), mb.markEnd(mb.createProperty(\"set\", b, d), f)) : (b = $(), R(\"(\"), R(\")\"), d = Z([]), mb.markEnd(mb.createProperty(\"get\", b, d), f))) : a.type !== $a.EOF && a.type !== $a.Punctuator ? (b = $(), R(\":\"), d = pa(), mb.markEnd(mb.createProperty(\"init\", b, d), f)) : void Q(a);\n        }\n\n        function aa() {\n          var a,\n              b,\n              c,\n              d,\n              e,\n              f = [],\n              g = {},\n              h = String;\n\n          for (e = nb, R(\"{\"); !T(\"}\");) a = _(), b = a.key.type === bb.Identifier ? a.key.name : h(a.key.value), d = \"init\" === a.kind ? cb.Data : \"get\" === a.kind ? cb.Get : cb.Set, c = \"$\" + b, Object.prototype.hasOwnProperty.call(g, c) ? (g[c] === cb.Data ? hb && d === cb.Data ? P({}, db.StrictDuplicateProperty) : d !== cb.Data && P({}, db.AccessorDataProperty) : d === cb.Data ? P({}, db.AccessorDataProperty) : g[c] & d && P({}, db.AccessorGetSet), g[c] |= d) : g[c] = d, f.push(a), T(\"}\") || R(\",\");\n\n          return R(\"}\"), mb.markEnd(mb.createObjectExpression(f), e);\n        }\n\n        function ba() {\n          var a;\n          return R(\"(\"), a = qa(), R(\")\"), a;\n        }\n\n        function ca() {\n          var a, b, c, d;\n          if (T(\"(\")) return ba();\n          if (T(\"[\")) return Y();\n          if (T(\"{\")) return aa();\n          if (a = nb.type, d = nb, a === $a.Identifier) c = mb.createIdentifier(J().value);else if (a === $a.StringLiteral || a === $a.NumericLiteral) hb && nb.octal && P(nb, db.StrictOctalLiteral), c = mb.createLiteral(J());else if (a === $a.Keyword) {\n            if (U(\"function\")) return Ta();\n            U(\"this\") ? (J(), c = mb.createThisExpression()) : Q(J());\n          } else a === $a.BooleanLiteral ? (b = J(), b.value = \"true\" === b.value, c = mb.createLiteral(b)) : a === $a.NullLiteral ? (b = J(), b.value = null, c = mb.createLiteral(b)) : T(\"/\") || T(\"/=\") ? (c = void 0 !== pb.tokens ? mb.createLiteral(E()) : mb.createLiteral(D()), K()) : Q(J());\n          return mb.markEnd(c, d);\n        }\n\n        function da() {\n          var a = [];\n          if (R(\"(\"), !T(\")\")) for (; ib < lb && (a.push(pa()), !T(\")\"));) R(\",\");\n          return R(\")\"), a;\n        }\n\n        function ea() {\n          var a, b;\n          return b = nb, a = J(), F(a) || Q(a), mb.markEnd(mb.createIdentifier(a.value), b);\n        }\n\n        function fa() {\n          return R(\".\"), ea();\n        }\n\n        function ga() {\n          var a;\n          return R(\"[\"), a = qa(), R(\"]\"), a;\n        }\n\n        function ha() {\n          var a, b, c;\n          return c = nb, S(\"new\"), a = ja(), b = T(\"(\") ? da() : [], mb.markEnd(mb.createNewExpression(a, b), c);\n        }\n\n        function ia() {\n          var a, b, c, d, e;\n\n          for (e = nb, a = ob.allowIn, ob.allowIn = !0, b = U(\"new\") ? ha() : ca(), ob.allowIn = a;;) {\n            if (T(\".\")) d = fa(), b = mb.createMemberExpression(\".\", b, d);else if (T(\"(\")) c = da(), b = mb.createCallExpression(b, c);else {\n              if (!T(\"[\")) break;\n              d = ga(), b = mb.createMemberExpression(\"[\", b, d);\n            }\n            mb.markEnd(b, e);\n          }\n\n          return b;\n        }\n\n        function ja() {\n          var a, b, c, d;\n\n          for (d = nb, a = ob.allowIn, b = U(\"new\") ? ha() : ca(), ob.allowIn = a; T(\".\") || T(\"[\");) T(\"[\") ? (c = ga(), b = mb.createMemberExpression(\"[\", b, c)) : (c = fa(), b = mb.createMemberExpression(\".\", b, c)), mb.markEnd(b, d);\n\n          return b;\n        }\n\n        function ka() {\n          var a,\n              b,\n              c = nb;\n          return a = ia(), nb.type === $a.Punctuator && (!T(\"++\") && !T(\"--\") || N() || (hb && a.type === bb.Identifier && l(a.name) && P({}, db.StrictLHSPostfix), X(a) || P({}, db.InvalidLHSInAssignment), b = J(), a = mb.markEnd(mb.createPostfixExpression(b.value, a), c))), a;\n        }\n\n        function la() {\n          var a, b, c;\n          return nb.type !== $a.Punctuator && nb.type !== $a.Keyword ? b = ka() : T(\"++\") || T(\"--\") ? (c = nb, a = J(), b = la(), hb && b.type === bb.Identifier && l(b.name) && P({}, db.StrictLHSPrefix), X(b) || P({}, db.InvalidLHSInAssignment), b = mb.createUnaryExpression(a.value, b), b = mb.markEnd(b, c)) : T(\"+\") || T(\"-\") || T(\"~\") || T(\"!\") ? (c = nb, a = J(), b = la(), b = mb.createUnaryExpression(a.value, b), b = mb.markEnd(b, c)) : U(\"delete\") || U(\"void\") || U(\"typeof\") ? (c = nb, a = J(), b = la(), b = mb.createUnaryExpression(a.value, b), b = mb.markEnd(b, c), hb && \"delete\" === b.operator && b.argument.type === bb.Identifier && P({}, db.StrictDelete)) : b = ka(), b;\n        }\n\n        function ma(a, b) {\n          var c = 0;\n          if (a.type !== $a.Punctuator && a.type !== $a.Keyword) return 0;\n\n          switch (a.value) {\n            case \"||\":\n              c = 1;\n              break;\n\n            case \"&&\":\n              c = 2;\n              break;\n\n            case \"|\":\n              c = 3;\n              break;\n\n            case \"^\":\n              c = 4;\n              break;\n\n            case \"&\":\n              c = 5;\n              break;\n\n            case \"==\":\n            case \"!=\":\n            case \"===\":\n            case \"!==\":\n              c = 6;\n              break;\n\n            case \"<\":\n            case \">\":\n            case \"<=\":\n            case \">=\":\n            case \"instanceof\":\n              c = 7;\n              break;\n\n            case \"in\":\n              c = b ? 7 : 0;\n              break;\n\n            case \"<<\":\n            case \">>\":\n            case \">>>\":\n              c = 8;\n              break;\n\n            case \"+\":\n            case \"-\":\n              c = 9;\n              break;\n\n            case \"*\":\n            case \"/\":\n            case \"%\":\n              c = 11;\n          }\n\n          return c;\n        }\n\n        function na() {\n          var a, b, c, d, e, f, g, h, i, j;\n          if (a = nb, i = la(), d = nb, 0 === (e = ma(d, ob.allowIn))) return i;\n\n          for (d.prec = e, J(), b = [a, nb], g = la(), f = [i, d, g]; (e = ma(nb, ob.allowIn)) > 0;) {\n            for (; f.length > 2 && e <= f[f.length - 2].prec;) g = f.pop(), h = f.pop().value, i = f.pop(), c = mb.createBinaryExpression(h, i, g), b.pop(), a = b[b.length - 1], mb.markEnd(c, a), f.push(c);\n\n            d = J(), d.prec = e, f.push(d), b.push(nb), c = la(), f.push(c);\n          }\n\n          for (j = f.length - 1, c = f[j], b.pop(); j > 1;) c = mb.createBinaryExpression(f[j - 1].value, f[j - 2], c), j -= 2, a = b.pop(), mb.markEnd(c, a);\n\n          return c;\n        }\n\n        function oa() {\n          var a, b, c, d, e;\n          return e = nb, a = na(), T(\"?\") && (J(), b = ob.allowIn, ob.allowIn = !0, c = pa(), ob.allowIn = b, R(\":\"), d = pa(), a = mb.createConditionalExpression(a, c, d), mb.markEnd(a, e)), a;\n        }\n\n        function pa() {\n          var a, b, c, d, e;\n          return a = nb, e = nb, d = b = oa(), V() && (X(b) || P({}, db.InvalidLHSInAssignment), hb && b.type === bb.Identifier && l(b.name) && P(a, db.StrictLHSAssignment), a = J(), c = pa(), d = mb.markEnd(mb.createAssignmentExpression(a.value, b, c), e)), d;\n        }\n\n        function qa() {\n          var a,\n              b = nb;\n\n          if (a = pa(), T(\",\")) {\n            for (a = mb.createSequenceExpression([a]); ib < lb && T(\",\");) J(), a.expressions.push(pa());\n\n            mb.markEnd(a, b);\n          }\n\n          return a;\n        }\n\n        function ra() {\n          for (var a, b = []; ib < lb && !T(\"}\") && void 0 !== (a = Ua());) b.push(a);\n\n          return b;\n        }\n\n        function sa() {\n          var a, b;\n          return b = nb, R(\"{\"), a = ra(), R(\"}\"), mb.markEnd(mb.createBlockStatement(a), b);\n        }\n\n        function ta() {\n          var a, b;\n          return b = nb, a = J(), a.type !== $a.Identifier && Q(a), mb.markEnd(mb.createIdentifier(a.value), b);\n        }\n\n        function ua(a) {\n          var b,\n              c,\n              d = null;\n          return c = nb, b = ta(), hb && l(b.name) && P({}, db.StrictVarName), \"const\" === a ? (R(\"=\"), d = pa()) : T(\"=\") && (J(), d = pa()), mb.markEnd(mb.createVariableDeclarator(b, d), c);\n        }\n\n        function va(a) {\n          var b = [];\n\n          do {\n            if (b.push(ua(a)), !T(\",\")) break;\n            J();\n          } while (ib < lb);\n\n          return b;\n        }\n\n        function wa() {\n          var a;\n          return S(\"var\"), a = va(), W(), mb.createVariableDeclaration(a, \"var\");\n        }\n\n        function xa(a) {\n          var b, c;\n          return c = nb, S(a), b = va(a), W(), mb.markEnd(mb.createVariableDeclaration(b, a), c);\n        }\n\n        function ya() {\n          return R(\";\"), mb.createEmptyStatement();\n        }\n\n        function za() {\n          var a = qa();\n          return W(), mb.createExpressionStatement(a);\n        }\n\n        function Aa() {\n          var a, b, c;\n          return S(\"if\"), R(\"(\"), a = qa(), R(\")\"), b = Pa(), U(\"else\") ? (J(), c = Pa()) : c = null, mb.createIfStatement(a, b, c);\n        }\n\n        function Ba() {\n          var a, b, c;\n          return S(\"do\"), c = ob.inIteration, ob.inIteration = !0, a = Pa(), ob.inIteration = c, S(\"while\"), R(\"(\"), b = qa(), R(\")\"), T(\";\") && J(), mb.createDoWhileStatement(a, b);\n        }\n\n        function Ca() {\n          var a, b, c;\n          return S(\"while\"), R(\"(\"), a = qa(), R(\")\"), c = ob.inIteration, ob.inIteration = !0, b = Pa(), ob.inIteration = c, mb.createWhileStatement(a, b);\n        }\n\n        function Da() {\n          var a, b, c;\n          return c = nb, a = J(), b = va(), mb.markEnd(mb.createVariableDeclaration(b, a.value), c);\n        }\n\n        function Ea() {\n          var a, b, c, d, e, f, g;\n          return a = b = c = null, S(\"for\"), R(\"(\"), T(\";\") ? J() : (U(\"var\") || U(\"let\") ? (ob.allowIn = !1, a = Da(), ob.allowIn = !0, 1 === a.declarations.length && U(\"in\") && (J(), d = a, e = qa(), a = null)) : (ob.allowIn = !1, a = qa(), ob.allowIn = !0, U(\"in\") && (X(a) || P({}, db.InvalidLHSInForIn), J(), d = a, e = qa(), a = null)), void 0 === d && R(\";\")), void 0 === d && (T(\";\") || (b = qa()), R(\";\"), T(\")\") || (c = qa())), R(\")\"), g = ob.inIteration, ob.inIteration = !0, f = Pa(), ob.inIteration = g, void 0 === d ? mb.createForStatement(a, b, c, f) : mb.createForInStatement(d, e, f);\n        }\n\n        function Fa() {\n          var a,\n              b = null;\n          return S(\"continue\"), 59 === gb.charCodeAt(ib) ? (J(), ob.inIteration || O({}, db.IllegalContinue), mb.createContinueStatement(null)) : N() ? (ob.inIteration || O({}, db.IllegalContinue), mb.createContinueStatement(null)) : (nb.type === $a.Identifier && (b = ta(), a = \"$\" + b.name, Object.prototype.hasOwnProperty.call(ob.labelSet, a) || O({}, db.UnknownLabel, b.name)), W(), null !== b || ob.inIteration || O({}, db.IllegalContinue), mb.createContinueStatement(b));\n        }\n\n        function Ga() {\n          var a,\n              b = null;\n          return S(\"break\"), 59 === gb.charCodeAt(ib) ? (J(), ob.inIteration || ob.inSwitch || O({}, db.IllegalBreak), mb.createBreakStatement(null)) : N() ? (ob.inIteration || ob.inSwitch || O({}, db.IllegalBreak), mb.createBreakStatement(null)) : (nb.type === $a.Identifier && (b = ta(), a = \"$\" + b.name, Object.prototype.hasOwnProperty.call(ob.labelSet, a) || O({}, db.UnknownLabel, b.name)), W(), null !== b || ob.inIteration || ob.inSwitch || O({}, db.IllegalBreak), mb.createBreakStatement(b));\n        }\n\n        function Ha() {\n          var a = null;\n          return S(\"return\"), ob.inFunctionBody || P({}, db.IllegalReturn), 32 === gb.charCodeAt(ib) && h(gb.charCodeAt(ib + 1)) ? (a = qa(), W(), mb.createReturnStatement(a)) : N() ? mb.createReturnStatement(null) : (T(\";\") || T(\"}\") || nb.type === $a.EOF || (a = qa()), W(), mb.createReturnStatement(a));\n        }\n\n        function Ia() {\n          var a, b;\n          return hb && (q(), P({}, db.StrictModeWith)), S(\"with\"), R(\"(\"), a = qa(), R(\")\"), b = Pa(), mb.createWithStatement(a, b);\n        }\n\n        function Ja() {\n          var a,\n              b,\n              c,\n              d = [];\n\n          for (c = nb, U(\"default\") ? (J(), a = null) : (S(\"case\"), a = qa()), R(\":\"); ib < lb && !(T(\"}\") || U(\"default\") || U(\"case\"));) b = Pa(), d.push(b);\n\n          return mb.markEnd(mb.createSwitchCase(a, d), c);\n        }\n\n        function Ka() {\n          var a, b, c, d, e;\n          if (S(\"switch\"), R(\"(\"), a = qa(), R(\")\"), R(\"{\"), b = [], T(\"}\")) return J(), mb.createSwitchStatement(a, b);\n\n          for (d = ob.inSwitch, ob.inSwitch = !0, e = !1; ib < lb && !T(\"}\");) c = Ja(), null === c.test && (e && O({}, db.MultipleDefaultsInSwitch), e = !0), b.push(c);\n\n          return ob.inSwitch = d, R(\"}\"), mb.createSwitchStatement(a, b);\n        }\n\n        function La() {\n          var a;\n          return S(\"throw\"), N() && O({}, db.NewlineAfterThrow), a = qa(), W(), mb.createThrowStatement(a);\n        }\n\n        function Ma() {\n          var a, b, c;\n          return c = nb, S(\"catch\"), R(\"(\"), T(\")\") && Q(nb), a = ta(), hb && l(a.name) && P({}, db.StrictCatchVariable), R(\")\"), b = sa(), mb.markEnd(mb.createCatchClause(a, b), c);\n        }\n\n        function Na() {\n          var a,\n              b = [],\n              c = null;\n          return S(\"try\"), a = sa(), U(\"catch\") && b.push(Ma()), U(\"finally\") && (J(), c = sa()), 0 !== b.length || c || O({}, db.NoCatchOrFinally), mb.createTryStatement(a, [], b, c);\n        }\n\n        function Oa() {\n          return S(\"debugger\"), W(), mb.createDebuggerStatement();\n        }\n\n        function Pa() {\n          var a,\n              b,\n              c,\n              d,\n              e = nb.type;\n          if (e === $a.EOF && Q(nb), e === $a.Punctuator && \"{\" === nb.value) return sa();\n          if (d = nb, e === $a.Punctuator) switch (nb.value) {\n            case \";\":\n              return mb.markEnd(ya(), d);\n\n            case \"(\":\n              return mb.markEnd(za(), d);\n          }\n          if (e === $a.Keyword) switch (nb.value) {\n            case \"break\":\n              return mb.markEnd(Ga(), d);\n\n            case \"continue\":\n              return mb.markEnd(Fa(), d);\n\n            case \"debugger\":\n              return mb.markEnd(Oa(), d);\n\n            case \"do\":\n              return mb.markEnd(Ba(), d);\n\n            case \"for\":\n              return mb.markEnd(Ea(), d);\n\n            case \"function\":\n              return mb.markEnd(Sa(), d);\n\n            case \"if\":\n              return mb.markEnd(Aa(), d);\n\n            case \"return\":\n              return mb.markEnd(Ha(), d);\n\n            case \"switch\":\n              return mb.markEnd(Ka(), d);\n\n            case \"throw\":\n              return mb.markEnd(La(), d);\n\n            case \"try\":\n              return mb.markEnd(Na(), d);\n\n            case \"var\":\n              return mb.markEnd(wa(), d);\n\n            case \"while\":\n              return mb.markEnd(Ca(), d);\n\n            case \"with\":\n              return mb.markEnd(Ia(), d);\n          }\n          return a = qa(), a.type === bb.Identifier && T(\":\") ? (J(), c = \"$\" + a.name, Object.prototype.hasOwnProperty.call(ob.labelSet, c) && O({}, db.Redeclaration, \"Label\", a.name), ob.labelSet[c] = !0, b = Pa(), delete ob.labelSet[c], mb.markEnd(mb.createLabeledStatement(a, b), d)) : (W(), mb.markEnd(mb.createExpressionStatement(a), d));\n        }\n\n        function Qa() {\n          var a,\n              b,\n              c,\n              d,\n              e,\n              f,\n              g,\n              h,\n              i,\n              j = [];\n\n          for (i = nb, R(\"{\"); ib < lb && nb.type === $a.StringLiteral && (b = nb, a = Ua(), j.push(a), a.expression.type === bb.Literal);) c = gb.slice(b.start + 1, b.end - 1), \"use strict\" === c ? (hb = !0, d && P(d, db.StrictOctalLiteral)) : !d && b.octal && (d = b);\n\n          for (e = ob.labelSet, f = ob.inIteration, g = ob.inSwitch, h = ob.inFunctionBody, ob.labelSet = {}, ob.inIteration = !1, ob.inSwitch = !1, ob.inFunctionBody = !0; ib < lb && !T(\"}\") && void 0 !== (a = Ua());) j.push(a);\n\n          return R(\"}\"), ob.labelSet = e, ob.inIteration = f, ob.inSwitch = g, ob.inFunctionBody = h, mb.markEnd(mb.createBlockStatement(j), i);\n        }\n\n        function Ra(a) {\n          var b,\n              c,\n              d,\n              e,\n              f,\n              g,\n              h = [];\n          if (R(\"(\"), !T(\")\")) for (e = {}; ib < lb && (c = nb, b = ta(), f = \"$\" + c.value, hb ? (l(c.value) && (d = c, g = db.StrictParamName), Object.prototype.hasOwnProperty.call(e, f) && (d = c, g = db.StrictParamDupe)) : a || (l(c.value) ? (a = c, g = db.StrictParamName) : k(c.value) ? (a = c, g = db.StrictReservedWord) : Object.prototype.hasOwnProperty.call(e, f) && (a = c, g = db.StrictParamDupe)), h.push(b), e[f] = !0, !T(\")\"));) R(\",\");\n          return R(\")\"), {\n            params: h,\n            stricted: d,\n            firstRestricted: a,\n            message: g\n          };\n        }\n\n        function Sa() {\n          var a,\n              b,\n              c,\n              d,\n              e,\n              f,\n              g,\n              h,\n              i,\n              j = [];\n          return i = nb, S(\"function\"), c = nb, a = ta(), hb ? l(c.value) && P(c, db.StrictFunctionName) : l(c.value) ? (f = c, g = db.StrictFunctionName) : k(c.value) && (f = c, g = db.StrictReservedWord), e = Ra(f), j = e.params, d = e.stricted, f = e.firstRestricted, e.message && (g = e.message), h = hb, b = Qa(), hb && f && O(f, g), hb && d && P(d, g), hb = h, mb.markEnd(mb.createFunctionDeclaration(a, j, [], b), i);\n        }\n\n        function Ta() {\n          var a,\n              b,\n              c,\n              d,\n              e,\n              f,\n              g,\n              h,\n              i = null,\n              j = [];\n          return h = nb, S(\"function\"), T(\"(\") || (a = nb, i = ta(), hb ? l(a.value) && P(a, db.StrictFunctionName) : l(a.value) ? (c = a, d = db.StrictFunctionName) : k(a.value) && (c = a, d = db.StrictReservedWord)), e = Ra(c), j = e.params, b = e.stricted, c = e.firstRestricted, e.message && (d = e.message), g = hb, f = Qa(), hb && c && O(c, d), hb && b && P(b, d), hb = g, mb.markEnd(mb.createFunctionExpression(i, j, [], f), h);\n        }\n\n        function Ua() {\n          if (nb.type === $a.Keyword) switch (nb.value) {\n            case \"const\":\n            case \"let\":\n              return xa(nb.value);\n\n            case \"function\":\n              return Sa();\n\n            default:\n              return Pa();\n          }\n          if (nb.type !== $a.EOF) return Pa();\n        }\n\n        function Va() {\n          for (var a, b, c, d, e = []; ib < lb && (b = nb, b.type === $a.StringLiteral) && (a = Ua(), e.push(a), a.expression.type === bb.Literal);) c = gb.slice(b.start + 1, b.end - 1), \"use strict\" === c ? (hb = !0, d && P(d, db.StrictOctalLiteral)) : !d && b.octal && (d = b);\n\n          for (; ib < lb && void 0 !== (a = Ua());) e.push(a);\n\n          return e;\n        }\n\n        function Wa() {\n          var a, b;\n          return q(), K(), b = nb, hb = !1, a = Va(), mb.markEnd(mb.createProgram(a), b);\n        }\n\n        function Xa() {\n          var a,\n              b,\n              c,\n              d = [];\n\n          for (a = 0; a < pb.tokens.length; ++a) b = pb.tokens[a], c = {\n            type: b.type,\n            value: b.value\n          }, pb.range && (c.range = b.range), pb.loc && (c.loc = b.loc), d.push(c);\n\n          pb.tokens = d;\n        }\n\n        function Ya(a, b) {\n          var c, d;\n          c = String, \"string\" == typeof a || a instanceof String || (a = c(a)), mb = fb, gb = a, ib = 0, jb = gb.length > 0 ? 1 : 0, kb = 0, lb = gb.length, nb = null, ob = {\n            allowIn: !0,\n            labelSet: {},\n            inFunctionBody: !1,\n            inIteration: !1,\n            inSwitch: !1,\n            lastCommentStart: -1\n          }, pb = {}, b = b || {}, b.tokens = !0, pb.tokens = [], pb.tokenize = !0, pb.openParenToken = -1, pb.openCurlyToken = -1, pb.range = \"boolean\" == typeof b.range && b.range, pb.loc = \"boolean\" == typeof b.loc && b.loc, \"boolean\" == typeof b.comment && b.comment && (pb.comments = []), \"boolean\" == typeof b.tolerant && b.tolerant && (pb.errors = []);\n\n          try {\n            if (K(), nb.type === $a.EOF) return pb.tokens;\n\n            for (J(); nb.type !== $a.EOF;) try {\n              J();\n            } catch (e) {\n              if (nb, pb.errors) {\n                pb.errors.push(e);\n                break;\n              }\n\n              throw e;\n            }\n\n            Xa(), d = pb.tokens, void 0 !== pb.comments && (d.comments = pb.comments), void 0 !== pb.errors && (d.errors = pb.errors);\n          } catch (f) {\n            throw f;\n          } finally {\n            pb = {};\n          }\n\n          return d;\n        }\n\n        function Za(a, b) {\n          var c, d;\n          d = String, \"string\" == typeof a || a instanceof String || (a = d(a)), mb = fb, gb = a, ib = 0, jb = gb.length > 0 ? 1 : 0, kb = 0, lb = gb.length, nb = null, ob = {\n            allowIn: !0,\n            labelSet: {},\n            inFunctionBody: !1,\n            inIteration: !1,\n            inSwitch: !1,\n            lastCommentStart: -1\n          }, pb = {}, void 0 !== b && (pb.range = \"boolean\" == typeof b.range && b.range, pb.loc = \"boolean\" == typeof b.loc && b.loc, pb.attachComment = \"boolean\" == typeof b.attachComment && b.attachComment, pb.loc && null !== b.source && void 0 !== b.source && (pb.source = d(b.source)), \"boolean\" == typeof b.tokens && b.tokens && (pb.tokens = []), \"boolean\" == typeof b.comment && b.comment && (pb.comments = []), \"boolean\" == typeof b.tolerant && b.tolerant && (pb.errors = []), pb.attachComment && (pb.range = !0, pb.comments = [], pb.bottomRightStack = [], pb.trailingComments = [], pb.leadingComments = []));\n\n          try {\n            c = Wa(), void 0 !== pb.comments && (c.comments = pb.comments), void 0 !== pb.tokens && (Xa(), c.tokens = pb.tokens), void 0 !== pb.errors && (c.errors = pb.errors);\n          } catch (e) {\n            throw e;\n          } finally {\n            pb = {};\n          }\n\n          return c;\n        }\n\n        var $a, _a, ab, bb, cb, db, eb, fb, gb, hb, ib, jb, kb, lb, mb, nb, ob, pb;\n\n        $a = {\n          BooleanLiteral: 1,\n          EOF: 2,\n          Identifier: 3,\n          Keyword: 4,\n          NullLiteral: 5,\n          NumericLiteral: 6,\n          Punctuator: 7,\n          StringLiteral: 8,\n          RegularExpression: 9\n        }, _a = {}, _a[$a.BooleanLiteral] = \"Boolean\", _a[$a.EOF] = \"<end>\", _a[$a.Identifier] = \"Identifier\", _a[$a.Keyword] = \"Keyword\", _a[$a.NullLiteral] = \"Null\", _a[$a.NumericLiteral] = \"Numeric\", _a[$a.Punctuator] = \"Punctuator\", _a[$a.StringLiteral] = \"String\", _a[$a.RegularExpression] = \"RegularExpression\", ab = [\"(\", \"{\", \"[\", \"in\", \"typeof\", \"instanceof\", \"new\", \"return\", \"case\", \"delete\", \"throw\", \"void\", \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"<<=\", \">>=\", \">>>=\", \"&=\", \"|=\", \"^=\", \",\", \"+\", \"-\", \"*\", \"/\", \"%\", \"++\", \"--\", \"<<\", \">>\", \">>>\", \"&\", \"|\", \"^\", \"!\", \"~\", \"&&\", \"||\", \"?\", \":\", \"===\", \"==\", \">=\", \"<=\", \"<\", \">\", \"!=\", \"!==\"], bb = {\n          AssignmentExpression: \"AssignmentExpression\",\n          ArrayExpression: \"ArrayExpression\",\n          BlockStatement: \"BlockStatement\",\n          BinaryExpression: \"BinaryExpression\",\n          BreakStatement: \"BreakStatement\",\n          CallExpression: \"CallExpression\",\n          CatchClause: \"CatchClause\",\n          ConditionalExpression: \"ConditionalExpression\",\n          ContinueStatement: \"ContinueStatement\",\n          DoWhileStatement: \"DoWhileStatement\",\n          DebuggerStatement: \"DebuggerStatement\",\n          EmptyStatement: \"EmptyStatement\",\n          ExpressionStatement: \"ExpressionStatement\",\n          ForStatement: \"ForStatement\",\n          ForInStatement: \"ForInStatement\",\n          FunctionDeclaration: \"FunctionDeclaration\",\n          FunctionExpression: \"FunctionExpression\",\n          Identifier: \"Identifier\",\n          IfStatement: \"IfStatement\",\n          Literal: \"Literal\",\n          LabeledStatement: \"LabeledStatement\",\n          LogicalExpression: \"LogicalExpression\",\n          MemberExpression: \"MemberExpression\",\n          NewExpression: \"NewExpression\",\n          ObjectExpression: \"ObjectExpression\",\n          Program: \"Program\",\n          Property: \"Property\",\n          ReturnStatement: \"ReturnStatement\",\n          SequenceExpression: \"SequenceExpression\",\n          SwitchStatement: \"SwitchStatement\",\n          SwitchCase: \"SwitchCase\",\n          ThisExpression: \"ThisExpression\",\n          ThrowStatement: \"ThrowStatement\",\n          TryStatement: \"TryStatement\",\n          UnaryExpression: \"UnaryExpression\",\n          UpdateExpression: \"UpdateExpression\",\n          VariableDeclaration: \"VariableDeclaration\",\n          VariableDeclarator: \"VariableDeclarator\",\n          WhileStatement: \"WhileStatement\",\n          WithStatement: \"WithStatement\"\n        }, cb = {\n          Data: 1,\n          Get: 2,\n          Set: 4\n        }, db = {\n          UnexpectedToken: \"Unexpected token %0\",\n          UnexpectedNumber: \"Unexpected number\",\n          UnexpectedString: \"Unexpected string\",\n          UnexpectedIdentifier: \"Unexpected identifier\",\n          UnexpectedReserved: \"Unexpected reserved word\",\n          UnexpectedEOS: \"Unexpected end of input\",\n          NewlineAfterThrow: \"Illegal newline after throw\",\n          InvalidRegExp: \"Invalid regular expression\",\n          UnterminatedRegExp: \"Invalid regular expression: missing /\",\n          InvalidLHSInAssignment: \"Invalid left-hand side in assignment\",\n          InvalidLHSInForIn: \"Invalid left-hand side in for-in\",\n          MultipleDefaultsInSwitch: \"More than one default clause in switch statement\",\n          NoCatchOrFinally: \"Missing catch or finally after try\",\n          UnknownLabel: \"Undefined label '%0'\",\n          Redeclaration: \"%0 '%1' has already been declared\",\n          IllegalContinue: \"Illegal continue statement\",\n          IllegalBreak: \"Illegal break statement\",\n          IllegalReturn: \"Illegal return statement\",\n          StrictModeWith: \"Strict mode code may not include a with statement\",\n          StrictCatchVariable: \"Catch variable may not be eval or arguments in strict mode\",\n          StrictVarName: \"Variable name may not be eval or arguments in strict mode\",\n          StrictParamName: \"Parameter name eval or arguments is not allowed in strict mode\",\n          StrictParamDupe: \"Strict mode function may not have duplicate parameter names\",\n          StrictFunctionName: \"Function name may not be eval or arguments in strict mode\",\n          StrictOctalLiteral: \"Octal literals are not allowed in strict mode.\",\n          StrictDelete: \"Delete of an unqualified identifier in strict mode.\",\n          StrictDuplicateProperty: \"Duplicate data property in object literal not allowed in strict mode\",\n          AccessorDataProperty: \"Object literal may not have data and accessor property with the same name\",\n          AccessorGetSet: \"Object literal may not have multiple get/set accessors with the same name\",\n          StrictLHSAssignment: \"Assignment to eval or arguments is not allowed in strict mode\",\n          StrictLHSPostfix: \"Postfix increment/decrement may not have eval or arguments operand in strict mode\",\n          StrictLHSPrefix: \"Prefix increment/decrement may not have eval or arguments operand in strict mode\",\n          StrictReservedWord: \"Use of future reserved word in strict mode\"\n        }, eb = {\n          NonAsciiIdentifierStart: new RegExp(\"[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]\"),\n          NonAsciiIdentifierPart: new RegExp(\"[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]\")\n        }, fb = {\n          name: \"SyntaxTree\",\n          processComment: function (a) {\n            var b, c;\n\n            if (!(a.type === bb.Program && a.body.length > 0)) {\n              for (pb.trailingComments.length > 0 ? pb.trailingComments[0].range[0] >= a.range[1] ? (c = pb.trailingComments, pb.trailingComments = []) : pb.trailingComments.length = 0 : pb.bottomRightStack.length > 0 && pb.bottomRightStack[pb.bottomRightStack.length - 1].trailingComments && pb.bottomRightStack[pb.bottomRightStack.length - 1].trailingComments[0].range[0] >= a.range[1] && (c = pb.bottomRightStack[pb.bottomRightStack.length - 1].trailingComments, delete pb.bottomRightStack[pb.bottomRightStack.length - 1].trailingComments); pb.bottomRightStack.length > 0 && pb.bottomRightStack[pb.bottomRightStack.length - 1].range[0] >= a.range[0];) b = pb.bottomRightStack.pop();\n\n              b ? b.leadingComments && b.leadingComments[b.leadingComments.length - 1].range[1] <= a.range[0] && (a.leadingComments = b.leadingComments, delete b.leadingComments) : pb.leadingComments.length > 0 && pb.leadingComments[pb.leadingComments.length - 1].range[1] <= a.range[0] && (a.leadingComments = pb.leadingComments, pb.leadingComments = []), c && (a.trailingComments = c), pb.bottomRightStack.push(a);\n            }\n          },\n          markEnd: function (a, b) {\n            return pb.range && (a.range = [b.start, ib]), pb.loc && (a.loc = new M(void 0 === b.startLineNumber ? b.lineNumber : b.startLineNumber, b.start - (void 0 === b.startLineStart ? b.lineStart : b.startLineStart), jb, ib - kb), this.postProcess(a)), pb.attachComment && this.processComment(a), a;\n          },\n          postProcess: function (a) {\n            return pb.source && (a.loc.source = pb.source), a;\n          },\n          createArrayExpression: function (a) {\n            return {\n              type: bb.ArrayExpression,\n              elements: a\n            };\n          },\n          createAssignmentExpression: function (a, b, c) {\n            return {\n              type: bb.AssignmentExpression,\n              operator: a,\n              left: b,\n              right: c\n            };\n          },\n          createBinaryExpression: function (a, b, c) {\n            return {\n              type: \"||\" === a || \"&&\" === a ? bb.LogicalExpression : bb.BinaryExpression,\n              operator: a,\n              left: b,\n              right: c\n            };\n          },\n          createBlockStatement: function (a) {\n            return {\n              type: bb.BlockStatement,\n              body: a\n            };\n          },\n          createBreakStatement: function (a) {\n            return {\n              type: bb.BreakStatement,\n              label: a\n            };\n          },\n          createCallExpression: function (a, b) {\n            return {\n              type: bb.CallExpression,\n              callee: a,\n              arguments: b\n            };\n          },\n          createCatchClause: function (a, b) {\n            return {\n              type: bb.CatchClause,\n              param: a,\n              body: b\n            };\n          },\n          createConditionalExpression: function (a, b, c) {\n            return {\n              type: bb.ConditionalExpression,\n              test: a,\n              consequent: b,\n              alternate: c\n            };\n          },\n          createContinueStatement: function (a) {\n            return {\n              type: bb.ContinueStatement,\n              label: a\n            };\n          },\n          createDebuggerStatement: function () {\n            return {\n              type: bb.DebuggerStatement\n            };\n          },\n          createDoWhileStatement: function (a, b) {\n            return {\n              type: bb.DoWhileStatement,\n              body: a,\n              test: b\n            };\n          },\n          createEmptyStatement: function () {\n            return {\n              type: bb.EmptyStatement\n            };\n          },\n          createExpressionStatement: function (a) {\n            return {\n              type: bb.ExpressionStatement,\n              expression: a\n            };\n          },\n          createForStatement: function (a, b, c, d) {\n            return {\n              type: bb.ForStatement,\n              init: a,\n              test: b,\n              update: c,\n              body: d\n            };\n          },\n          createForInStatement: function (a, b, c) {\n            return {\n              type: bb.ForInStatement,\n              left: a,\n              right: b,\n              body: c,\n              each: !1\n            };\n          },\n          createFunctionDeclaration: function (a, b, c, d) {\n            return {\n              type: bb.FunctionDeclaration,\n              id: a,\n              params: b,\n              defaults: c,\n              body: d,\n              rest: null,\n              generator: !1,\n              expression: !1\n            };\n          },\n          createFunctionExpression: function (a, b, c, d) {\n            return {\n              type: bb.FunctionExpression,\n              id: a,\n              params: b,\n              defaults: c,\n              body: d,\n              rest: null,\n              generator: !1,\n              expression: !1\n            };\n          },\n          createIdentifier: function (a) {\n            return {\n              type: bb.Identifier,\n              name: a\n            };\n          },\n          createIfStatement: function (a, b, c) {\n            return {\n              type: bb.IfStatement,\n              test: a,\n              consequent: b,\n              alternate: c\n            };\n          },\n          createLabeledStatement: function (a, b) {\n            return {\n              type: bb.LabeledStatement,\n              label: a,\n              body: b\n            };\n          },\n          createLiteral: function (a) {\n            return {\n              type: bb.Literal,\n              value: a.value,\n              raw: gb.slice(a.start, a.end)\n            };\n          },\n          createMemberExpression: function (a, b, c) {\n            return {\n              type: bb.MemberExpression,\n              computed: \"[\" === a,\n              object: b,\n              property: c\n            };\n          },\n          createNewExpression: function (a, b) {\n            return {\n              type: bb.NewExpression,\n              callee: a,\n              arguments: b\n            };\n          },\n          createObjectExpression: function (a) {\n            return {\n              type: bb.ObjectExpression,\n              properties: a\n            };\n          },\n          createPostfixExpression: function (a, b) {\n            return {\n              type: bb.UpdateExpression,\n              operator: a,\n              argument: b,\n              prefix: !1\n            };\n          },\n          createProgram: function (a) {\n            return {\n              type: bb.Program,\n              body: a\n            };\n          },\n          createProperty: function (a, b, c) {\n            return {\n              type: bb.Property,\n              key: b,\n              value: c,\n              kind: a\n            };\n          },\n          createReturnStatement: function (a) {\n            return {\n              type: bb.ReturnStatement,\n              argument: a\n            };\n          },\n          createSequenceExpression: function (a) {\n            return {\n              type: bb.SequenceExpression,\n              expressions: a\n            };\n          },\n          createSwitchCase: function (a, b) {\n            return {\n              type: bb.SwitchCase,\n              test: a,\n              consequent: b\n            };\n          },\n          createSwitchStatement: function (a, b) {\n            return {\n              type: bb.SwitchStatement,\n              discriminant: a,\n              cases: b\n            };\n          },\n          createThisExpression: function () {\n            return {\n              type: bb.ThisExpression\n            };\n          },\n          createThrowStatement: function (a) {\n            return {\n              type: bb.ThrowStatement,\n              argument: a\n            };\n          },\n          createTryStatement: function (a, b, c, d) {\n            return {\n              type: bb.TryStatement,\n              block: a,\n              guardedHandlers: b,\n              handlers: c,\n              finalizer: d\n            };\n          },\n          createUnaryExpression: function (a, b) {\n            return \"++\" === a || \"--\" === a ? {\n              type: bb.UpdateExpression,\n              operator: a,\n              argument: b,\n              prefix: !0\n            } : {\n              type: bb.UnaryExpression,\n              operator: a,\n              argument: b,\n              prefix: !0\n            };\n          },\n          createVariableDeclaration: function (a, b) {\n            return {\n              type: bb.VariableDeclaration,\n              declarations: a,\n              kind: b\n            };\n          },\n          createVariableDeclarator: function (a, b) {\n            return {\n              type: bb.VariableDeclarator,\n              id: a,\n              init: b\n            };\n          },\n          createWhileStatement: function (a, b) {\n            return {\n              type: bb.WhileStatement,\n              test: a,\n              body: b\n            };\n          },\n          createWithStatement: function (a, b) {\n            return {\n              type: bb.WithStatement,\n              object: a,\n              body: b\n            };\n          }\n        }, a.version = \"1.2.2\", a.tokenize = Ya, a.parse = Za, a.Syntax = function () {\n          var a,\n              b = {};\n          \"function\" == typeof Object.create && (b = Object.create(null));\n\n          for (a in bb) bb.hasOwnProperty(a) && (b[a] = bb[a]);\n\n          return \"function\" == typeof Object.freeze && Object.freeze(b), b;\n        }();\n      });\n    }, {}],\n    1: [function (a, b, c) {\n      (function (d) {\n        var e = function () {\n          function a() {\n            this.yy = {};\n          }\n\n          var b = {\n            trace: function () {},\n            yy: {},\n            symbols_: {\n              error: 2,\n              JSON_PATH: 3,\n              DOLLAR: 4,\n              PATH_COMPONENTS: 5,\n              LEADING_CHILD_MEMBER_EXPRESSION: 6,\n              PATH_COMPONENT: 7,\n              MEMBER_COMPONENT: 8,\n              SUBSCRIPT_COMPONENT: 9,\n              CHILD_MEMBER_COMPONENT: 10,\n              DESCENDANT_MEMBER_COMPONENT: 11,\n              DOT: 12,\n              MEMBER_EXPRESSION: 13,\n              DOT_DOT: 14,\n              STAR: 15,\n              IDENTIFIER: 16,\n              SCRIPT_EXPRESSION: 17,\n              INTEGER: 18,\n              END: 19,\n              CHILD_SUBSCRIPT_COMPONENT: 20,\n              DESCENDANT_SUBSCRIPT_COMPONENT: 21,\n              \"[\": 22,\n              SUBSCRIPT: 23,\n              \"]\": 24,\n              SUBSCRIPT_EXPRESSION: 25,\n              SUBSCRIPT_EXPRESSION_LIST: 26,\n              SUBSCRIPT_EXPRESSION_LISTABLE: 27,\n              \",\": 28,\n              STRING_LITERAL: 29,\n              ARRAY_SLICE: 30,\n              FILTER_EXPRESSION: 31,\n              QQ_STRING: 32,\n              Q_STRING: 33,\n              $accept: 0,\n              $end: 1\n            },\n            terminals_: {\n              2: \"error\",\n              4: \"DOLLAR\",\n              12: \"DOT\",\n              14: \"DOT_DOT\",\n              15: \"STAR\",\n              16: \"IDENTIFIER\",\n              17: \"SCRIPT_EXPRESSION\",\n              18: \"INTEGER\",\n              19: \"END\",\n              22: \"[\",\n              24: \"]\",\n              28: \",\",\n              30: \"ARRAY_SLICE\",\n              31: \"FILTER_EXPRESSION\",\n              32: \"QQ_STRING\",\n              33: \"Q_STRING\"\n            },\n            productions_: [0, [3, 1], [3, 2], [3, 1], [3, 2], [5, 1], [5, 2], [7, 1], [7, 1], [8, 1], [8, 1], [10, 2], [6, 1], [11, 2], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [9, 1], [9, 1], [20, 3], [21, 4], [23, 1], [23, 1], [26, 1], [26, 3], [27, 1], [27, 1], [27, 1], [25, 1], [25, 1], [25, 1], [29, 1], [29, 1]],\n            performAction: function (a, b, d, e, f, g, h) {\n              e.ast || (e.ast = c, c.initialize());\n              var i = g.length - 1;\n\n              switch (f) {\n                case 1:\n                  return e.ast.set({\n                    expression: {\n                      type: \"root\",\n                      value: g[i]\n                    }\n                  }), e.ast.unshift(), e.ast.yield();\n\n                case 2:\n                  return e.ast.set({\n                    expression: {\n                      type: \"root\",\n                      value: g[i - 1]\n                    }\n                  }), e.ast.unshift(), e.ast.yield();\n\n                case 3:\n                  return e.ast.unshift(), e.ast.yield();\n\n                case 4:\n                  return e.ast.set({\n                    operation: \"member\",\n                    scope: \"child\",\n                    expression: {\n                      type: \"identifier\",\n                      value: g[i - 1]\n                    }\n                  }), e.ast.unshift(), e.ast.yield();\n\n                case 5:\n                case 6:\n                  break;\n\n                case 7:\n                  e.ast.set({\n                    operation: \"member\"\n                  }), e.ast.push();\n                  break;\n\n                case 8:\n                  e.ast.set({\n                    operation: \"subscript\"\n                  }), e.ast.push();\n                  break;\n\n                case 9:\n                  e.ast.set({\n                    scope: \"child\"\n                  });\n                  break;\n\n                case 10:\n                  e.ast.set({\n                    scope: \"descendant\"\n                  });\n                  break;\n\n                case 11:\n                  break;\n\n                case 12:\n                  e.ast.set({\n                    scope: \"child\",\n                    operation: \"member\"\n                  });\n                  break;\n\n                case 13:\n                  break;\n\n                case 14:\n                  e.ast.set({\n                    expression: {\n                      type: \"wildcard\",\n                      value: g[i]\n                    }\n                  });\n                  break;\n\n                case 15:\n                  e.ast.set({\n                    expression: {\n                      type: \"identifier\",\n                      value: g[i]\n                    }\n                  });\n                  break;\n\n                case 16:\n                  e.ast.set({\n                    expression: {\n                      type: \"script_expression\",\n                      value: g[i]\n                    }\n                  });\n                  break;\n\n                case 17:\n                  e.ast.set({\n                    expression: {\n                      type: \"numeric_literal\",\n                      value: parseInt(g[i])\n                    }\n                  });\n                  break;\n\n                case 18:\n                  break;\n\n                case 19:\n                  e.ast.set({\n                    scope: \"child\"\n                  });\n                  break;\n\n                case 20:\n                  e.ast.set({\n                    scope: \"descendant\"\n                  });\n                  break;\n\n                case 21:\n                case 22:\n                case 23:\n                  break;\n\n                case 24:\n                  g[i].length > 1 ? e.ast.set({\n                    expression: {\n                      type: \"union\",\n                      value: g[i]\n                    }\n                  }) : this.$ = g[i];\n                  break;\n\n                case 25:\n                  this.$ = [g[i]];\n                  break;\n\n                case 26:\n                  this.$ = g[i - 2].concat(g[i]);\n                  break;\n\n                case 27:\n                  this.$ = {\n                    expression: {\n                      type: \"numeric_literal\",\n                      value: parseInt(g[i])\n                    }\n                  }, e.ast.set(this.$);\n                  break;\n\n                case 28:\n                  this.$ = {\n                    expression: {\n                      type: \"string_literal\",\n                      value: g[i]\n                    }\n                  }, e.ast.set(this.$);\n                  break;\n\n                case 29:\n                  this.$ = {\n                    expression: {\n                      type: \"slice\",\n                      value: g[i]\n                    }\n                  }, e.ast.set(this.$);\n                  break;\n\n                case 30:\n                  this.$ = {\n                    expression: {\n                      type: \"wildcard\",\n                      value: g[i]\n                    }\n                  }, e.ast.set(this.$);\n                  break;\n\n                case 31:\n                  this.$ = {\n                    expression: {\n                      type: \"script_expression\",\n                      value: g[i]\n                    }\n                  }, e.ast.set(this.$);\n                  break;\n\n                case 32:\n                  this.$ = {\n                    expression: {\n                      type: \"filter_expression\",\n                      value: g[i]\n                    }\n                  }, e.ast.set(this.$);\n                  break;\n\n                case 33:\n                case 34:\n                  this.$ = g[i];\n              }\n            },\n            table: [{\n              3: 1,\n              4: [1, 2],\n              6: 3,\n              13: 4,\n              15: [1, 5],\n              16: [1, 6],\n              17: [1, 7],\n              18: [1, 8],\n              19: [1, 9]\n            }, {\n              1: [3]\n            }, {\n              1: [2, 1],\n              5: 10,\n              7: 11,\n              8: 12,\n              9: 13,\n              10: 14,\n              11: 15,\n              12: [1, 18],\n              14: [1, 19],\n              20: 16,\n              21: 17,\n              22: [1, 20]\n            }, {\n              1: [2, 3],\n              5: 21,\n              7: 11,\n              8: 12,\n              9: 13,\n              10: 14,\n              11: 15,\n              12: [1, 18],\n              14: [1, 19],\n              20: 16,\n              21: 17,\n              22: [1, 20]\n            }, {\n              1: [2, 12],\n              12: [2, 12],\n              14: [2, 12],\n              22: [2, 12]\n            }, {\n              1: [2, 14],\n              12: [2, 14],\n              14: [2, 14],\n              22: [2, 14]\n            }, {\n              1: [2, 15],\n              12: [2, 15],\n              14: [2, 15],\n              22: [2, 15]\n            }, {\n              1: [2, 16],\n              12: [2, 16],\n              14: [2, 16],\n              22: [2, 16]\n            }, {\n              1: [2, 17],\n              12: [2, 17],\n              14: [2, 17],\n              22: [2, 17]\n            }, {\n              1: [2, 18],\n              12: [2, 18],\n              14: [2, 18],\n              22: [2, 18]\n            }, {\n              1: [2, 2],\n              7: 22,\n              8: 12,\n              9: 13,\n              10: 14,\n              11: 15,\n              12: [1, 18],\n              14: [1, 19],\n              20: 16,\n              21: 17,\n              22: [1, 20]\n            }, {\n              1: [2, 5],\n              12: [2, 5],\n              14: [2, 5],\n              22: [2, 5]\n            }, {\n              1: [2, 7],\n              12: [2, 7],\n              14: [2, 7],\n              22: [2, 7]\n            }, {\n              1: [2, 8],\n              12: [2, 8],\n              14: [2, 8],\n              22: [2, 8]\n            }, {\n              1: [2, 9],\n              12: [2, 9],\n              14: [2, 9],\n              22: [2, 9]\n            }, {\n              1: [2, 10],\n              12: [2, 10],\n              14: [2, 10],\n              22: [2, 10]\n            }, {\n              1: [2, 19],\n              12: [2, 19],\n              14: [2, 19],\n              22: [2, 19]\n            }, {\n              1: [2, 20],\n              12: [2, 20],\n              14: [2, 20],\n              22: [2, 20]\n            }, {\n              13: 23,\n              15: [1, 5],\n              16: [1, 6],\n              17: [1, 7],\n              18: [1, 8],\n              19: [1, 9]\n            }, {\n              13: 24,\n              15: [1, 5],\n              16: [1, 6],\n              17: [1, 7],\n              18: [1, 8],\n              19: [1, 9],\n              22: [1, 25]\n            }, {\n              15: [1, 29],\n              17: [1, 30],\n              18: [1, 33],\n              23: 26,\n              25: 27,\n              26: 28,\n              27: 32,\n              29: 34,\n              30: [1, 35],\n              31: [1, 31],\n              32: [1, 36],\n              33: [1, 37]\n            }, {\n              1: [2, 4],\n              7: 22,\n              8: 12,\n              9: 13,\n              10: 14,\n              11: 15,\n              12: [1, 18],\n              14: [1, 19],\n              20: 16,\n              21: 17,\n              22: [1, 20]\n            }, {\n              1: [2, 6],\n              12: [2, 6],\n              14: [2, 6],\n              22: [2, 6]\n            }, {\n              1: [2, 11],\n              12: [2, 11],\n              14: [2, 11],\n              22: [2, 11]\n            }, {\n              1: [2, 13],\n              12: [2, 13],\n              14: [2, 13],\n              22: [2, 13]\n            }, {\n              15: [1, 29],\n              17: [1, 30],\n              18: [1, 33],\n              23: 38,\n              25: 27,\n              26: 28,\n              27: 32,\n              29: 34,\n              30: [1, 35],\n              31: [1, 31],\n              32: [1, 36],\n              33: [1, 37]\n            }, {\n              24: [1, 39]\n            }, {\n              24: [2, 23]\n            }, {\n              24: [2, 24],\n              28: [1, 40]\n            }, {\n              24: [2, 30]\n            }, {\n              24: [2, 31]\n            }, {\n              24: [2, 32]\n            }, {\n              24: [2, 25],\n              28: [2, 25]\n            }, {\n              24: [2, 27],\n              28: [2, 27]\n            }, {\n              24: [2, 28],\n              28: [2, 28]\n            }, {\n              24: [2, 29],\n              28: [2, 29]\n            }, {\n              24: [2, 33],\n              28: [2, 33]\n            }, {\n              24: [2, 34],\n              28: [2, 34]\n            }, {\n              24: [1, 41]\n            }, {\n              1: [2, 21],\n              12: [2, 21],\n              14: [2, 21],\n              22: [2, 21]\n            }, {\n              18: [1, 33],\n              27: 42,\n              29: 34,\n              30: [1, 35],\n              32: [1, 36],\n              33: [1, 37]\n            }, {\n              1: [2, 22],\n              12: [2, 22],\n              14: [2, 22],\n              22: [2, 22]\n            }, {\n              24: [2, 26],\n              28: [2, 26]\n            }],\n            defaultActions: {\n              27: [2, 23],\n              29: [2, 30],\n              30: [2, 31],\n              31: [2, 32]\n            },\n            parseError: function (a, b) {\n              if (!b.recoverable) throw new Error(a);\n              this.trace(a);\n            },\n            parse: function (a) {\n              function b() {\n                var a;\n                return a = c.lexer.lex() || m, \"number\" != typeof a && (a = c.symbols_[a] || a), a;\n              }\n\n              var c = this,\n                  d = [0],\n                  e = [null],\n                  f = [],\n                  g = this.table,\n                  h = \"\",\n                  i = 0,\n                  j = 0,\n                  k = 0,\n                  l = 2,\n                  m = 1,\n                  n = f.slice.call(arguments, 1);\n              this.lexer.setInput(a), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, this.yy.parser = this, void 0 === this.lexer.yylloc && (this.lexer.yylloc = {});\n              var o = this.lexer.yylloc;\n              f.push(o);\n              var p = this.lexer.options && this.lexer.options.ranges;\n              \"function\" == typeof this.yy.parseError ? this.parseError = this.yy.parseError : this.parseError = Object.getPrototypeOf(this).parseError;\n\n              for (var q, r, s, t, u, v, w, x, y, z = {};;) {\n                if (s = d[d.length - 1], this.defaultActions[s] ? t = this.defaultActions[s] : (null !== q && void 0 !== q || (q = b()), t = g[s] && g[s][q]), void 0 === t || !t.length || !t[0]) {\n                  var A = \"\";\n                  y = [];\n\n                  for (v in g[s]) this.terminals_[v] && v > l && y.push(\"'\" + this.terminals_[v] + \"'\");\n\n                  A = this.lexer.showPosition ? \"Parse error on line \" + (i + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + y.join(\", \") + \", got '\" + (this.terminals_[q] || q) + \"'\" : \"Parse error on line \" + (i + 1) + \": Unexpected \" + (q == m ? \"end of input\" : \"'\" + (this.terminals_[q] || q) + \"'\"), this.parseError(A, {\n                    text: this.lexer.match,\n                    token: this.terminals_[q] || q,\n                    line: this.lexer.yylineno,\n                    loc: o,\n                    expected: y\n                  });\n                }\n\n                if (t[0] instanceof Array && t.length > 1) throw new Error(\"Parse Error: multiple actions possible at state: \" + s + \", token: \" + q);\n\n                switch (t[0]) {\n                  case 1:\n                    d.push(q), e.push(this.lexer.yytext), f.push(this.lexer.yylloc), d.push(t[1]), q = null, r ? (q = r, r = null) : (j = this.lexer.yyleng, h = this.lexer.yytext, i = this.lexer.yylineno, o = this.lexer.yylloc, k > 0 && k--);\n                    break;\n\n                  case 2:\n                    if (w = this.productions_[t[1]][1], z.$ = e[e.length - w], z._$ = {\n                      first_line: f[f.length - (w || 1)].first_line,\n                      last_line: f[f.length - 1].last_line,\n                      first_column: f[f.length - (w || 1)].first_column,\n                      last_column: f[f.length - 1].last_column\n                    }, p && (z._$.range = [f[f.length - (w || 1)].range[0], f[f.length - 1].range[1]]), void 0 !== (u = this.performAction.apply(z, [h, j, i, this.yy, t[1], e, f].concat(n)))) return u;\n                    w && (d = d.slice(0, -1 * w * 2), e = e.slice(0, -1 * w), f = f.slice(0, -1 * w)), d.push(this.productions_[t[1]][0]), e.push(z.$), f.push(z._$), x = g[d[d.length - 2]][d[d.length - 1]], d.push(x);\n                    break;\n\n                  case 3:\n                    return !0;\n                }\n              }\n\n              return !0;\n            }\n          },\n              c = {\n            initialize: function () {\n              this._nodes = [], this._node = {}, this._stash = [];\n            },\n            set: function (a) {\n              for (var b in a) this._node[b] = a[b];\n\n              return this._node;\n            },\n            node: function (a) {\n              return arguments.length && (this._node = a), this._node;\n            },\n            push: function () {\n              this._nodes.push(this._node), this._node = {};\n            },\n            unshift: function () {\n              this._nodes.unshift(this._node), this._node = {};\n            },\n            yield: function () {\n              var a = this._nodes;\n              return this.initialize(), a;\n            }\n          },\n              d = function () {\n            return {\n              EOF: 1,\n              parseError: function (a, b) {\n                if (!this.yy.parser) throw new Error(a);\n                this.yy.parser.parseError(a, b);\n              },\n              setInput: function (a) {\n                return this._input = a, this._more = this._backtrack = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = \"\", this.conditionStack = [\"INITIAL\"], this.yylloc = {\n                  first_line: 1,\n                  first_column: 0,\n                  last_line: 1,\n                  last_column: 0\n                }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this;\n              },\n              input: function () {\n                var a = this._input[0];\n                return this.yytext += a, this.yyleng++, this.offset++, this.match += a, this.matched += a, a.match(/(?:\\r\\n?|\\n).*/g) ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), a;\n              },\n              unput: function (a) {\n                var b = a.length,\n                    c = a.split(/(?:\\r\\n?|\\n)/g);\n                this._input = a + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - b - 1), this.offset -= b;\n                var d = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), c.length - 1 && (this.yylineno -= c.length - 1);\n                var e = this.yylloc.range;\n                return this.yylloc = {\n                  first_line: this.yylloc.first_line,\n                  last_line: this.yylineno + 1,\n                  first_column: this.yylloc.first_column,\n                  last_column: c ? (c.length === d.length ? this.yylloc.first_column : 0) + d[d.length - c.length].length - c[0].length : this.yylloc.first_column - b\n                }, this.options.ranges && (this.yylloc.range = [e[0], e[0] + this.yyleng - b]), this.yyleng = this.yytext.length, this;\n              },\n              more: function () {\n                return this._more = !0, this;\n              },\n              reject: function () {\n                return this.options.backtrack_lexer ? (this._backtrack = !0, this) : this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n                  text: \"\",\n                  token: null,\n                  line: this.yylineno\n                });\n              },\n              less: function (a) {\n                this.unput(this.match.slice(a));\n              },\n              pastInput: function () {\n                var a = this.matched.substr(0, this.matched.length - this.match.length);\n                return (a.length > 20 ? \"...\" : \"\") + a.substr(-20).replace(/\\n/g, \"\");\n              },\n              upcomingInput: function () {\n                var a = this.match;\n                return a.length < 20 && (a += this._input.substr(0, 20 - a.length)), (a.substr(0, 20) + (a.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n              },\n              showPosition: function () {\n                var a = this.pastInput(),\n                    b = new Array(a.length + 1).join(\"-\");\n                return a + this.upcomingInput() + \"\\n\" + b + \"^\";\n              },\n              test_match: function (a, b) {\n                var c, d, e;\n                if (this.options.backtrack_lexer && (e = {\n                  yylineno: this.yylineno,\n                  yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                  },\n                  yytext: this.yytext,\n                  match: this.match,\n                  matches: this.matches,\n                  matched: this.matched,\n                  yyleng: this.yyleng,\n                  offset: this.offset,\n                  _more: this._more,\n                  _input: this._input,\n                  yy: this.yy,\n                  conditionStack: this.conditionStack.slice(0),\n                  done: this.done\n                }, this.options.ranges && (e.yylloc.range = this.yylloc.range.slice(0))), d = a[0].match(/(?:\\r\\n?|\\n).*/g), d && (this.yylineno += d.length), this.yylloc = {\n                  first_line: this.yylloc.last_line,\n                  last_line: this.yylineno + 1,\n                  first_column: this.yylloc.last_column,\n                  last_column: d ? d[d.length - 1].length - d[d.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + a[0].length\n                }, this.yytext += a[0], this.match += a[0], this.matches = a, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._backtrack = !1, this._input = this._input.slice(a[0].length), this.matched += a[0], c = this.performAction.call(this, this.yy, this, b, this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), c) return c;\n\n                if (this._backtrack) {\n                  for (var f in e) this[f] = e[f];\n\n                  return !1;\n                }\n\n                return !1;\n              },\n              next: function () {\n                if (this.done) return this.EOF;\n                this._input || (this.done = !0);\n                var a, b, c, d;\n                this._more || (this.yytext = \"\", this.match = \"\");\n\n                for (var e = this._currentRules(), f = 0; f < e.length; f++) if ((c = this._input.match(this.rules[e[f]])) && (!b || c[0].length > b[0].length)) {\n                  if (b = c, d = f, this.options.backtrack_lexer) {\n                    if (!1 !== (a = this.test_match(c, e[f]))) return a;\n\n                    if (this._backtrack) {\n                      b = !1;\n                      continue;\n                    }\n\n                    return !1;\n                  }\n\n                  if (!this.options.flex) break;\n                }\n\n                return b ? !1 !== (a = this.test_match(b, e[d])) && a : \"\" === this._input ? this.EOF : this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n                  text: \"\",\n                  token: null,\n                  line: this.yylineno\n                });\n              },\n              lex: function () {\n                var a = this.next();\n                return a || this.lex();\n              },\n              begin: function (a) {\n                this.conditionStack.push(a);\n              },\n              popState: function () {\n                return this.conditionStack.length - 1 > 0 ? this.conditionStack.pop() : this.conditionStack[0];\n              },\n              _currentRules: function () {\n                return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules;\n              },\n              topState: function (a) {\n                return a = this.conditionStack.length - 1 - Math.abs(a || 0), a >= 0 ? this.conditionStack[a] : \"INITIAL\";\n              },\n              pushState: function (a) {\n                this.begin(a);\n              },\n              stateStackSize: function () {\n                return this.conditionStack.length;\n              },\n              options: {},\n              performAction: function (a, b, c, d) {\n                switch (c) {\n                  case 0:\n                    return 4;\n\n                  case 1:\n                    return 14;\n\n                  case 2:\n                    return 12;\n\n                  case 3:\n                    return 15;\n\n                  case 4:\n                    return 16;\n\n                  case 5:\n                    return 22;\n\n                  case 6:\n                    return 24;\n\n                  case 7:\n                    return 28;\n\n                  case 8:\n                    return 30;\n\n                  case 9:\n                    return 18;\n\n                  case 10:\n                    return b.yytext = b.yytext.substr(1, b.yyleng - 2), 32;\n\n                  case 11:\n                    return b.yytext = b.yytext.substr(1, b.yyleng - 2), 33;\n\n                  case 12:\n                    return 17;\n\n                  case 13:\n                    return 31;\n                }\n              },\n              rules: [/^(?:\\$)/, /^(?:\\.\\.)/, /^(?:\\.)/, /^(?:\\*)/, /^(?:[a-zA-Z_]+[a-zA-Z0-9_]*)/, /^(?:\\[)/, /^(?:\\])/, /^(?:,)/, /^(?:((-?(?:0|[1-9][0-9]*)))?\\:((-?(?:0|[1-9][0-9]*)))?(\\:((-?(?:0|[1-9][0-9]*)))?)?)/, /^(?:(-?(?:0|[1-9][0-9]*)))/, /^(?:\"(?:\\\\[\"bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\")/, /^(?:'(?:\\\\['bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*')/, /^(?:\\(.+?\\)(?=\\]))/, /^(?:\\?\\(.+?\\)(?=\\]))/],\n              conditions: {\n                INITIAL: {\n                  rules: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n                  inclusive: !0\n                }\n              }\n            };\n          }();\n\n          return b.lexer = d, a.prototype = b, b.Parser = a, new a();\n        }();\n\n        void 0 !== a && void 0 !== c && (c.parser = e, c.Parser = e.Parser, c.parse = function () {\n          return e.parse.apply(e, arguments);\n        }, c.main = function (b) {\n          b[1] || (console.log(\"Usage: \" + b[0] + \" FILE\"), d.exit(1));\n          var e = a(\"fs\").readFileSync(a(\"path\").normalize(b[1]), \"utf8\");\n          return c.parser.parse(e);\n        }, void 0 !== b && a.main === b && c.main(d.argv.slice(1)));\n      }).call(this, a(\"_process\"));\n    }, {\n      _process: 14,\n      fs: 12,\n      path: 13\n    }],\n    2: [function (a, b, c) {\n      b.exports = {\n        identifier: \"[a-zA-Z_]+[a-zA-Z0-9_]*\",\n        integer: \"-?(?:0|[1-9][0-9]*)\",\n        qq_string: '\"(?:\\\\\\\\[\"bfnrt/\\\\\\\\]|\\\\\\\\u[a-fA-F0-9]{4}|[^\"\\\\\\\\])*\"',\n        q_string: \"'(?:\\\\\\\\['bfnrt/\\\\\\\\]|\\\\\\\\u[a-fA-F0-9]{4}|[^'\\\\\\\\])*'\"\n      };\n    }, {}],\n    3: [function (a, b, c) {\n      var d = a(\"./dict\"),\n          e = a(\"fs\"),\n          f = {\n        lex: {\n          macros: {\n            esc: \"\\\\\\\\\",\n            int: d.integer\n          },\n          rules: [[\"\\\\$\", \"return 'DOLLAR'\"], [\"\\\\.\\\\.\", \"return 'DOT_DOT'\"], [\"\\\\.\", \"return 'DOT'\"], [\"\\\\*\", \"return 'STAR'\"], [d.identifier, \"return 'IDENTIFIER'\"], [\"\\\\[\", \"return '['\"], [\"\\\\]\", \"return ']'\"], [\",\", \"return ','\"], [\"({int})?\\\\:({int})?(\\\\:({int})?)?\", \"return 'ARRAY_SLICE'\"], [\"{int}\", \"return 'INTEGER'\"], [d.qq_string, \"yytext = yytext.substr(1,yyleng-2); return 'QQ_STRING';\"], [d.q_string, \"yytext = yytext.substr(1,yyleng-2); return 'Q_STRING';\"], [\"\\\\(.+?\\\\)(?=\\\\])\", \"return 'SCRIPT_EXPRESSION'\"], [\"\\\\?\\\\(.+?\\\\)(?=\\\\])\", \"return 'FILTER_EXPRESSION'\"]]\n        },\n        start: \"JSON_PATH\",\n        bnf: {\n          JSON_PATH: [[\"DOLLAR\", 'yy.ast.set({ expression: { type: \"root\", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'], [\"DOLLAR PATH_COMPONENTS\", 'yy.ast.set({ expression: { type: \"root\", value: $1 } }); yy.ast.unshift(); return yy.ast.yield()'], [\"LEADING_CHILD_MEMBER_EXPRESSION\", \"yy.ast.unshift(); return yy.ast.yield()\"], [\"LEADING_CHILD_MEMBER_EXPRESSION PATH_COMPONENTS\", 'yy.ast.set({ operation: \"member\", scope: \"child\", expression: { type: \"identifier\", value: $1 }}); yy.ast.unshift(); return yy.ast.yield()']],\n          PATH_COMPONENTS: [[\"PATH_COMPONENT\", \"\"], [\"PATH_COMPONENTS PATH_COMPONENT\", \"\"]],\n          PATH_COMPONENT: [[\"MEMBER_COMPONENT\", 'yy.ast.set({ operation: \"member\" }); yy.ast.push()'], [\"SUBSCRIPT_COMPONENT\", 'yy.ast.set({ operation: \"subscript\" }); yy.ast.push() ']],\n          MEMBER_COMPONENT: [[\"CHILD_MEMBER_COMPONENT\", 'yy.ast.set({ scope: \"child\" })'], [\"DESCENDANT_MEMBER_COMPONENT\", 'yy.ast.set({ scope: \"descendant\" })']],\n          CHILD_MEMBER_COMPONENT: [[\"DOT MEMBER_EXPRESSION\", \"\"]],\n          LEADING_CHILD_MEMBER_EXPRESSION: [[\"MEMBER_EXPRESSION\", 'yy.ast.set({ scope: \"child\", operation: \"member\" })']],\n          DESCENDANT_MEMBER_COMPONENT: [[\"DOT_DOT MEMBER_EXPRESSION\", \"\"]],\n          MEMBER_EXPRESSION: [[\"STAR\", 'yy.ast.set({ expression: { type: \"wildcard\", value: $1 } })'], [\"IDENTIFIER\", 'yy.ast.set({ expression: { type: \"identifier\", value: $1 } })'], [\"SCRIPT_EXPRESSION\", 'yy.ast.set({ expression: { type: \"script_expression\", value: $1 } })'], [\"INTEGER\", 'yy.ast.set({ expression: { type: \"numeric_literal\", value: parseInt($1) } })'], [\"END\", \"\"]],\n          SUBSCRIPT_COMPONENT: [[\"CHILD_SUBSCRIPT_COMPONENT\", 'yy.ast.set({ scope: \"child\" })'], [\"DESCENDANT_SUBSCRIPT_COMPONENT\", 'yy.ast.set({ scope: \"descendant\" })']],\n          CHILD_SUBSCRIPT_COMPONENT: [[\"[ SUBSCRIPT ]\", \"\"]],\n          DESCENDANT_SUBSCRIPT_COMPONENT: [[\"DOT_DOT [ SUBSCRIPT ]\", \"\"]],\n          SUBSCRIPT: [[\"SUBSCRIPT_EXPRESSION\", \"\"], [\"SUBSCRIPT_EXPRESSION_LIST\", '$1.length > 1? yy.ast.set({ expression: { type: \"union\", value: $1 } }) : $$ = $1']],\n          SUBSCRIPT_EXPRESSION_LIST: [[\"SUBSCRIPT_EXPRESSION_LISTABLE\", \"$$ = [$1]\"], [\"SUBSCRIPT_EXPRESSION_LIST , SUBSCRIPT_EXPRESSION_LISTABLE\", \"$$ = $1.concat($3)\"]],\n          SUBSCRIPT_EXPRESSION_LISTABLE: [[\"INTEGER\", '$$ = { expression: { type: \"numeric_literal\", value: parseInt($1) } }; yy.ast.set($$)'], [\"STRING_LITERAL\", '$$ = { expression: { type: \"string_literal\", value: $1 } }; yy.ast.set($$)'], [\"ARRAY_SLICE\", '$$ = { expression: { type: \"slice\", value: $1 } }; yy.ast.set($$)']],\n          SUBSCRIPT_EXPRESSION: [[\"STAR\", '$$ = { expression: { type: \"wildcard\", value: $1 } }; yy.ast.set($$)'], [\"SCRIPT_EXPRESSION\", '$$ = { expression: { type: \"script_expression\", value: $1 } }; yy.ast.set($$)'], [\"FILTER_EXPRESSION\", '$$ = { expression: { type: \"filter_expression\", value: $1 } }; yy.ast.set($$)']],\n          STRING_LITERAL: [[\"QQ_STRING\", \"$$ = $1\"], [\"Q_STRING\", \"$$ = $1\"]]\n        }\n      };\n      e.readFileSync && (f.moduleInclude = e.readFileSync(a.resolve(\"../include/module.js\")), f.actionInclude = e.readFileSync(a.resolve(\"../include/action.js\"))), b.exports = f;\n    }, {\n      \"./dict\": 2,\n      fs: 12\n    }],\n    4: [function (a, b, c) {\n      function d(b, c, d) {\n        var e = a(\"./index\"),\n            f = m.parse(c).body[0].expression,\n            g = j(f, {\n          \"@\": b.value\n        }),\n            h = d.replace(/\\{\\{\\s*value\\s*\\}\\}/g, g),\n            i = e.nodes(b.value, h);\n        return i.forEach(function (a) {\n          a.path = b.path.concat(a.path.slice(1));\n        }), i;\n      }\n\n      function e(a) {\n        return Array.isArray(a);\n      }\n\n      function f(a) {\n        return a && !(a instanceof Array) && a instanceof Object;\n      }\n\n      function g(a) {\n        return function (b, c, d, g) {\n          var h = b.value,\n              i = b.path,\n              j = [],\n              k = function (b, h) {\n            e(b) ? (b.forEach(function (a, b) {\n              j.length >= g || d(b, a, c) && j.push({\n                path: h.concat(b),\n                value: a\n              });\n            }), b.forEach(function (b, c) {\n              j.length >= g || a && k(b, h.concat(c));\n            })) : f(b) && (this.keys(b).forEach(function (a) {\n              j.length >= g || d(a, b[a], c) && j.push({\n                path: h.concat(a),\n                value: b[a]\n              });\n            }), this.keys(b).forEach(function (c) {\n              j.length >= g || a && k(b[c], h.concat(c));\n            }));\n          }.bind(this);\n\n          return k(h, i), j;\n        };\n      }\n\n      function h(a) {\n        return function (b, c, d) {\n          return this.descend(c, b.expression.value, a, d);\n        };\n      }\n\n      function i(a) {\n        return function (b, c, d) {\n          return this.traverse(c, b.expression.value, a, d);\n        };\n      }\n\n      function j() {\n        try {\n          return o.apply(this, arguments);\n        } catch (a) {}\n      }\n\n      function k(a) {\n        return a = a.filter(function (a) {\n          return a;\n        }), p(a, function (a) {\n          return a.path.map(function (a) {\n            return String(a).replace(\"-\", \"--\");\n          }).join(\"-\");\n        });\n      }\n\n      function l(a) {\n        var b = String(a);\n        return b.match(/^-?[0-9]+$/) ? parseInt(b) : null;\n      }\n\n      var m = a(\"./aesprim\"),\n          n = a(\"./slice\"),\n          o = a(\"static-eval\"),\n          p = a(\"underscore\").uniq,\n          q = function () {\n        return this.initialize.apply(this, arguments);\n      };\n\n      q.prototype.initialize = function () {\n        this.traverse = g(!0), this.descend = g();\n      }, q.prototype.keys = Object.keys, q.prototype.resolve = function (a) {\n        var b = [a.operation, a.scope, a.expression.type].join(\"-\"),\n            c = this._fns[b];\n        if (!c) throw new Error(\"couldn't resolve key: \" + b);\n        return c.bind(this);\n      }, q.prototype.register = function (a, b) {\n        if (!b instanceof Function) throw new Error(\"handler must be a function\");\n        this._fns[a] = b;\n      }, q.prototype._fns = {\n        \"member-child-identifier\": function (a, b) {\n          var c = a.expression.value,\n              d = b.value;\n          if (d instanceof Object && c in d) return [{\n            value: d[c],\n            path: b.path.concat(c)\n          }];\n        },\n        \"member-descendant-identifier\": i(function (a, b, c) {\n          return a == c;\n        }),\n        \"subscript-child-numeric_literal\": h(function (a, b, c) {\n          return a === c;\n        }),\n        \"member-child-numeric_literal\": h(function (a, b, c) {\n          return String(a) === String(c);\n        }),\n        \"subscript-descendant-numeric_literal\": i(function (a, b, c) {\n          return a === c;\n        }),\n        \"member-child-wildcard\": h(function () {\n          return !0;\n        }),\n        \"member-descendant-wildcard\": i(function () {\n          return !0;\n        }),\n        \"subscript-descendant-wildcard\": i(function () {\n          return !0;\n        }),\n        \"subscript-child-wildcard\": h(function () {\n          return !0;\n        }),\n        \"subscript-child-slice\": function (a, b) {\n          if (e(b.value)) {\n            var c = a.expression.value.split(\":\").map(l),\n                d = b.value.map(function (a, c) {\n              return {\n                value: a,\n                path: b.path.concat(c)\n              };\n            });\n            return n.apply(null, [d].concat(c));\n          }\n        },\n        \"subscript-child-union\": function (a, b) {\n          var c = [];\n          return a.expression.value.forEach(function (a) {\n            var d = {\n              operation: \"subscript\",\n              scope: \"child\",\n              expression: a.expression\n            },\n                e = this.resolve(d),\n                f = e(d, b);\n            f && (c = c.concat(f));\n          }, this), k(c);\n        },\n        \"subscript-descendant-union\": function (b, c, d) {\n          var e = a(\"..\"),\n              f = this,\n              g = [];\n          return e.nodes(c, \"$..*\").slice(1).forEach(function (a) {\n            g.length >= d || b.expression.value.forEach(function (b) {\n              var c = {\n                operation: \"subscript\",\n                scope: \"child\",\n                expression: b.expression\n              },\n                  d = f.resolve(c),\n                  e = d(c, a);\n              g = g.concat(e);\n            });\n          }), k(g);\n        },\n        \"subscript-child-filter_expression\": function (a, b, c) {\n          var d = a.expression.value.slice(2, -1),\n              e = m.parse(d).body[0].expression,\n              f = function (a, b) {\n            return j(e, {\n              \"@\": b\n            });\n          };\n\n          return this.descend(b, null, f, c);\n        },\n        \"subscript-descendant-filter_expression\": function (a, b, c) {\n          var d = a.expression.value.slice(2, -1),\n              e = m.parse(d).body[0].expression,\n              f = function (a, b) {\n            return j(e, {\n              \"@\": b\n            });\n          };\n\n          return this.traverse(b, null, f, c);\n        },\n        \"subscript-child-script_expression\": function (a, b) {\n          return d(b, a.expression.value.slice(1, -1), \"$[{{value}}]\");\n        },\n        \"member-child-script_expression\": function (a, b) {\n          return d(b, a.expression.value.slice(1, -1), \"$.{{value}}\");\n        },\n        \"member-descendant-script_expression\": function (a, b) {\n          return d(b, a.expression.value.slice(1, -1), \"$..value\");\n        }\n      }, q.prototype._fns[\"subscript-child-string_literal\"] = q.prototype._fns[\"member-child-identifier\"], q.prototype._fns[\"member-descendant-numeric_literal\"] = q.prototype._fns[\"subscript-descendant-string_literal\"] = q.prototype._fns[\"member-descendant-identifier\"], b.exports = q;\n    }, {\n      \"..\": \"jsonpath\",\n      \"./aesprim\": \"./aesprim\",\n      \"./index\": 5,\n      \"./slice\": 7,\n      \"static-eval\": 15,\n      underscore: 12\n    }],\n    5: [function (a, b, c) {\n      function d(a) {\n        return \"[object String]\" == Object.prototype.toString.call(a);\n      }\n\n      var e = a(\"assert\"),\n          f = a(\"./dict\"),\n          g = a(\"./parser\"),\n          h = a(\"./handlers\"),\n          i = function () {\n        this.initialize.apply(this, arguments);\n      };\n\n      i.prototype.initialize = function () {\n        this.parser = new g(), this.handlers = new h();\n      }, i.prototype.parse = function (a) {\n        return e.ok(d(a), \"we need a path\"), this.parser.parse(a);\n      }, i.prototype.parent = function (a, b) {\n        e.ok(a instanceof Object, \"obj needs to be an object\"), e.ok(b, \"we need a path\");\n        var c = this.nodes(a, b)[0];\n        c.path.pop();\n        return this.value(a, c.path);\n      }, i.prototype.apply = function (a, b, c) {\n        e.ok(a instanceof Object, \"obj needs to be an object\"), e.ok(b, \"we need a path\"), e.equal(typeof c, \"function\", \"fn needs to be function\");\n        var d = this.nodes(a, b).sort(function (a, b) {\n          return b.path.length - a.path.length;\n        });\n        return d.forEach(function (b) {\n          var d = b.path.pop(),\n              e = this.value(a, this.stringify(b.path)),\n              f = b.value = c.call(a, e[d]);\n          e[d] = f;\n        }, this), d;\n      }, i.prototype.value = function (a, b, c) {\n        if (e.ok(a instanceof Object, \"obj needs to be an object\"), e.ok(b, \"we need a path\"), arguments.length >= 3) {\n          var d = this.nodes(a, b).shift();\n          if (!d) return this._vivify(a, b, c);\n          var f = d.path.slice(-1).shift();\n          this.parent(a, this.stringify(d.path))[f] = c;\n        }\n\n        return this.query(a, this.stringify(b), 1).shift();\n      }, i.prototype._vivify = function (a, b, c) {\n        var d = this;\n        e.ok(a instanceof Object, \"obj needs to be an object\"), e.ok(b, \"we need a path\");\n\n        var f = this.parser.parse(b).map(function (a) {\n          return a.expression.value;\n        }),\n            g = function (b, c) {\n          var e = b.pop(),\n              f = d.value(a, b);\n          f || (g(b.concat(), \"string\" == typeof e ? {} : []), f = d.value(a, b)), f[e] = c;\n        };\n\n        return g(f, c), this.query(a, b)[0];\n      }, i.prototype.query = function (a, b, c) {\n        return e.ok(a instanceof Object, \"obj needs to be an object\"), e.ok(d(b), \"we need a path\"), this.nodes(a, b, c).map(function (a) {\n          return a.value;\n        });\n      }, i.prototype.paths = function (a, b, c) {\n        return e.ok(a instanceof Object, \"obj needs to be an object\"), e.ok(b, \"we need a path\"), this.nodes(a, b, c).map(function (a) {\n          return a.path;\n        });\n      }, i.prototype.nodes = function (a, b, c) {\n        if (e.ok(a instanceof Object, \"obj needs to be an object\"), e.ok(b, \"we need a path\"), 0 === c) return [];\n        var d = this.parser.parse(b),\n            f = this.handlers,\n            g = [{\n          path: [\"$\"],\n          value: a\n        }],\n            h = [];\n        return d.length && \"root\" == d[0].expression.type && d.shift(), d.length ? (d.forEach(function (a, b) {\n          if (!(h.length >= c)) {\n            var e = f.resolve(a),\n                i = [];\n            g.forEach(function (f) {\n              if (!(h.length >= c)) {\n                var g = e(a, f, c);\n                b == d.length - 1 ? h = h.concat(g || []) : i = i.concat(g || []);\n              }\n            }), g = i;\n          }\n        }), c ? h.slice(0, c) : h) : g;\n      }, i.prototype.stringify = function (a) {\n        e.ok(a, \"we need a path\");\n        var b = \"$\",\n            c = {\n          \"descendant-member\": \"..{{value}}\",\n          \"child-member\": \".{{value}}\",\n          \"descendant-subscript\": \"..[{{value}}]\",\n          \"child-subscript\": \"[{{value}}]\"\n        };\n        return a = this._normalize(a), a.forEach(function (a) {\n          if (\"root\" != a.expression.type) {\n            var d,\n                e = [a.scope, a.operation].join(\"-\"),\n                f = c[e];\n            if (d = \"string_literal\" == a.expression.type ? JSON.stringify(a.expression.value) : a.expression.value, !f) throw new Error(\"couldn't find template \" + e);\n            b += f.replace(/{{value}}/, d);\n          }\n        }), b;\n      }, i.prototype._normalize = function (a) {\n        if (e.ok(a, \"we need a path\"), \"string\" == typeof a) return this.parser.parse(a);\n\n        if (Array.isArray(a) && \"string\" == typeof a[0]) {\n          var b = [{\n            expression: {\n              type: \"root\",\n              value: \"$\"\n            }\n          }];\n          return a.forEach(function (a, c) {\n            if (\"$\" != a || 0 !== c) if (\"string\" == typeof a && a.match(\"^\" + f.identifier + \"$\")) b.push({\n              operation: \"member\",\n              scope: \"child\",\n              expression: {\n                value: a,\n                type: \"identifier\"\n              }\n            });else {\n              var d = \"number\" == typeof a ? \"numeric_literal\" : \"string_literal\";\n              b.push({\n                operation: \"subscript\",\n                scope: \"child\",\n                expression: {\n                  value: a,\n                  type: d\n                }\n              });\n            }\n          }), b;\n        }\n\n        if (Array.isArray(a) && \"object\" == typeof a[0]) return a;\n        throw new Error(\"couldn't understand path \" + a);\n      }, i.Handlers = h, i.Parser = g;\n      var j = new i();\n      j.JSONPath = i, b.exports = j;\n    }, {\n      \"./dict\": 2,\n      \"./handlers\": 4,\n      \"./parser\": 6,\n      assert: 8\n    }],\n    6: [function (a, b, c) {\n      var d = a(\"./grammar\"),\n          e = a(\"../generated/parser\"),\n          f = function () {\n        var a = new e.Parser(),\n            b = a.parseError;\n        return a.yy.parseError = function () {\n          a.yy.ast && a.yy.ast.initialize(), b.apply(a, arguments);\n        }, a;\n      };\n\n      f.grammar = d, b.exports = f;\n    }, {\n      \"../generated/parser\": 1,\n      \"./grammar\": 3\n    }],\n    7: [function (a, b, c) {\n      function d(a) {\n        return String(a).match(/^[0-9]+$/) ? parseInt(a) : Number.isFinite(a) ? parseInt(a, 10) : 0;\n      }\n\n      b.exports = function (a, b, c, e) {\n        if (\"string\" == typeof b) throw new Error(\"start cannot be a string\");\n        if (\"string\" == typeof c) throw new Error(\"end cannot be a string\");\n        if (\"string\" == typeof e) throw new Error(\"step cannot be a string\");\n        var f = a.length;\n        if (0 === e) throw new Error(\"step cannot be zero\");\n        if (e = e ? d(e) : 1, b = b < 0 ? f + b : b, c = c < 0 ? f + c : c, b = d(0 === b ? 0 : b || (e > 0 ? 0 : f - 1)), c = d(0 === c ? 0 : c || (e > 0 ? f : -1)), b = e > 0 ? Math.max(0, b) : Math.min(f, b), c = e > 0 ? Math.min(c, f) : Math.max(-1, c), e > 0 && c <= b) return [];\n        if (e < 0 && b <= c) return [];\n\n        for (var g = [], h = b; h != c && !(e < 0 && h <= c || e > 0 && h >= c); h += e) g.push(a[h]);\n\n        return g;\n      };\n    }, {}],\n    8: [function (a, b, c) {\n      function d(a, b) {\n        return n.isUndefined(b) ? \"\" + b : n.isNumber(b) && !isFinite(b) ? b.toString() : n.isFunction(b) || n.isRegExp(b) ? b.toString() : b;\n      }\n\n      function e(a, b) {\n        return n.isString(a) ? a.length < b ? a : a.slice(0, b) : a;\n      }\n\n      function f(a) {\n        return e(JSON.stringify(a.actual, d), 128) + \" \" + a.operator + \" \" + e(JSON.stringify(a.expected, d), 128);\n      }\n\n      function g(a, b, c, d, e) {\n        throw new q.AssertionError({\n          message: c,\n          actual: a,\n          expected: b,\n          operator: d,\n          stackStartFunction: e\n        });\n      }\n\n      function h(a, b) {\n        a || g(a, !0, b, \"==\", q.ok);\n      }\n\n      function i(a, b) {\n        if (a === b) return !0;\n\n        if (n.isBuffer(a) && n.isBuffer(b)) {\n          if (a.length != b.length) return !1;\n\n          for (var c = 0; c < a.length; c++) if (a[c] !== b[c]) return !1;\n\n          return !0;\n        }\n\n        return n.isDate(a) && n.isDate(b) ? a.getTime() === b.getTime() : n.isRegExp(a) && n.isRegExp(b) ? a.source === b.source && a.global === b.global && a.multiline === b.multiline && a.lastIndex === b.lastIndex && a.ignoreCase === b.ignoreCase : n.isObject(a) || n.isObject(b) ? k(a, b) : a == b;\n      }\n\n      function j(a) {\n        return \"[object Arguments]\" == Object.prototype.toString.call(a);\n      }\n\n      function k(a, b) {\n        if (n.isNullOrUndefined(a) || n.isNullOrUndefined(b)) return !1;\n        if (a.prototype !== b.prototype) return !1;\n        if (n.isPrimitive(a) || n.isPrimitive(b)) return a === b;\n        var c = j(a),\n            d = j(b);\n        if (c && !d || !c && d) return !1;\n        if (c) return a = o.call(a), b = o.call(b), i(a, b);\n        var e,\n            f,\n            g = r(a),\n            h = r(b);\n        if (g.length != h.length) return !1;\n\n        for (g.sort(), h.sort(), f = g.length - 1; f >= 0; f--) if (g[f] != h[f]) return !1;\n\n        for (f = g.length - 1; f >= 0; f--) if (e = g[f], !i(a[e], b[e])) return !1;\n\n        return !0;\n      }\n\n      function l(a, b) {\n        return !(!a || !b) && (\"[object RegExp]\" == Object.prototype.toString.call(b) ? b.test(a) : a instanceof b || !0 === b.call({}, a));\n      }\n\n      function m(a, b, c, d) {\n        var e;\n        n.isString(c) && (d = c, c = null);\n\n        try {\n          b();\n        } catch (f) {\n          e = f;\n        }\n\n        if (d = (c && c.name ? \" (\" + c.name + \").\" : \".\") + (d ? \" \" + d : \".\"), a && !e && g(e, c, \"Missing expected exception\" + d), !a && l(e, c) && g(e, c, \"Got unwanted exception\" + d), a && e && c && !l(e, c) || !a && e) throw e;\n      }\n\n      var n = a(\"util/\"),\n          o = Array.prototype.slice,\n          p = Object.prototype.hasOwnProperty,\n          q = b.exports = h;\n      q.AssertionError = function (a) {\n        this.name = \"AssertionError\", this.actual = a.actual, this.expected = a.expected, this.operator = a.operator, a.message ? (this.message = a.message, this.generatedMessage = !1) : (this.message = f(this), this.generatedMessage = !0);\n        var b = a.stackStartFunction || g;\n        if (Error.captureStackTrace) Error.captureStackTrace(this, b);else {\n          var c = new Error();\n\n          if (c.stack) {\n            var d = c.stack,\n                e = b.name,\n                h = d.indexOf(\"\\n\" + e);\n\n            if (h >= 0) {\n              var i = d.indexOf(\"\\n\", h + 1);\n              d = d.substring(i + 1);\n            }\n\n            this.stack = d;\n          }\n        }\n      }, n.inherits(q.AssertionError, Error), q.fail = g, q.ok = h, q.equal = function (a, b, c) {\n        a != b && g(a, b, c, \"==\", q.equal);\n      }, q.notEqual = function (a, b, c) {\n        a == b && g(a, b, c, \"!=\", q.notEqual);\n      }, q.deepEqual = function (a, b, c) {\n        i(a, b) || g(a, b, c, \"deepEqual\", q.deepEqual);\n      }, q.notDeepEqual = function (a, b, c) {\n        i(a, b) && g(a, b, c, \"notDeepEqual\", q.notDeepEqual);\n      }, q.strictEqual = function (a, b, c) {\n        a !== b && g(a, b, c, \"===\", q.strictEqual);\n      }, q.notStrictEqual = function (a, b, c) {\n        a === b && g(a, b, c, \"!==\", q.notStrictEqual);\n      }, q.throws = function (a, b, c) {\n        m.apply(this, [!0].concat(o.call(arguments)));\n      }, q.doesNotThrow = function (a, b) {\n        m.apply(this, [!1].concat(o.call(arguments)));\n      }, q.ifError = function (a) {\n        if (a) throw a;\n      };\n\n      var r = Object.keys || function (a) {\n        var b = [];\n\n        for (var c in a) p.call(a, c) && b.push(c);\n\n        return b;\n      };\n    }, {\n      \"util/\": 11\n    }],\n    9: [function (a, b, c) {\n      \"function\" == typeof Object.create ? b.exports = function (a, b) {\n        a.super_ = b, a.prototype = Object.create(b.prototype, {\n          constructor: {\n            value: a,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        });\n      } : b.exports = function (a, b) {\n        a.super_ = b;\n\n        var c = function () {};\n\n        c.prototype = b.prototype, a.prototype = new c(), a.prototype.constructor = a;\n      };\n    }, {}],\n    10: [function (a, b, c) {\n      b.exports = function (a) {\n        return a && \"object\" == typeof a && \"function\" == typeof a.copy && \"function\" == typeof a.fill && \"function\" == typeof a.readUInt8;\n      };\n    }, {}],\n    11: [function (a, b, c) {\n      (function (b, d) {\n        function e(a, b) {\n          var d = {\n            seen: [],\n            stylize: g\n          };\n          return arguments.length >= 3 && (d.depth = arguments[2]), arguments.length >= 4 && (d.colors = arguments[3]), p(b) ? d.showHidden = b : b && c._extend(d, b), v(d.showHidden) && (d.showHidden = !1), v(d.depth) && (d.depth = 2), v(d.colors) && (d.colors = !1), v(d.customInspect) && (d.customInspect = !0), d.colors && (d.stylize = f), i(d, a, d.depth);\n        }\n\n        function f(a, b) {\n          var c = e.styles[b];\n          return c ? \"\u001b[\" + e.colors[c][0] + \"m\" + a + \"\u001b[\" + e.colors[c][1] + \"m\" : a;\n        }\n\n        function g(a, b) {\n          return a;\n        }\n\n        function h(a) {\n          var b = {};\n          return a.forEach(function (a, c) {\n            b[a] = !0;\n          }), b;\n        }\n\n        function i(a, b, d) {\n          if (a.customInspect && b && A(b.inspect) && b.inspect !== c.inspect && (!b.constructor || b.constructor.prototype !== b)) {\n            var e = b.inspect(d, a);\n            return t(e) || (e = i(a, e, d)), e;\n          }\n\n          var f = j(a, b);\n          if (f) return f;\n          var g = Object.keys(b),\n              p = h(g);\n          if (a.showHidden && (g = Object.getOwnPropertyNames(b)), z(b) && (g.indexOf(\"message\") >= 0 || g.indexOf(\"description\") >= 0)) return k(b);\n\n          if (0 === g.length) {\n            if (A(b)) {\n              var q = b.name ? \": \" + b.name : \"\";\n              return a.stylize(\"[Function\" + q + \"]\", \"special\");\n            }\n\n            if (w(b)) return a.stylize(RegExp.prototype.toString.call(b), \"regexp\");\n            if (y(b)) return a.stylize(Date.prototype.toString.call(b), \"date\");\n            if (z(b)) return k(b);\n          }\n\n          var r = \"\",\n              s = !1,\n              u = [\"{\", \"}\"];\n\n          if (o(b) && (s = !0, u = [\"[\", \"]\"]), A(b)) {\n            r = \" [Function\" + (b.name ? \": \" + b.name : \"\") + \"]\";\n          }\n\n          if (w(b) && (r = \" \" + RegExp.prototype.toString.call(b)), y(b) && (r = \" \" + Date.prototype.toUTCString.call(b)), z(b) && (r = \" \" + k(b)), 0 === g.length && (!s || 0 == b.length)) return u[0] + r + u[1];\n          if (d < 0) return w(b) ? a.stylize(RegExp.prototype.toString.call(b), \"regexp\") : a.stylize(\"[Object]\", \"special\");\n          a.seen.push(b);\n          var v;\n          return v = s ? l(a, b, d, p, g) : g.map(function (c) {\n            return m(a, b, d, p, c, s);\n          }), a.seen.pop(), n(v, r, u);\n        }\n\n        function j(a, b) {\n          if (v(b)) return a.stylize(\"undefined\", \"undefined\");\n\n          if (t(b)) {\n            var c = \"'\" + JSON.stringify(b).replace(/^\"|\"$/g, \"\").replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + \"'\";\n            return a.stylize(c, \"string\");\n          }\n\n          return s(b) ? a.stylize(\"\" + b, \"number\") : p(b) ? a.stylize(\"\" + b, \"boolean\") : q(b) ? a.stylize(\"null\", \"null\") : void 0;\n        }\n\n        function k(a) {\n          return \"[\" + Error.prototype.toString.call(a) + \"]\";\n        }\n\n        function l(a, b, c, d, e) {\n          for (var f = [], g = 0, h = b.length; g < h; ++g) F(b, String(g)) ? f.push(m(a, b, c, d, String(g), !0)) : f.push(\"\");\n\n          return e.forEach(function (e) {\n            e.match(/^\\d+$/) || f.push(m(a, b, c, d, e, !0));\n          }), f;\n        }\n\n        function m(a, b, c, d, e, f) {\n          var g, h, j;\n\n          if (j = Object.getOwnPropertyDescriptor(b, e) || {\n            value: b[e]\n          }, j.get ? h = j.set ? a.stylize(\"[Getter/Setter]\", \"special\") : a.stylize(\"[Getter]\", \"special\") : j.set && (h = a.stylize(\"[Setter]\", \"special\")), F(d, e) || (g = \"[\" + e + \"]\"), h || (a.seen.indexOf(j.value) < 0 ? (h = q(c) ? i(a, j.value, null) : i(a, j.value, c - 1), h.indexOf(\"\\n\") > -1 && (h = f ? h.split(\"\\n\").map(function (a) {\n            return \"  \" + a;\n          }).join(\"\\n\").substr(2) : \"\\n\" + h.split(\"\\n\").map(function (a) {\n            return \"   \" + a;\n          }).join(\"\\n\"))) : h = a.stylize(\"[Circular]\", \"special\")), v(g)) {\n            if (f && e.match(/^\\d+$/)) return h;\n            g = JSON.stringify(\"\" + e), g.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/) ? (g = g.substr(1, g.length - 2), g = a.stylize(g, \"name\")) : (g = g.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\"), g = a.stylize(g, \"string\"));\n          }\n\n          return g + \": \" + h;\n        }\n\n        function n(a, b, c) {\n          var d = 0;\n          return a.reduce(function (a, b) {\n            return d++, b.indexOf(\"\\n\") >= 0 && d++, a + b.replace(/\\u001b\\[\\d\\d?m/g, \"\").length + 1;\n          }, 0) > 60 ? c[0] + (\"\" === b ? \"\" : b + \"\\n \") + \" \" + a.join(\",\\n  \") + \" \" + c[1] : c[0] + b + \" \" + a.join(\", \") + \" \" + c[1];\n        }\n\n        function o(a) {\n          return Array.isArray(a);\n        }\n\n        function p(a) {\n          return \"boolean\" == typeof a;\n        }\n\n        function q(a) {\n          return null === a;\n        }\n\n        function r(a) {\n          return null == a;\n        }\n\n        function s(a) {\n          return \"number\" == typeof a;\n        }\n\n        function t(a) {\n          return \"string\" == typeof a;\n        }\n\n        function u(a) {\n          return \"symbol\" == typeof a;\n        }\n\n        function v(a) {\n          return void 0 === a;\n        }\n\n        function w(a) {\n          return x(a) && \"[object RegExp]\" === C(a);\n        }\n\n        function x(a) {\n          return \"object\" == typeof a && null !== a;\n        }\n\n        function y(a) {\n          return x(a) && \"[object Date]\" === C(a);\n        }\n\n        function z(a) {\n          return x(a) && (\"[object Error]\" === C(a) || a instanceof Error);\n        }\n\n        function A(a) {\n          return \"function\" == typeof a;\n        }\n\n        function B(a) {\n          return null === a || \"boolean\" == typeof a || \"number\" == typeof a || \"string\" == typeof a || \"symbol\" == typeof a || void 0 === a;\n        }\n\n        function C(a) {\n          return Object.prototype.toString.call(a);\n        }\n\n        function D(a) {\n          return a < 10 ? \"0\" + a.toString(10) : a.toString(10);\n        }\n\n        function E() {\n          var a = new Date(),\n              b = [D(a.getHours()), D(a.getMinutes()), D(a.getSeconds())].join(\":\");\n          return [a.getDate(), J[a.getMonth()], b].join(\" \");\n        }\n\n        function F(a, b) {\n          return Object.prototype.hasOwnProperty.call(a, b);\n        }\n\n        var G = /%[sdj%]/g;\n        c.format = function (a) {\n          if (!t(a)) {\n            for (var b = [], c = 0; c < arguments.length; c++) b.push(e(arguments[c]));\n\n            return b.join(\" \");\n          }\n\n          for (var c = 1, d = arguments, f = d.length, g = String(a).replace(G, function (a) {\n            if (\"%%\" === a) return \"%\";\n            if (c >= f) return a;\n\n            switch (a) {\n              case \"%s\":\n                return String(d[c++]);\n\n              case \"%d\":\n                return Number(d[c++]);\n\n              case \"%j\":\n                try {\n                  return JSON.stringify(d[c++]);\n                } catch (b) {\n                  return \"[Circular]\";\n                }\n\n              default:\n                return a;\n            }\n          }), h = d[c]; c < f; h = d[++c]) q(h) || !x(h) ? g += \" \" + h : g += \" \" + e(h);\n\n          return g;\n        }, c.deprecate = function (a, e) {\n          function f() {\n            if (!g) {\n              if (b.throwDeprecation) throw new Error(e);\n              b.traceDeprecation ? console.trace(e) : console.error(e), g = !0;\n            }\n\n            return a.apply(this, arguments);\n          }\n\n          if (v(d.process)) return function () {\n            return c.deprecate(a, e).apply(this, arguments);\n          };\n          if (!0 === b.noDeprecation) return a;\n          var g = !1;\n          return f;\n        };\n        var H,\n            I = {};\n        c.debuglog = function (a) {\n          if (v(H) && (H = b.env.NODE_DEBUG || \"\"), a = a.toUpperCase(), !I[a]) if (new RegExp(\"\\\\b\" + a + \"\\\\b\", \"i\").test(H)) {\n            var d = b.pid;\n\n            I[a] = function () {\n              var b = c.format.apply(c, arguments);\n              console.error(\"%s %d: %s\", a, d, b);\n            };\n          } else I[a] = function () {};\n          return I[a];\n        }, c.inspect = e, e.colors = {\n          bold: [1, 22],\n          italic: [3, 23],\n          underline: [4, 24],\n          inverse: [7, 27],\n          white: [37, 39],\n          grey: [90, 39],\n          black: [30, 39],\n          blue: [34, 39],\n          cyan: [36, 39],\n          green: [32, 39],\n          magenta: [35, 39],\n          red: [31, 39],\n          yellow: [33, 39]\n        }, e.styles = {\n          special: \"cyan\",\n          number: \"yellow\",\n          boolean: \"yellow\",\n          undefined: \"grey\",\n          null: \"bold\",\n          string: \"green\",\n          date: \"magenta\",\n          regexp: \"red\"\n        }, c.isArray = o, c.isBoolean = p, c.isNull = q, c.isNullOrUndefined = r, c.isNumber = s, c.isString = t, c.isSymbol = u, c.isUndefined = v, c.isRegExp = w, c.isObject = x, c.isDate = y, c.isError = z, c.isFunction = A, c.isPrimitive = B, c.isBuffer = a(\"./support/isBuffer\");\n        var J = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        c.log = function () {\n          console.log(\"%s - %s\", E(), c.format.apply(c, arguments));\n        }, c.inherits = a(\"inherits\"), c._extend = function (a, b) {\n          if (!b || !x(b)) return a;\n\n          for (var c = Object.keys(b), d = c.length; d--;) a[c[d]] = b[c[d]];\n\n          return a;\n        };\n      }).call(this, a(\"_process\"), \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {});\n    }, {\n      \"./support/isBuffer\": 10,\n      _process: 14,\n      inherits: 9\n    }],\n    12: [function (a, b, c) {}, {}],\n    13: [function (a, b, c) {\n      (function (a) {\n        function b(a, b) {\n          for (var c = 0, d = a.length - 1; d >= 0; d--) {\n            var e = a[d];\n            \".\" === e ? a.splice(d, 1) : \"..\" === e ? (a.splice(d, 1), c++) : c && (a.splice(d, 1), c--);\n          }\n\n          if (b) for (; c--; c) a.unshift(\"..\");\n          return a;\n        }\n\n        function d(a) {\n          \"string\" != typeof a && (a += \"\");\n          var b,\n              c = 0,\n              d = -1,\n              e = !0;\n\n          for (b = a.length - 1; b >= 0; --b) if (47 === a.charCodeAt(b)) {\n            if (!e) {\n              c = b + 1;\n              break;\n            }\n          } else -1 === d && (e = !1, d = b + 1);\n\n          return -1 === d ? \"\" : a.slice(c, d);\n        }\n\n        function e(a, b) {\n          if (a.filter) return a.filter(b);\n\n          for (var c = [], d = 0; d < a.length; d++) b(a[d], d, a) && c.push(a[d]);\n\n          return c;\n        }\n\n        c.resolve = function () {\n          for (var c = \"\", d = !1, f = arguments.length - 1; f >= -1 && !d; f--) {\n            var g = f >= 0 ? arguments[f] : a.cwd();\n            if (\"string\" != typeof g) throw new TypeError(\"Arguments to path.resolve must be strings\");\n            g && (c = g + \"/\" + c, d = \"/\" === g.charAt(0));\n          }\n\n          return c = b(e(c.split(\"/\"), function (a) {\n            return !!a;\n          }), !d).join(\"/\"), (d ? \"/\" : \"\") + c || \".\";\n        }, c.normalize = function (a) {\n          var d = c.isAbsolute(a),\n              g = \"/\" === f(a, -1);\n          return a = b(e(a.split(\"/\"), function (a) {\n            return !!a;\n          }), !d).join(\"/\"), a || d || (a = \".\"), a && g && (a += \"/\"), (d ? \"/\" : \"\") + a;\n        }, c.isAbsolute = function (a) {\n          return \"/\" === a.charAt(0);\n        }, c.join = function () {\n          var a = Array.prototype.slice.call(arguments, 0);\n          return c.normalize(e(a, function (a, b) {\n            if (\"string\" != typeof a) throw new TypeError(\"Arguments to path.join must be strings\");\n            return a;\n          }).join(\"/\"));\n        }, c.relative = function (a, b) {\n          function d(a) {\n            for (var b = 0; b < a.length && \"\" === a[b]; b++);\n\n            for (var c = a.length - 1; c >= 0 && \"\" === a[c]; c--);\n\n            return b > c ? [] : a.slice(b, c - b + 1);\n          }\n\n          a = c.resolve(a).substr(1), b = c.resolve(b).substr(1);\n\n          for (var e = d(a.split(\"/\")), f = d(b.split(\"/\")), g = Math.min(e.length, f.length), h = g, i = 0; i < g; i++) if (e[i] !== f[i]) {\n            h = i;\n            break;\n          }\n\n          for (var j = [], i = h; i < e.length; i++) j.push(\"..\");\n\n          return j = j.concat(f.slice(h)), j.join(\"/\");\n        }, c.sep = \"/\", c.delimiter = \":\", c.dirname = function (a) {\n          if (\"string\" != typeof a && (a += \"\"), 0 === a.length) return \".\";\n\n          for (var b = a.charCodeAt(0), c = 47 === b, d = -1, e = !0, f = a.length - 1; f >= 1; --f) if (47 === (b = a.charCodeAt(f))) {\n            if (!e) {\n              d = f;\n              break;\n            }\n          } else e = !1;\n\n          return -1 === d ? c ? \"/\" : \".\" : c && 1 === d ? \"/\" : a.slice(0, d);\n        }, c.basename = function (a, b) {\n          var c = d(a);\n          return b && c.substr(-1 * b.length) === b && (c = c.substr(0, c.length - b.length)), c;\n        }, c.extname = function (a) {\n          \"string\" != typeof a && (a += \"\");\n\n          for (var b = -1, c = 0, d = -1, e = !0, f = 0, g = a.length - 1; g >= 0; --g) {\n            var h = a.charCodeAt(g);\n            if (47 !== h) -1 === d && (e = !1, d = g + 1), 46 === h ? -1 === b ? b = g : 1 !== f && (f = 1) : -1 !== b && (f = -1);else if (!e) {\n              c = g + 1;\n              break;\n            }\n          }\n\n          return -1 === b || -1 === d || 0 === f || 1 === f && b === d - 1 && b === c + 1 ? \"\" : a.slice(b, d);\n        };\n        var f = \"b\" === \"ab\".substr(-1) ? function (a, b, c) {\n          return a.substr(b, c);\n        } : function (a, b, c) {\n          return b < 0 && (b = a.length + b), a.substr(b, c);\n        };\n      }).call(this, a(\"_process\"));\n    }, {\n      _process: 14\n    }],\n    14: [function (a, b, c) {\n      function d() {\n        throw new Error(\"setTimeout has not been defined\");\n      }\n\n      function e() {\n        throw new Error(\"clearTimeout has not been defined\");\n      }\n\n      function f(a) {\n        if (l === setTimeout) return setTimeout(a, 0);\n        if ((l === d || !l) && setTimeout) return l = setTimeout, setTimeout(a, 0);\n\n        try {\n          return l(a, 0);\n        } catch (b) {\n          try {\n            return l.call(null, a, 0);\n          } catch (b) {\n            return l.call(this, a, 0);\n          }\n        }\n      }\n\n      function g(a) {\n        if (m === clearTimeout) return clearTimeout(a);\n        if ((m === e || !m) && clearTimeout) return m = clearTimeout, clearTimeout(a);\n\n        try {\n          return m(a);\n        } catch (b) {\n          try {\n            return m.call(null, a);\n          } catch (b) {\n            return m.call(this, a);\n          }\n        }\n      }\n\n      function h() {\n        q && o && (q = !1, o.length ? p = o.concat(p) : r = -1, p.length && i());\n      }\n\n      function i() {\n        if (!q) {\n          var a = f(h);\n          q = !0;\n\n          for (var b = p.length; b;) {\n            for (o = p, p = []; ++r < b;) o && o[r].run();\n\n            r = -1, b = p.length;\n          }\n\n          o = null, q = !1, g(a);\n        }\n      }\n\n      function j(a, b) {\n        this.fun = a, this.array = b;\n      }\n\n      function k() {}\n\n      var l,\n          m,\n          n = b.exports = {};\n      !function () {\n        try {\n          l = \"function\" == typeof setTimeout ? setTimeout : d;\n        } catch (a) {\n          l = d;\n        }\n\n        try {\n          m = \"function\" == typeof clearTimeout ? clearTimeout : e;\n        } catch (a) {\n          m = e;\n        }\n      }();\n      var o,\n          p = [],\n          q = !1,\n          r = -1;\n      n.nextTick = function (a) {\n        var b = new Array(arguments.length - 1);\n        if (arguments.length > 1) for (var c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];\n        p.push(new j(a, b)), 1 !== p.length || q || f(i);\n      }, j.prototype.run = function () {\n        this.fun.apply(null, this.array);\n      }, n.title = \"browser\", n.browser = !0, n.env = {}, n.argv = [], n.version = \"\", n.versions = {}, n.on = k, n.addListener = k, n.once = k, n.off = k, n.removeListener = k, n.removeAllListeners = k, n.emit = k, n.prependListener = k, n.prependOnceListener = k, n.listeners = function (a) {\n        return [];\n      }, n.binding = function (a) {\n        throw new Error(\"process.binding is not supported\");\n      }, n.cwd = function () {\n        return \"/\";\n      }, n.chdir = function (a) {\n        throw new Error(\"process.chdir is not supported\");\n      }, n.umask = function () {\n        return 0;\n      };\n    }, {}],\n    15: [function (a, b, c) {\n      var d = a(\"escodegen\").generate;\n\n      b.exports = function (a, b) {\n        b || (b = {});\n\n        var c = {},\n            e = function a(e, f) {\n          if (\"Literal\" === e.type) return e.value;\n\n          if (\"UnaryExpression\" === e.type) {\n            var g = a(e.argument);\n            return \"+\" === e.operator ? +g : \"-\" === e.operator ? -g : \"~\" === e.operator ? ~g : \"!\" === e.operator ? !g : c;\n          }\n\n          if (\"ArrayExpression\" === e.type) {\n            for (var h = [], i = 0, j = e.elements.length; i < j; i++) {\n              var k = a(e.elements[i]);\n              if (k === c) return c;\n              h.push(k);\n            }\n\n            return h;\n          }\n\n          if (\"ObjectExpression\" === e.type) {\n            for (var l = {}, i = 0; i < e.properties.length; i++) {\n              var m = e.properties[i],\n                  n = null === m.value ? m.value : a(m.value);\n              if (n === c) return c;\n              l[m.key.value || m.key.name] = n;\n            }\n\n            return l;\n          }\n\n          if (\"BinaryExpression\" === e.type || \"LogicalExpression\" === e.type) {\n            var j = a(e.left);\n            if (j === c) return c;\n            var o = a(e.right);\n            if (o === c) return c;\n            var p = e.operator;\n            return \"==\" === p ? j == o : \"===\" === p ? j === o : \"!=\" === p ? j != o : \"!==\" === p ? j !== o : \"+\" === p ? j + o : \"-\" === p ? j - o : \"*\" === p ? j * o : \"/\" === p ? j / o : \"%\" === p ? j % o : \"<\" === p ? j < o : \"<=\" === p ? j <= o : \">\" === p ? j > o : \">=\" === p ? j >= o : \"|\" === p ? j | o : \"&\" === p ? j & o : \"^\" === p ? j ^ o : \"&&\" === p ? j && o : \"||\" === p ? j || o : c;\n          }\n\n          if (\"Identifier\" === e.type) return {}.hasOwnProperty.call(b, e.name) ? b[e.name] : c;\n          if (\"ThisExpression\" === e.type) return {}.hasOwnProperty.call(b, \"this\") ? b.this : c;\n\n          if (\"CallExpression\" === e.type) {\n            var q = a(e.callee);\n            if (q === c) return c;\n            if (\"function\" != typeof q) return c;\n            var r = e.callee.object ? a(e.callee.object) : c;\n            r === c && (r = null);\n\n            for (var s = [], i = 0, j = e.arguments.length; i < j; i++) {\n              var k = a(e.arguments[i]);\n              if (k === c) return c;\n              s.push(k);\n            }\n\n            return q.apply(r, s);\n          }\n\n          if (\"MemberExpression\" === e.type) {\n            var l = a(e.object);\n            if (l === c || \"function\" == typeof l) return c;\n            if (\"Identifier\" === e.property.type) return l[e.property.name];\n            var m = a(e.property);\n            return m === c ? c : l[m];\n          }\n\n          if (\"ConditionalExpression\" === e.type) {\n            var g = a(e.test);\n            return g === c ? c : a(g ? e.consequent : e.alternate);\n          }\n\n          if (\"ExpressionStatement\" === e.type) {\n            var g = a(e.expression);\n            return g === c ? c : g;\n          }\n\n          if (\"ReturnStatement\" === e.type) return a(e.argument);\n\n          if (\"FunctionExpression\" === e.type) {\n            var t = e.body.body,\n                u = {};\n            Object.keys(b).forEach(function (a) {\n              u[a] = b[a];\n            });\n\n            for (var i = 0; i < e.params.length; i++) {\n              var v = e.params[i];\n              if (\"Identifier\" != v.type) return c;\n              b[v.name] = null;\n            }\n\n            for (var i in t) if (a(t[i]) === c) return c;\n\n            b = u;\n            var w = Object.keys(b),\n                x = w.map(function (a) {\n              return b[a];\n            });\n            return Function(w.join(\", \"), \"return \" + d(e)).apply(null, x);\n          }\n\n          if (\"TemplateLiteral\" === e.type) {\n            for (var y = \"\", i = 0; i < e.expressions.length; i++) y += a(e.quasis[i]), y += a(e.expressions[i]);\n\n            return y += a(e.quasis[i]);\n          }\n\n          if (\"TaggedTemplateExpression\" === e.type) {\n            var z = a(e.tag),\n                A = e.quasi,\n                B = A.quasis.map(a),\n                C = A.expressions.map(a);\n            return z.apply(null, [B].concat(C));\n          }\n\n          return \"TemplateElement\" === e.type ? e.value.cooked : c;\n        }(a);\n\n        return e === c ? void 0 : e;\n      };\n    }, {\n      escodegen: 12\n    }],\n    jsonpath: [function (a, b, c) {\n      b.exports = a(\"./lib/index\");\n    }, {\n      \"./lib/index\": 5\n    }]\n  }, {}, [\"jsonpath\"])(\"jsonpath\");\n});","map":null,"metadata":{},"sourceType":"script"}