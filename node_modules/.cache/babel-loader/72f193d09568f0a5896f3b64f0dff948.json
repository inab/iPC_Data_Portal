{"ast":null,"code":"var _jsxFileName = \"/home/acanosa/React_arranger_template/src/containers/Aggs/Aggs.js\";\nimport React from 'react';\nimport { DatesAgg, BooleanAgg, TermAgg, RangeAgg, AggsPanel } from '@arranger/components/dist/Aggs'; //import { action } from '@storybook/addon-actions';\n\nimport { inCurrentSQON, currentFieldValue } from '@arranger/components/dist/SQONView/utils';\nimport Component from 'react-component-component';\nimport State from '@arranger/components/dist/State';\nimport './Aggs.css';\n\nclass Aggs extends Component {\n  render() {\n    const bolleanAggs = [{\n      field: 'participants__is_proband',\n      displayName: 'Participants is proband',\n      active: false,\n      type: 'Aggregations',\n      allowedValues: [],\n      restricted: false,\n      buckets: [{\n        key: '0',\n        doc_count: 2580,\n        key_as_string: 'false'\n      }, {\n        key: '1',\n        doc_count: 961,\n        key_as_string: 'true'\n      }]\n    }, {\n      field: 'sequencing_experiments__is_paired_end',\n      displayName: 'Is Paired Ende',\n      active: false,\n      type: 'Aggregations',\n      allowedValues: [],\n      restricted: false,\n      buckets: [{\n        key: '0',\n        doc_count: 2580,\n        key_as_string: 'false'\n      }, {\n        key: '1',\n        doc_count: 961,\n        key_as_string: 'true'\n      }]\n    }, {\n      field: 'sequencing_experiments__is_paired_end_0',\n      displayName: 'Is Paired Ende',\n      active: false,\n      type: 'Aggregations',\n      allowedValues: [],\n      restricted: false,\n      buckets: [{\n        key: '0',\n        doc_count: 0,\n        key_as_string: 'false'\n      }, {\n        key: '1',\n        doc_count: 961,\n        key_as_string: 'true'\n      }]\n    }, {\n      field: 'sequencing_experiments__is_paired_end_1',\n      displayName: 'Is Paired Ende',\n      active: false,\n      type: 'Aggregations',\n      allowedValues: [],\n      restricted: false,\n      buckets: [{\n        key: '0',\n        doc_count: 2312,\n        key_as_string: 'false'\n      }, {\n        key: '1',\n        doc_count: 0,\n        key_as_string: 'true'\n      }]\n    }];\n    let aggs = [{\n      field: 'color',\n      displayName: 'Color',\n      active: false,\n      type: 'Aggregations',\n      allowedValues: [],\n      restricted: false,\n      buckets: [{\n        doc_count: 1,\n        key: 'green'\n      }, {\n        doc_count: 5,\n        key: 'yellow'\n      }, {\n        doc_count: 12,\n        key: 'blue'\n      }]\n    }, {\n      field: 'taste',\n      displayName: 'Taste',\n      active: false,\n      type: 'Aggregations',\n      allowedValues: [],\n      restricted: false,\n      buckets: [{\n        doc_count: 1,\n        key: 'spicy'\n      }, {\n        doc_count: 5,\n        key: 'sweet'\n      }, {\n        doc_count: 12,\n        key: 'sour'\n      }, {\n        doc_count: 5,\n        key: 'salty'\n      }, {\n        doc_count: 12,\n        key: 'umami'\n      }, {\n        doc_count: 12,\n        key: 'bland'\n      }]\n    }];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \" ARRANGER AGGS PAGE \"))), React.createElement(\"div\", {\n      className: \"term-agg-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(TermAgg, {\n      field: \"disease_type\",\n      displayName: \"Disease Type\",\n      buckets: [{\n        doc_count: 2,\n        key: 'Acute Myeloid Leukemia'\n      }, {\n        doc_count: 10,\n        key: 'Acinar cell neoplasms'\n      }] //handleValueClick={action('Term Agg Selection')}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"term-agg-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(TermAgg, {\n      field: \"disease_type\",\n      displayName: \"Disease Type\",\n      buckets: [{\n        doc_count: 2,\n        key: 'Acute Myeloid Leukemia'\n      }, {\n        doc_count: 10,\n        key: 'Acinar cell neoplasms'\n      }],\n      headerTitle: \"# files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(State, {\n      initial: {\n        sqon: null\n      },\n      render: ({\n        sqon,\n        update\n      }) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"SQON: \", JSON.stringify(sqon)), React.createElement(\"div\", {\n        css: `\n              width: 300px;\n            `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, aggs.map(agg => // TODO: switch on agg type\n      React.createElement(TermAgg, Object.assign({\n        key: agg.field\n      }, agg, {\n        handleValueClick: ({\n          generateNextSQON\n        }) => update({\n          sqon: generateNextSQON(sqon)\n        }),\n        isActive: d => inCurrentSQON({\n          value: d.value,\n          dotField: d.field,\n          currentSQON: sqon\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"term-agg-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(DatesAgg, {\n      field: \"disease_type\",\n      displayName: \"Disease Type\",\n      stats: {\n        // expects linux timestamp\n        min: 1529539200125,\n        max: 1529539259913\n      } //handleValueClick={action('Term Agg Selection')}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })), React.createElement(Component, {\n      initialState: {\n        sqon: null\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, ({\n      state: {\n        sqon\n      },\n      setState\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"SQON: \", JSON.stringify(sqon)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(DatesAgg, {\n      field: \"disease_type\",\n      displayName: \"Disease Type\",\n      stats: {\n        min: 1529539200125,\n        max: 1529539259913\n      },\n      handleDateChange: ({\n        generateNextSQON = () => {}\n      } = {}) => setState({\n        sqon: generateNextSQON(sqon)\n      }),\n      getActiveValue: ({\n        op,\n        field\n      }) => currentFieldValue({\n        op,\n        dotField: field,\n        sqon\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })))), React.createElement(RangeAgg, {\n      field: \"cases__diagnoses__days_to_death\",\n      displayName: \"Diagnoses Days To Death\",\n      stats: {\n        min: 15,\n        max: 820,\n        count: 1000,\n        avg: 70,\n        sum: 15000\n      } //handleChange={action(`Range Change`)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(State, {\n      initial: {\n        sqon: null\n      },\n      render: ({\n        sqon,\n        update\n      }) => React.createElement(\"div\", {\n        className: \"range with sqon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"SQON: \", JSON.stringify(sqon)), React.createElement(RangeAgg, {\n        field: \"cases__diagnoses__days_to_death\",\n        displayName: \"Diagnoses Days To Death\",\n        unit: 'd',\n        stats: {\n          min: 15,\n          max: 820,\n          count: 1000,\n          avg: 70,\n          sum: 15000\n        },\n        handleChange: ({\n          generateNextSQON\n        }) => update({\n          sqon: generateNextSQON(sqon)\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(BooleanAgg, {\n      field: \"cases__diagnoses__days_to_death\",\n      displayName: \"Diagnoses Days To Death\",\n      buckets: [{\n        key: '0',\n        doc_count: 2580,\n        key_as_string: 'false'\n      }, {\n        key: '1',\n        doc_count: 961,\n        key_as_string: 'true'\n      }] //handleChange={action(`Range Change`)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(State, {\n      initial: {\n        sqon: null\n      },\n      render: ({\n        sqon,\n        update\n      }) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"SQON: \", JSON.stringify(sqon)), React.createElement(\"div\", {\n        css: `\n              width: 300px;\n            `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, bolleanAggs.map(agg => React.createElement(BooleanAgg, Object.assign({\n        key: agg.field\n      }, agg, {\n        handleValueClick: ({\n          generateNextSQON\n        }) => update({\n          sqon: generateNextSQON(sqon)\n        }),\n        isActive: d => inCurrentSQON({\n          value: d.value,\n          dotField: d.field,\n          currentSQON: sqon\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }))))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(State, {\n      initial: {\n        index: '',\n        sqon: {}\n      },\n      render: ({\n        index,\n        update\n      }) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"index: \"), React.createElement(\"input\", {\n        // <-- could be a dropdown of available indices\n        value: index,\n        onChange: e => update({\n          index: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }), index && React.createElement(\"div\", {\n        css: `\n                width: 300px;\n              `,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(AggsPanel, {\n        aggs: aggs,\n        index: index,\n        debounceTime: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Aggs;","map":{"version":3,"sources":["/home/acanosa/React_arranger_template/src/containers/Aggs/Aggs.js"],"names":["React","DatesAgg","BooleanAgg","TermAgg","RangeAgg","AggsPanel","inCurrentSQON","currentFieldValue","Component","State","Aggs","render","bolleanAggs","field","displayName","active","type","allowedValues","restricted","buckets","key","doc_count","key_as_string","aggs","sqon","update","JSON","stringify","map","agg","generateNextSQON","d","value","dotField","currentSQON","min","max","state","setState","op","count","avg","sum","index","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  DatesAgg,\n  BooleanAgg,\n  TermAgg,\n  RangeAgg,\n  AggsPanel,\n} from '@arranger/components/dist/Aggs';\n\n//import { action } from '@storybook/addon-actions';\n\nimport { inCurrentSQON, currentFieldValue } from '@arranger/components/dist/SQONView/utils';\n\nimport Component from 'react-component-component';\n\nimport State from '@arranger/components/dist/State';\n\nimport './Aggs.css';\n\nclass Aggs extends Component {\n\n  render() {\n\n    const bolleanAggs = [\n        {\n          field: 'participants__is_proband',\n          displayName: 'Participants is proband',\n          active: false,\n          type: 'Aggregations',\n          allowedValues: [],\n          restricted: false,\n          buckets: [\n            {\n              key: '0',\n              doc_count: 2580,\n              key_as_string: 'false',\n            },\n            {\n              key: '1',\n              doc_count: 961,\n              key_as_string: 'true',\n            },\n          ],\n        },\n        {\n          field: 'sequencing_experiments__is_paired_end',\n          displayName: 'Is Paired Ende',\n          active: false,\n          type: 'Aggregations',\n          allowedValues: [],\n          restricted: false,\n          buckets: [\n            {\n              key: '0',\n              doc_count: 2580,\n              key_as_string: 'false',\n            },\n            {\n              key: '1',\n              doc_count: 961,\n              key_as_string: 'true',\n            },\n          ],\n        },\n        {\n          field: 'sequencing_experiments__is_paired_end_0',\n          displayName: 'Is Paired Ende',\n          active: false,\n          type: 'Aggregations',\n          allowedValues: [],\n          restricted: false,\n          buckets: [\n            {\n              key: '0',\n              doc_count: 0,\n              key_as_string: 'false',\n            },\n            {\n              key: '1',\n              doc_count: 961,\n              key_as_string: 'true',\n            },\n          ],\n        },\n        {\n          field: 'sequencing_experiments__is_paired_end_1',\n          displayName: 'Is Paired Ende',\n          active: false,\n          type: 'Aggregations',\n          allowedValues: [],\n          restricted: false,\n          buckets: [\n            {\n              key: '0',\n              doc_count: 2312,\n              key_as_string: 'false',\n            },\n            {\n              key: '1',\n              doc_count: 0,\n              key_as_string: 'true',\n            },\n          ],\n        },\n      ];\n      \n      let aggs = [\n        {\n          field: 'color',\n          displayName: 'Color',\n          active: false,\n          type: 'Aggregations',\n          allowedValues: [],\n          restricted: false,\n          buckets: [\n            {\n              doc_count: 1,\n              key: 'green',\n            },\n            {\n              doc_count: 5,\n              key: 'yellow',\n            },\n            {\n              doc_count: 12,\n              key: 'blue',\n            },\n          ],\n        },\n        {\n          field: 'taste',\n          displayName: 'Taste',\n          active: false,\n          type: 'Aggregations',\n          allowedValues: [],\n          restricted: false,\n          buckets: [\n            {\n              doc_count: 1,\n              key: 'spicy',\n            },\n            {\n              doc_count: 5,\n              key: 'sweet',\n            },\n            {\n              doc_count: 12,\n              key: 'sour',\n            },\n            {\n              doc_count: 5,\n              key: 'salty',\n            },\n            {\n              doc_count: 12,\n              key: 'umami',\n            },\n            {\n              doc_count: 12,\n              key: 'bland',\n            },\n          ],\n        },\n      ];\n\n    return (\n\n      <React.Fragment>\n        \n        <div>\n          <h3> \n            <strong> ARRANGER AGGS PAGE </strong>\n          </h3>\n        </div>\n        \n\n        <div className=\"term-agg-wrapper\">\n      <TermAgg\n        field=\"disease_type\"\n        displayName=\"Disease Type\"\n        buckets={[\n          {\n            doc_count: 2,\n            key: 'Acute Myeloid Leukemia',\n          },\n          {\n            doc_count: 10,\n            key: 'Acinar cell neoplasms',\n          },\n        ]}\n        //handleValueClick={action('Term Agg Selection')}\n      />\n    </div>\n\n    <div className=\"term-agg-wrapper\">\n      <TermAgg\n        field=\"disease_type\"\n        displayName=\"Disease Type\"\n        buckets={[\n          {\n            doc_count: 2,\n            key: 'Acute Myeloid Leukemia',\n          },\n          {\n            doc_count: 10,\n            key: 'Acinar cell neoplasms',\n          },\n        ]}\n        headerTitle=\"# files\"\n      />\n    </div>\n\n    <State\n      initial={{ sqon: null }}\n      render={({ sqon, update }) => (\n        <div>\n          <div>SQON: {JSON.stringify(sqon)}</div>\n          <div\n            css={`\n              width: 300px;\n            `}\n          >\n            {aggs.map(agg => (\n              // TODO: switch on agg type\n              <TermAgg\n                key={agg.field}\n                {...agg}\n                handleValueClick={({ generateNextSQON }) =>\n                  update({ sqon: generateNextSQON(sqon) })\n                }\n                isActive={d =>\n                  inCurrentSQON({\n                    value: d.value,\n                    dotField: d.field,\n                    currentSQON: sqon,\n                  })\n                }\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    />\n\n    <div className=\"term-agg-wrapper\">\n      <DatesAgg\n        field=\"disease_type\"\n        displayName=\"Disease Type\"\n        stats={{\n          // expects linux timestamp\n          min: 1529539200125,\n          max: 1529539259913,\n        }}\n        //handleValueClick={action('Term Agg Selection')}\n      />\n    </div>\n\n    <Component initialState={{ sqon: null }}>\n      {({ state: { sqon }, setState }) => (\n        <div>\n          <div>SQON: {JSON.stringify(sqon)}</div>\n          <div>\n            <DatesAgg\n              field=\"disease_type\"\n              displayName=\"Disease Type\"\n              stats={{\n                min: 1529539200125,\n                max: 1529539259913,\n              }}\n              handleDateChange={({ generateNextSQON = () => {} } = {}) =>\n                setState({ sqon: generateNextSQON(sqon) })\n              }\n              getActiveValue={({ op, field }) =>\n                currentFieldValue({\n                  op,\n                  dotField: field,\n                  sqon,\n                })\n              }\n            />\n          </div>\n        </div>\n      )}\n    </Component>\n\n\n\n    <RangeAgg\n      field=\"cases__diagnoses__days_to_death\"\n      displayName=\"Diagnoses Days To Death\"\n      stats={{\n        min: 15,\n        max: 820,\n        count: 1000,\n        avg: 70,\n        sum: 15000,\n      }}\n      //handleChange={action(`Range Change`)}\n    />\n\n    <State\n      initial={{ sqon: null }}\n      render={({ sqon, update }) => (\n        <div className=\"range with sqon\">\n          <div>SQON: {JSON.stringify(sqon)}</div>\n          <RangeAgg\n            field=\"cases__diagnoses__days_to_death\"\n            displayName=\"Diagnoses Days To Death\"\n            unit={'d'}\n            stats={{\n              min: 15,\n              max: 820,\n              count: 1000,\n              avg: 70,\n              sum: 15000,\n            }}\n            handleChange={({ generateNextSQON }) =>\n              update({ sqon: generateNextSQON(sqon) })\n            }\n          />\n        </div>\n      )}\n    />\n\n    <BooleanAgg\n      field=\"cases__diagnoses__days_to_death\"\n      displayName=\"Diagnoses Days To Death\"\n      buckets={[\n        {\n          key: '0',\n          doc_count: 2580,\n          key_as_string: 'false',\n        },\n        {\n          key: '1',\n          doc_count: 961,\n          key_as_string: 'true',\n        },\n      ]}\n      //handleChange={action(`Range Change`)}\n    />\n\n    <State\n      initial={{ sqon: null }}\n      render={({ sqon, update }) => (\n        <div>\n          <div>SQON: {JSON.stringify(sqon)}</div>\n          <div\n            css={`\n              width: 300px;\n            `}\n          >\n            {bolleanAggs.map(agg => (\n              <BooleanAgg\n                key={agg.field}\n                {...agg}\n                handleValueClick={({ generateNextSQON }) =>\n                  update({ sqon: generateNextSQON(sqon) })\n                }\n                isActive={d =>\n                  inCurrentSQON({\n                    value: d.value,\n                    dotField: d.field,\n                    currentSQON: sqon,\n                  })\n                }\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    />\n\n    <State\n      initial={{ index: '', sqon: {} }}\n      render={({ index, update }) => (\n        <div>\n          <label>index: </label>\n          <input // <-- could be a dropdown of available indices\n            value={index}\n            onChange={e => update({ index: e.target.value })}\n          />\n          {index && (\n            <div\n              css={`\n                width: 300px;\n              `}\n            >\n              <AggsPanel aggs={aggs} index={index} debounceTime={200} />\n            </div>\n          )}\n        </div>\n      )}\n    />\n\n      </React.Fragment>\n\n    )\n  }\n}\n\nexport default Aggs;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}