{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.getAlwaysAddHeaders = exports.addHeaders = exports.fetchExtendedMapping = exports.graphql = void 0;\n\nvar _config = require(\"./config\");\n\nvar _urlJoin = _interopRequireDefault(require(\"url-join\"));\n\nvar _download = require(\"./download\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar alwaysSendHeaders = {\n  'Content-Type': 'application/json'\n};\n\nvar defaultApi = function defaultApi(_ref) {\n  var _ref$endpoint = _ref.endpoint,\n      endpoint = _ref$endpoint === void 0 ? '' : _ref$endpoint,\n      body = _ref.body,\n      headers = _ref.headers,\n      method = _ref.method;\n  return fetch((0, _urlJoin.default)(_config.ARRANGER_API, endpoint), {\n    method: method || 'POST',\n    headers: _objectSpread({}, alwaysSendHeaders, {}, headers),\n    body: JSON.stringify(body)\n  }).then(function (r) {\n    return r.json();\n  });\n};\n\nvar graphql = function graphql(body) {\n  return api({\n    endpoint: 'graphql',\n    body: body\n  });\n};\n\nexports.graphql = graphql;\n\nvar fetchExtendedMapping = function fetchExtendedMapping(_ref2) {\n  var graphqlField = _ref2.graphqlField,\n      projectId = _ref2.projectId,\n      _ref2$api = _ref2.api,\n      api = _ref2$api === void 0 ? defaultApi : _ref2$api;\n  return api({\n    endpoint: \"/\".concat(projectId, \"/graphql\"),\n    body: {\n      query: \"\\n        {\\n          \".concat(graphqlField, \"{\\n            extended\\n          }\\n        }\\n      \")\n    }\n  }).then(function (response) {\n    return {\n      extendedMapping: response.data[graphqlField].extended\n    };\n  });\n};\n\nexports.fetchExtendedMapping = fetchExtendedMapping;\n\nvar addHeaders = function addHeaders(headers) {\n  alwaysSendHeaders = _objectSpread({}, alwaysSendHeaders, {}, headers);\n  (0, _download.addDownloadHttpHeaders)(headers);\n};\n\nexports.addHeaders = addHeaders;\n\nvar getAlwaysAddHeaders = function getAlwaysAddHeaders() {\n  return alwaysSendHeaders;\n};\n\nexports.getAlwaysAddHeaders = getAlwaysAddHeaders;\nvar _default = defaultApi;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}