{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/acanosa/React_arranger_template/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _lodash = require(\"lodash\");\n\nvar _api = _interopRequireDefault(require(\"../utils/api\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar columnFields = \"\\n  state {\\n    type\\n    keyField\\n    defaultSorted {\\n      id\\n      desc\\n    }\\n    columns {\\n      field\\n      accessor\\n      show\\n      type\\n      sortable\\n      canChangeShow\\n      query\\n      jsonPath\\n    }\\n  }\\n\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchColumnsState\", (0, _lodash.debounce)(\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var graphqlField, _this$props$api, api, _ref3, data, config, _ref4, extended;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                graphqlField = _ref.graphqlField;\n                _this$props$api = _this.props.api, api = _this$props$api === void 0 ? _api[\"default\"] : _this$props$api;\n                _context.prev = 2;\n                _context.next = 5;\n                return api({\n                  endpoint: \"/\".concat(_this.props.projectId, \"/graphql/columnsStateQuery\"),\n                  body: {\n                    query: \"query columnsStateQuery\\n            {\\n              \".concat(graphqlField, \" {\\n                columnsState {\\n                  \").concat(columnFields, \"\\n                }\\n              }\\n            }\\n          \")\n                  }\n                });\n\n              case 5:\n                _ref3 = _context.sent;\n                data = _ref3.data;\n                config = data[graphqlField].columnsState.state;\n                _context.next = 10;\n                return api({\n                  endpoint: \"/\".concat(_this.props.projectId, \"/graphql\"),\n                  body: {\n                    query: \"\\n          query{\\n            \".concat(_this.props.graphqlField, \" {\\n              extended\\n            }\\n          }\\n        \")\n                  }\n                });\n\n              case 10:\n                _ref4 = _context.sent;\n                extended = _ref4.data[_this.props.graphqlField].extended;\n\n                _this.setState({\n                  extended: extended,\n                  config: config\n                });\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](2);\n                console.warn(_context.t0);\n              // this.setState({ })\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), 300));\n\n    _defineProperty(_assertThisInitialized(_this), \"save\", (0, _lodash.debounce)(\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var _this$props$api2, api, _ref6, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props$api2 = _this.props.api, api = _this$props$api2 === void 0 ? _api[\"default\"] : _this$props$api2;\n                _context2.next = 3;\n                return api({\n                  endpoint: \"/\".concat(_this.props.projectId, \"/graphql\"),\n                  body: {\n                    variables: {\n                      state: state\n                    },\n                    query: \"\\n        mutation($state: JSON!) {\\n          saveColumnsState(\\n            state: $state\\n            graphqlField: \\\"\".concat(_this.props.graphqlField, \"\\\"\\n          ) {\\n            \").concat(columnFields, \"\\n          }\\n        }\\n      \")\n                  }\n                });\n\n              case 3:\n                _ref6 = _context2.sent;\n                data = _ref6.data;\n\n                _this.setState({\n                  config: data.saveColumnsState.state\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }(), 300));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (_ref7) {\n      var field = _ref7.field,\n          key = _ref7.key,\n          value = _ref7.value;\n\n      var index = _this.state.config.columns.findIndex(function (x) {\n        return x.field === field;\n      });\n\n      var column = _this.state.config.columns[index];\n\n      var temp = _objectSpread({}, _this.state.config, {\n        columns: Object.assign([], _this.state.config.columns, _defineProperty({}, index, _objectSpread({}, column, _defineProperty({}, key, value))))\n      });\n\n      _this.setState({\n        temp: temp\n      }, function () {\n        return _this.save(temp);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"add\", function (column) {\n      var id = column.id;\n\n      var existing = _this.state.config.columns.find(function (x) {\n        return x.id === id;\n      });\n\n      if (existing) return;\n\n      var temp = _objectSpread({}, _this.state.config, {\n        columns: [].concat(_toConsumableArray(_this.state.config.columns), [column])\n      });\n\n      _this.setState({\n        temp: temp\n      }, function () {\n        return _this.save(temp);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function (_ref8) {\n      var field = _ref8.field,\n          show = _ref8.show;\n\n      _this.setState({\n        toggled: _objectSpread({}, _this.state.toggled, _defineProperty({}, field, show))\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveOrder\", function (orderedFields) {\n      var columns = _this.state.config.columns;\n\n      if (orderedFields.every(function (field) {\n        return columns.find(function (column) {\n          return column.field === field;\n        });\n      }) && columns.every(function (column) {\n        return orderedFields.find(function (field) {\n          return field === column.field;\n        });\n      })) {\n        _this.save(_objectSpread({}, _this.state.config, {\n          columns: (0, _lodash.sortBy)(columns, function (_ref9) {\n            var field = _ref9.field;\n            return orderedFields.indexOf(field);\n          })\n        }));\n      } else {\n        console.warn('provided orderedFields are not clean: ', orderedFields);\n      }\n    });\n\n    _this.state = {\n      config: null,\n      extended: [],\n      toggled: {}\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.fetchColumnsState(this.props);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (this.props.graphqlField !== next.graphqlField) {\n        this.fetchColumnsState(next);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          config = _this$state.config,\n          extended = _this$state.extended,\n          toggled = _this$state.toggled;\n      return config ? this.props.render({\n        loading: false,\n        update: this.update,\n        add: this.add,\n        toggle: this.toggle,\n        saveOrder: this.saveOrder,\n        state: _objectSpread({}, config, {\n          columns: config.columns.map(function (column) {\n            var extendedField = extended.find(function (e) {\n              return e.field === column.field;\n            });\n            return _objectSpread({}, column, {\n              Header: (extendedField === null || extendedField === void 0 ? void 0 : extendedField.displayName) || column.field,\n              extendedType: extendedField === null || extendedField === void 0 ? void 0 : extendedField.type,\n              show: column.field in toggled ? toggled[column.field] : column.show,\n              extendedDisplayValues: extendedField === null || extendedField === void 0 ? void 0 : extendedField.displayValues\n            });\n          })\n        })\n      }) : this.props.render({\n        loading: true,\n        state: {\n          config: null\n        }\n      });\n    }\n  }]);\n\n  return _default;\n}(_react.Component);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}