{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lodash = require(\"lodash\");\n\nvar _mappingToNestedFields = _interopRequireDefault(require(\"./mappingToNestedFields\"));\n\nvar _mappingToScalarFields = _interopRequireDefault(require(\"./mappingToScalarFields\"));\n\nvar _createConnectionTypeDefs = _interopRequireDefault(require(\"./createConnectionTypeDefs\"));\n\nvar _mappingToObjectTypes = _interopRequireDefault(require(\"./mappingToObjectTypes\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar mappingToFields = function mappingToFields(_ref) {\n  var type = _ref.type,\n      parent = _ref.parent;\n  return [(0, _mappingToObjectTypes[\"default\"])(type.name, type.mapping, parent, type.extendedFields), Object.entries(type.mapping).filter(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        metadata = _ref3[1];\n\n    return metadata.type === 'nested';\n  }).map(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        field = _ref5[0],\n        metadata = _ref5[1];\n\n    return mappingToFields({\n      parent: [parent, field].filter(Boolean).join('.'),\n      type: _objectSpread({}, type, {\n        name: type.name + (0, _lodash.capitalize)(field),\n        mapping: metadata.properties\n      })\n    });\n  }), (0, _createConnectionTypeDefs[\"default\"])({\n    type: type,\n    fields: [(0, _mappingToScalarFields[\"default\"])(type.mapping, type.extendedFields, parent), (0, _mappingToNestedFields[\"default\"])(type.name, type.mapping, parent, type.extendedFields), type.customFields],\n    createStateTypeDefs: 'createState' in type ? type.createState : true\n  })].join();\n};\n\nvar _default = mappingToFields;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}