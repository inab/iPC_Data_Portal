{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.TermFilterUI = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactComponentComponent = _interopRequireDefault(require(\"react-component-component\"));\n\nvar _lodash = require(\"lodash\");\n\nrequire(\"./FilterContainerStyle.css\");\n\nvar _common = require(\"./common\");\n\nvar _utils = require(\"../utils\");\n\nvar _TermAgg = _interopRequireDefault(require(\"../../Aggs/TermAgg\"));\n\nvar _TextFilter = _interopRequireDefault(require(\"../../TextFilter\"));\n\nvar _utils2 = require(\"../../SQONView/utils\");\n\nvar _api = _interopRequireDefault(require(\"../../utils/api\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _Query = _interopRequireDefault(require(\"../../Query\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar AggsWrapper = function AggsWrapper(_ref) {\n  var children = _ref.children;\n  return _react[\"default\"].createElement(\"div\", {\n    className: \"aggregation-card\"\n  }, children);\n};\n\nvar filterStringsCaseInsensitive = function filterStringsCaseInsensitive(values, searchString) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return values.filter(function (val) {\n    var valText = path ? (0, _lodash.get)(val, path) : val;\n    return -1 !== valText.search(new RegExp(searchString, 'i'));\n  });\n};\n\nvar TermFilterUI = function TermFilterUI(props) {\n  var _props$initialSqon = props.initialSqon,\n      initialSqon = _props$initialSqon === void 0 ? null : _props$initialSqon,\n      _props$onSubmit = props.onSubmit,\n      onSubmit = _props$onSubmit === void 0 ? function (sqon) {} : _props$onSubmit,\n      _props$onCancel = props.onCancel,\n      onCancel = _props$onCancel === void 0 ? function () {} : _props$onCancel,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? _common.FilterContainer : _props$ContainerCompo,\n      _props$InputComponent = props.InputComponent,\n      InputComponent = _props$InputComponent === void 0 ? _TextFilter[\"default\"] : _props$InputComponent,\n      _props$sqonPath = props.sqonPath,\n      sqonPath = _props$sqonPath === void 0 ? [] : _props$sqonPath,\n      buckets = props.buckets,\n      _props$fieldDisplayNa = props.fieldDisplayNameMap,\n      fieldDisplayNameMap = _props$fieldDisplayNa === void 0 ? {} : _props$fieldDisplayNa,\n      _props$opDisplayNameM = props.opDisplayNameMap,\n      opDisplayNameMap = _props$opDisplayNameM === void 0 ? _utils.FIELD_OP_DISPLAY_NAME : _props$opDisplayNameM,\n      field = props.field;\n  var initialFieldSqon = (0, _utils.getOperationAtPath)(sqonPath)(initialSqon) || {\n    op: _utils.IN_OP,\n    content: {\n      value: [],\n      field: field\n    }\n  };\n  var initialState = {\n    searchString: '',\n    localSqon: initialSqon\n  };\n\n  var onSearchChange = function onSearchChange(s) {\n    return function (e) {\n      s.setState({\n        searchString: e.value\n      });\n    };\n  };\n\n  var isFilterActive = function isFilterActive(s) {\n    return function (d) {\n      return (0, _utils2.inCurrentSQON)({\n        value: d.value,\n        dotField: d.field,\n        currentSQON: (0, _utils.getOperationAtPath)(sqonPath)(s.state.localSqon)\n      });\n    };\n  };\n\n  var getCurrentFieldOp = function getCurrentFieldOp(s) {\n    return (0, _utils.getOperationAtPath)(sqonPath)(s.state.localSqon);\n  };\n\n  var onSqonSubmit = function onSqonSubmit(s) {\n    return function () {\n      return onSubmit(s.state.localSqon);\n    };\n  };\n\n  var computeBuckets = function computeBuckets(s, buckets) {\n    return (0, _lodash.sortBy)(filterStringsCaseInsensitive(buckets, s.state.searchString, 'key'), function (bucket) {\n      return !(0, _utils2.inCurrentSQON)({\n        value: bucket.key,\n        dotField: initialFieldSqon.content.field,\n        currentSQON: (0, _utils.getOperationAtPath)(sqonPath)(initialSqon)\n      });\n    });\n  };\n\n  var onOptionTypeChange = function onOptionTypeChange(s) {\n    return function (e) {\n      var currentFieldSqon = getCurrentFieldOp(s);\n      s.setState({\n        localSqon: (0, _utils.setSqonAtPath)(sqonPath, _objectSpread({}, currentFieldSqon, {\n          op: e.target.value\n        }))(s.state.localSqon)\n      });\n    };\n  };\n\n  var onSelectAllClick = function onSelectAllClick(s) {\n    return function () {\n      var currentFieldSqon = getCurrentFieldOp(s);\n      s.setState({\n        localSqon: (0, _utils.setSqonAtPath)(sqonPath, _objectSpread({}, currentFieldSqon, {\n          content: _objectSpread({}, currentFieldSqon.content, {\n            value: filterStringsCaseInsensitive(buckets.map(function (_ref2) {\n              var key = _ref2.key;\n              return key;\n            }), s.state.searchString)\n          })\n        }))(s.state.localSqon)\n      });\n    };\n  };\n\n  var onClearClick = function onClearClick(s) {\n    return function () {\n      var currentFieldSqon = getCurrentFieldOp(s);\n      s.setState({\n        localSqon: (0, _utils.setSqonAtPath)(sqonPath, _objectSpread({}, currentFieldSqon, {\n          content: _objectSpread({}, currentFieldSqon.content, {\n            value: []\n          })\n        }))(s.state.localSqon)\n      });\n    };\n  };\n\n  var onFilterClick = function onFilterClick(s) {\n    return function (_ref3) {\n      var generateNextSQON = _ref3.generateNextSQON;\n      setTimeout(function () {\n        // state change in the same tick somehow results in this component dismounting (probably  something to do with TermAgg's click event, needs investigation)\n        var deltaSqon = generateNextSQON();\n        var deltaFiterObjContentValue = deltaSqon.content[0].content.value; // we're only interested in the new field operation's content value\n\n        var currentFieldSqon = getCurrentFieldOp(s);\n        var existingValue = (currentFieldSqon.content.value || []).find(function (v) {\n          return deltaFiterObjContentValue.includes(v);\n        });\n\n        var newFieldSqon = _objectSpread({}, currentFieldSqon, {\n          content: _objectSpread({}, currentFieldSqon.content, {\n            value: [].concat(_toConsumableArray((currentFieldSqon.content.value || []).filter(function (v) {\n              return v !== existingValue;\n            })), _toConsumableArray(existingValue ? [] : deltaFiterObjContentValue))\n          })\n        });\n\n        s.setState({\n          localSqon: (0, _utils.setSqonAtPath)(sqonPath, newFieldSqon)(s.state.localSqon)\n        });\n      }, 0);\n    };\n  };\n\n  return _react[\"default\"].createElement(_reactComponentComponent[\"default\"], {\n    initialState: initialState\n  }, function (s) {\n    return _react[\"default\"].createElement(ContainerComponent, {\n      onSubmit: onSqonSubmit(s),\n      onCancel: onCancel\n    }, _react[\"default\"].createElement(\"div\", {\n      className: \"contentSection\"\n    }, _react[\"default\"].createElement(\"span\", null, fieldDisplayNameMap[initialFieldSqon.content.field] || initialFieldSqon.content.field), ' ', \"is\", ' ', _react[\"default\"].createElement(\"span\", {\n      className: \"select\"\n    }, _react[\"default\"].createElement(\"select\", {\n      onChange: onOptionTypeChange(s),\n      value: getCurrentFieldOp(s).op\n    }, _utils.TERM_OPS.map(function (option) {\n      return _react[\"default\"].createElement(\"option\", {\n        key: option,\n        value: option\n      }, opDisplayNameMap[option]);\n    })))), _react[\"default\"].createElement(\"div\", {\n      className: \"contentSection searchInputContainer\"\n    }, _react[\"default\"].createElement(InputComponent, {\n      value: s.state.searchString,\n      onChange: onSearchChange(s)\n    })), _react[\"default\"].createElement(\"div\", {\n      className: \"contentSection termFilterActionContainer\"\n    }, _react[\"default\"].createElement(\"span\", {\n      className: \"aggsFilterAction selectAll\",\n      onClick: onSelectAllClick(s)\n    }, \"Select All\"), _react[\"default\"].createElement(\"span\", {\n      className: \"aggsFilterAction clear\",\n      onClick: onClearClick(s)\n    }, \"Clear\")), _react[\"default\"].createElement(\"div\", {\n      className: \"contentSection termAggContainer\"\n    }, _react[\"default\"].createElement(_TermAgg[\"default\"], {\n      WrapperComponent: AggsWrapper,\n      field: initialFieldSqon.content.field,\n      displayName: \"Disease Type\",\n      buckets: computeBuckets(s, buckets),\n      handleValueClick: onFilterClick(s),\n      isActive: isFilterActive(s),\n      maxTerms: 5\n    })));\n  });\n};\n\nexports.TermFilterUI = TermFilterUI;\n\nvar _default = function _default(props) {\n  var field = props.field,\n      _props$arrangerProjec = props.arrangerProjectId,\n      arrangerProjectId = _props$arrangerProjec === void 0 ? _config.PROJECT_ID : _props$arrangerProjec,\n      arrangerProjectIndex = props.arrangerProjectIndex,\n      _props$api = props.api,\n      api = _props$api === void 0 ? _api[\"default\"] : _props$api,\n      _props$executableSqon = props.executableSqon,\n      executableSqon = _props$executableSqon === void 0 ? {\n    op: _utils.AND_OP,\n    content: []\n  } : _props$executableSqon,\n      _props$initialSqon2 = props.initialSqon,\n      initialSqon = _props$initialSqon2 === void 0 ? null : _props$initialSqon2,\n      _props$onSubmit2 = props.onSubmit,\n      onSubmit = _props$onSubmit2 === void 0 ? function (sqon) {} : _props$onSubmit2,\n      _props$onCancel2 = props.onCancel,\n      onCancel = _props$onCancel2 === void 0 ? function () {} : _props$onCancel2,\n      _props$ContainerCompo2 = props.ContainerComponent,\n      _ContainerComponent = _props$ContainerCompo2 === void 0 ? _common.FilterContainer : _props$ContainerCompo2,\n      _props$InputComponent2 = props.InputComponent,\n      InputComponent = _props$InputComponent2 === void 0 ? _TextFilter[\"default\"] : _props$InputComponent2,\n      _props$sqonPath2 = props.sqonPath,\n      sqonPath = _props$sqonPath2 === void 0 ? [] : _props$sqonPath2,\n      _props$fieldDisplayNa2 = props.fieldDisplayNameMap,\n      fieldDisplayNameMap = _props$fieldDisplayNa2 === void 0 ? {} : _props$fieldDisplayNa2,\n      _props$opDisplayNameM2 = props.opDisplayNameMap,\n      opDisplayNameMap = _props$opDisplayNameM2 === void 0 ? _utils.FIELD_OP_DISPLAY_NAME : _props$opDisplayNameM2;\n\n  var gqlField = field.split('.').join('__');\n  var query = \"query($sqon: JSON){\\n    \".concat(arrangerProjectIndex, \" {\\n      aggregations(filters: $sqon) {\\n        \").concat(gqlField, \" {\\n          buckets {\\n            key\\n            doc_count\\n          }\\n        }\\n      }\\n    }\\n  }\");\n  return _react[\"default\"].createElement(_Query[\"default\"], {\n    variables: {\n      sqon: executableSqon\n    },\n    projectId: arrangerProjectId,\n    api: api,\n    query: query,\n    render: function render(_ref4) {\n      var data = _ref4.data,\n          loading = _ref4.loading,\n          error = _ref4.error;\n      return _react[\"default\"].createElement(TermFilterUI, {\n        ContainerComponent: function ContainerComponent(_ref5) {\n          var children = _ref5.children,\n              props = _objectWithoutProperties(_ref5, [\"children\"]);\n\n          return _react[\"default\"].createElement(_ContainerComponent, _extends({}, props, {\n            loading: loading\n          }), children);\n        },\n        field: field,\n        initialSqon: initialSqon,\n        onSubmit: onSubmit,\n        onCancel: onCancel,\n        InputComponent: InputComponent,\n        sqonPath: sqonPath,\n        fieldDisplayNameMap: fieldDisplayNameMap,\n        opDisplayNameMap: opDisplayNameMap,\n        buckets: data ? (0, _lodash.get)(data, \"\".concat(arrangerProjectIndex, \".aggregations.\").concat(gqlField, \".buckets\")) : []\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}