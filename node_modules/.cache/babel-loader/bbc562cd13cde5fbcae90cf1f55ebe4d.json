{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _Query = _interopRequireDefault(require(\"../Query\"));\n\nvar _api = _interopRequireDefault(require(\"../utils/api\"));\n\nvar _AggsState = require(\"./AggsState\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _default = function _default(_ref) {\n  var _ref$index = _ref.index,\n      index = _ref$index === void 0 ? '' : _ref$index,\n      _ref$aggs = _ref.aggs,\n      aggs = _ref$aggs === void 0 ? [] : _ref$aggs,\n      _ref$sqon = _ref.sqon,\n      sqon = _ref$sqon === void 0 ? null : _ref$sqon,\n      _ref$api = _ref.api,\n      api = _ref$api === void 0 ? _api.default : _ref$api,\n      props = _objectWithoutProperties(_ref, [\"index\", \"aggs\", \"sqon\", \"api\"]);\n\n  return !index || !aggs.length ? '' : _react.default.createElement(_Query.default, _extends({\n    renderError: true,\n    name: \"\".concat((0, _lodash.capitalize)(index), \"AggregationsQuery\"),\n    variables: {\n      fields: aggs.map(function (x) {\n        return x.field.replace(/__/g, '.');\n      }),\n      sqon: sqon\n    },\n    query: \"\\n        query \".concat((0, _lodash.capitalize)(index), \"AggregationsQuery(\\n          $fields: [String]\\n          $sqon: JSON\\n        ) {\\n          \").concat(index, \" {\\n            extended(fields: $fields)\\n            aggregations (\\n              aggregations_filter_themselves: false\\n              filters: $sqon\\n            ){\\n              \").concat(aggs.map(function (x) {\n      return x.query || (0, _AggsState.queryFromAgg)(x);\n    }), \"\\n            }\\n          }\\n        }\\n      \")\n  }, _objectSpread({\n    api: api\n  }, props)));\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}