{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactComponentComponent = _interopRequireDefault(require(\"react-component-component\"));\n\nvar _chevronDown = _interopRequireDefault(require(\"react-icons/lib/fa/chevron-down\"));\n\nvar _chevronUp = _interopRequireDefault(require(\"react-icons/lib/fa/chevron-up\"));\n\nvar _utils = require(\"../utils\");\n\nvar _FieldOp = _interopRequireDefault(require(\"./FieldOp\"));\n\nvar _ClickAwayListener = _interopRequireDefault(require(\"../../utils/ClickAwayListener.js\"));\n\nvar _common = require(\"./common\");\n\nvar _config = require(\"../../utils/config\");\n\nvar _api = _interopRequireDefault(require(\"../../utils/api\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar SqonReference = function SqonReference(props) {\n  var refIndex = props.refIndex,\n      _props$onRemoveClick = props.onRemoveClick,\n      onRemoveClick = _props$onRemoveClick === void 0 ? function () {} : _props$onRemoveClick,\n      highlightColor = props.highlightColor,\n      isHighlighted = props.isHighlighted;\n  return _react.default.createElement(\"span\", {\n    className: \"sqonReference pill\"\n  }, _react.default.createElement(\"span\", {\n    className: 'content sqonReferenceIndex',\n    style: !isHighlighted ? {} : {\n      background: highlightColor\n    }\n  }, \"#\", refIndex + 1), _react.default.createElement(_common.PillRemoveButton, {\n    onClick: onRemoveClick\n  }));\n};\n\nvar LogicalOpSelector = function LogicalOpSelector(props) {\n  var opName = props.opName,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function (newOpName) {} : _props$onChange;\n  var initialState = {\n    isOpen: false\n  };\n  var selectionOptions = ['and', 'or'];\n\n  var onClickAway = function onClickAway(s) {\n    return function () {\n      s.setState({\n        isOpen: false\n      });\n    };\n  };\n\n  var onClick = function onClick(s) {\n    return function () {\n      return s.setState({\n        isOpen: !s.state.isOpen\n      });\n    };\n  };\n\n  var onselect = function onselect(option) {\n    return function () {\n      return onChange(option);\n    };\n  };\n\n  return _react.default.createElement(_reactComponentComponent.default, {\n    initialState: initialState\n  }, function (s) {\n    return _react.default.createElement(_ClickAwayListener.default, {\n      handler: onClickAway(s)\n    }, _react.default.createElement(\"span\", {\n      className: \"pill logicalOpSelector\",\n      role: \"button\",\n      tabIndex: 0,\n      onClick: onClick(s),\n      onKeyPress: onClick(s)\n    }, _react.default.createElement(\"span\", {\n      className: 'content',\n      style: {\n        pointerEvents: 'none'\n      }\n    }, _react.default.createElement(\"span\", {\n      className: 'opName'\n    }, opName), ' ', s.state.isOpen ? _react.default.createElement(_chevronUp.default, null) : _react.default.createElement(_chevronDown.default, null)), s.state.isOpen && _react.default.createElement(\"div\", {\n      className: \"menuContainer\"\n    }, selectionOptions.map(function (option) {\n      return _react.default.createElement(\"div\", {\n        key: option,\n        className: \"menuOption\",\n        onClick: onselect(option),\n        onKeyPress: onselect(option)\n      }, option);\n    }))));\n  });\n};\n/**\n * BooleanOp handles nested sqons through recursive rendering.\n * This will be useful for supporting brackets later.\n */\n\n\nvar BooleanOp = function BooleanOp(props) {\n  var _props$arrangerProjec = props.arrangerProjectId,\n      arrangerProjectId = _props$arrangerProjec === void 0 ? _config.PROJECT_ID : _props$arrangerProjec,\n      arrangerProjectIndex = props.arrangerProjectIndex,\n      _props$contentPath = props.contentPath,\n      contentPath = _props$contentPath === void 0 ? [] : _props$contentPath,\n      _props$onFieldOpRemov = props.onFieldOpRemove,\n      onFieldOpRemove = _props$onFieldOpRemov === void 0 ? function (path) {} : _props$onFieldOpRemov,\n      _props$onChange2 = props.onChange,\n      onChange = _props$onChange2 === void 0 ? function (changedPath, newOp) {} : _props$onChange2,\n      sqon = props.sqon,\n      _props$fullSyntheticS = props.fullSyntheticSqon,\n      fullSyntheticSqon = _props$fullSyntheticS === void 0 ? sqon : _props$fullSyntheticS,\n      _props$FieldOpModifie = props.FieldOpModifierContainer,\n      FieldOpModifierContainer = _props$FieldOpModifie === void 0 ? undefined : _props$FieldOpModifie,\n      _props$api = props.api,\n      api = _props$api === void 0 ? _api.default : _props$api,\n      getActiveExecutableSqon = props.getActiveExecutableSqon,\n      _props$getColorForRef = props.getColorForReference,\n      getColorForReference = _props$getColorForRef === void 0 ? function () {\n    return '';\n  } : _props$getColorForRef,\n      _props$isIndexReferen = props.isIndexReferenced,\n      isIndexReferenced = _props$isIndexReferen === void 0 ? function () {\n    return false;\n  } : _props$isIndexReferen,\n      _props$referencesShou = props.referencesShouldHighlight,\n      referencesShouldHighlight = _props$referencesShou === void 0 ? false : _props$referencesShou;\n  var op = sqon.op,\n      content = sqon.content;\n\n  var onOpChange = function onOpChange(newOpName) {\n    return onChange(contentPath, {\n      op: newOpName,\n      content: content\n    });\n  };\n\n  var onNewSqonSubmit = function onNewSqonSubmit(newSqon) {\n    return onChange([], newSqon);\n  }; // FieldOp dispatches a full sqon on change\n\n\n  var onRemove = function onRemove(path) {\n    return function () {\n      return onFieldOpRemove(path);\n    };\n  };\n\n  return _react.default.createElement(\"span\", {\n    className: \"booleanOp\"\n  }, content.map(function (c, i) {\n    var currentPath = [].concat(_toConsumableArray(contentPath), [i]);\n    return _react.default.createElement(\"span\", {\n      key: i\n    }, (0, _utils.isBooleanOp)(c) ? _react.default.createElement(\"span\", null, _react.default.createElement(\"span\", {\n      className: \"nestedOpBracket\"\n    }, \"(\"), _react.default.createElement(BooleanOp, _extends({}, props, {\n      sqon: c,\n      fullSyntheticSqon: fullSyntheticSqon,\n      contentPath: currentPath\n    })), _react.default.createElement(\"span\", {\n      className: \"nestedOpBracket\"\n    }, \")\")) : (0, _utils.isFieldOp)(c) ? _react.default.createElement(\"span\", null, _react.default.createElement(_FieldOp.default, {\n      arrangerProjectId: arrangerProjectId,\n      arrangerProjectIndex: arrangerProjectIndex,\n      sqonPath: currentPath,\n      fullSyntheticSqon: fullSyntheticSqon,\n      onContentRemove: onRemove(currentPath),\n      onSqonChange: onNewSqonSubmit,\n      FieldOpModifierContainer: FieldOpModifierContainer,\n      api: api,\n      getActiveExecutableSqon: getActiveExecutableSqon\n    })) : (0, _utils.isReference)(c) ? _react.default.createElement(SqonReference, {\n      refIndex: c,\n      onRemoveClick: onRemove(currentPath),\n      highlightColor: getColorForReference(c),\n      isHighlighted: referencesShouldHighlight && isIndexReferenced(c)\n    }) : (0, _utils.isEmptySqon)(c) ? _react.default.createElement(\"span\", null, \"empty sqon is not yet supported here\") : null, i < content.length - 1 && _react.default.createElement(LogicalOpSelector, {\n      opName: op,\n      onChange: onOpChange\n    }));\n  }));\n};\n\nvar _default = BooleanOp;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}