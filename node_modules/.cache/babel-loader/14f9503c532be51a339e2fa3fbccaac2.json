{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AggsWrapper\", {\n  enumerable: true,\n  get: function get() {\n    return _Aggs.AggsWrapper;\n  }\n});\nexports.default = exports.AggregationsList = exports.AggregationsListDisplay = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _Aggs = require(\"../Aggs\");\n\nvar _aggComponentsMap = _interopRequireDefault(require(\"../Aggs/aggComponentsMap.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar BaseWrapper = function BaseWrapper(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return _react.default.createElement(\"div\", _extends({}, props, {\n    className: \"aggregations \".concat(className)\n  }));\n};\n\nvar AggregationsListDisplay = function AggregationsListDisplay(_ref2) {\n  var data = _ref2.data,\n      _ref2$onValueChange = _ref2.onValueChange,\n      _onValueChange = _ref2$onValueChange === void 0 ? function () {} : _ref2$onValueChange,\n      aggs = _ref2.aggs,\n      graphqlField = _ref2.graphqlField,\n      setSQON = _ref2.setSQON,\n      sqon = _ref2.sqon,\n      containerRef = _ref2.containerRef,\n      _ref2$componentProps = _ref2.componentProps,\n      componentProps = _ref2$componentProps === void 0 ? {\n    getTermAggProps: function getTermAggProps() {\n      return {};\n    },\n    getRangeAggProps: function getRangeAggProps() {\n      return {};\n    },\n    getBooleanAggProps: function getBooleanAggProps() {\n      return {};\n    },\n    getDatesAggProps: function getDatesAggProps() {\n      return {};\n    }\n  } : _ref2$componentProps,\n      _ref2$getCustomItems = _ref2.getCustomItems,\n      getCustomItems = _ref2$getCustomItems === void 0 ? function (_ref3) {\n    var aggs = _ref3.aggs;\n    return [];\n  } : _ref2$getCustomItems;\n\n  var aggComponentInstances = data && aggs.map(function (agg) {\n    return _objectSpread({}, agg, {}, data[graphqlField].aggregations[agg.field], {}, data[graphqlField].extended.find(function (x) {\n      return x.field.replace(/\\./g, '__') === agg.field;\n    }), {\n      onValueChange: function onValueChange(_ref4) {\n        var sqon = _ref4.sqon,\n            value = _ref4.value;\n\n        _onValueChange(value);\n\n        setSQON(sqon);\n      },\n      key: agg.field,\n      sqon: sqon,\n      containerRef: containerRef\n    });\n  }).map(function (agg) {\n    var _aggComponents$agg$ty;\n\n    return (_aggComponents$agg$ty = _aggComponentsMap.default[agg.type]) === null || _aggComponents$agg$ty === void 0 ? void 0 : _aggComponents$agg$ty.call(_aggComponentsMap.default, _objectSpread({}, agg, {}, componentProps));\n  });\n\n  if (aggComponentInstances) {\n    // sort the list by the index specified for each component to prevent order bumping\n    var componentListToInsert = (0, _lodash.sortBy)(getCustomItems({\n      aggs: aggs\n    }), 'index'); // go through the list of inserts and inject them by splitting and joining\n\n    var inserted = componentListToInsert.reduce(function (acc, _ref5) {\n      var index = _ref5.index,\n          component = _ref5.component;\n      var firstChunk = acc.slice(0, index);\n      var secondChunk = acc.slice(index, acc.length);\n      return [].concat(_toConsumableArray(firstChunk), [component()], _toConsumableArray(secondChunk));\n    }, aggComponentInstances);\n    return inserted;\n  } else {\n    return aggComponentInstances;\n  }\n};\n\nexports.AggregationsListDisplay = AggregationsListDisplay;\n\nvar AggregationsList = function AggregationsList(_ref6) {\n  var _ref6$onValueChange = _ref6.onValueChange,\n      onValueChange = _ref6$onValueChange === void 0 ? function () {} : _ref6$onValueChange,\n      setSQON = _ref6.setSQON,\n      sqon = _ref6.sqon,\n      projectId = _ref6.projectId,\n      graphqlField = _ref6.graphqlField,\n      style = _ref6.style,\n      api = _ref6.api,\n      _ref6$Wrapper = _ref6.Wrapper,\n      Wrapper = _ref6$Wrapper === void 0 ? BaseWrapper : _ref6$Wrapper,\n      containerRef = _ref6.containerRef,\n      _ref6$componentProps = _ref6.componentProps,\n      componentProps = _ref6$componentProps === void 0 ? {\n    getTermAggProps: function getTermAggProps() {\n      return {};\n    },\n    getRangeAggProps: function getRangeAggProps() {\n      return {};\n    },\n    getBooleanAggProps: function getBooleanAggProps() {\n      return {};\n    },\n    getDatesAggProps: function getDatesAggProps() {\n      return {};\n    }\n  } : _ref6$componentProps,\n      _ref6$aggs = _ref6.aggs,\n      aggs = _ref6$aggs === void 0 ? [] : _ref6$aggs,\n      debounceTime = _ref6.debounceTime,\n      getCustomItems = _ref6.getCustomItems;\n  return _react.default.createElement(_Aggs.AggsQuery, {\n    api: api,\n    debounceTime: 300,\n    projectId: projectId,\n    index: graphqlField,\n    sqon: sqon,\n    aggs: aggs,\n    render: function render(_ref7) {\n      var data = _ref7.data;\n      return AggregationsListDisplay({\n        data: data,\n        onValueChange: onValueChange,\n        aggs: aggs,\n        graphqlField: graphqlField,\n        setSQON: setSQON,\n        sqon: sqon,\n        containerRef: containerRef,\n        componentProps: componentProps,\n        getCustomItems: getCustomItems\n      });\n    }\n  });\n};\n\nexports.AggregationsList = AggregationsList;\n\nvar Aggregations = function Aggregations(_ref8) {\n  var _ref8$onValueChange = _ref8.onValueChange,\n      onValueChange = _ref8$onValueChange === void 0 ? function () {} : _ref8$onValueChange,\n      setSQON = _ref8.setSQON,\n      sqon = _ref8.sqon,\n      projectId = _ref8.projectId,\n      graphqlField = _ref8.graphqlField,\n      _ref8$className = _ref8.className,\n      className = _ref8$className === void 0 ? '' : _ref8$className,\n      style = _ref8.style,\n      api = _ref8.api,\n      _ref8$Wrapper = _ref8.Wrapper,\n      Wrapper = _ref8$Wrapper === void 0 ? BaseWrapper : _ref8$Wrapper,\n      containerRef = _ref8.containerRef,\n      _ref8$componentProps = _ref8.componentProps,\n      componentProps = _ref8$componentProps === void 0 ? {\n    getTermAggProps: function getTermAggProps() {\n      return {};\n    },\n    getRangeAggProps: function getRangeAggProps() {\n      return {};\n    },\n    getBooleanAggProps: function getBooleanAggProps() {\n      return {};\n    },\n    getDatesAggProps: function getDatesAggProps() {\n      return {};\n    }\n  } : _ref8$componentProps;\n  return _react.default.createElement(Wrapper, {\n    style: style,\n    className: className\n  }, _react.default.createElement(_Aggs.AggsState, {\n    api: api,\n    projectId: projectId,\n    graphqlField: graphqlField,\n    render: function render(aggsState) {\n      var aggs = aggsState.aggs.filter(function (x) {\n        return x.show;\n      });\n      return _react.default.createElement(AggregationsList, {\n        onValueChange: onValueChange,\n        setSQON: setSQON,\n        style: style,\n        Wrapper: Wrapper,\n        containerRef: containerRef,\n        componentProps: componentProps,\n        api: api,\n        debounceTime: 300,\n        projectId: projectId,\n        graphqlField: graphqlField,\n        sqon: sqon,\n        aggs: aggs\n      });\n    }\n  }));\n};\n\nvar _default = Aggregations;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}