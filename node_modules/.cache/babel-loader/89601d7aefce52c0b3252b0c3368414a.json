{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar _normalizeFilters = _interopRequireDefault(require(\"../buildQuery/normalizeFilters\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar getNestedSqonFilters = function getNestedSqonFilters(_ref) {\n  var _ref$sqon = _ref.sqon,\n      sqon = _ref$sqon === void 0 ? null : _ref$sqon,\n      nestedFields = _ref.nestedFields,\n      _ref$accumulator = _ref.accumulator,\n      accumulator = _ref$accumulator === void 0 ? {} : _ref$accumulator,\n      _ref$parentPivot = _ref.parentPivot,\n      parentPivot = _ref$parentPivot === void 0 ? '.' : _ref$parentPivot;\n  var op = sqon.op;\n\n  if ([_constants.AND_OP, _constants.OR_OP, _constants.NOT_OP].includes(op)) {\n    var _sqon$content = sqon.content,\n        content = _sqon$content === void 0 ? [] : _sqon$content,\n        pivot = sqon.pivot; // console.log('sqon: ', JSON.stringify(sqon, null, 2));\n\n    content.forEach(function (c) {\n      return getNestedSqonFilters({\n        sqon: c,\n        nestedFields: nestedFields,\n        accumulator: accumulator,\n        parentPivot: pivot\n      });\n    });\n  } else {\n    var _sqon$content2 = sqon.content,\n        sqonField = _sqon$content2.field,\n        sqonFields = _sqon$content2.fields;\n    var fields = sqonFields || [sqonField];\n    fields.forEach(function (field) {\n      var splitted = field.split('.') || '';\n      var parentPath = splitted.slice(0, splitted.length - 1).join('.');\n      var isNested = nestedFields.includes(splitted.slice(0, splitted.length - 1).join('.'));\n\n      if (splitted.length && isNested && parentPivot !== parentPath) {\n        accumulator[parentPath] = [].concat(_toConsumableArray(accumulator[parentPath] || []), [sqon]);\n      }\n    });\n  }\n\n  return accumulator;\n};\n\nvar _default = function _default(_ref2) {\n  var _ref2$sqon = _ref2.sqon,\n      sqon = _ref2$sqon === void 0 ? null : _ref2$sqon,\n      nestedFields = _ref2.nestedFields;\n  var normalized = (0, _normalizeFilters[\"default\"])(sqon); // console.log('normalized: ', JSON.stringify(normalized, null, 2));\n\n  return sqon ? getNestedSqonFilters({\n    sqon: normalized,\n    nestedFields: nestedFields\n  }) : {};\n};\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}