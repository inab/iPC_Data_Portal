{"ast":null,"code":"var _jsxFileName = \"/home/acanosa/React_arranger_template/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as Keycloak from 'keycloak-js';\nlet initOptions = {\n  url: 'https://inb.bsc.es/auth/',\n  realm: 'IPC',\n  clientId: 'ipc-react-portal',\n  onLoad: 'login-required'\n};\nlet keycloak = Keycloak(initOptions);\n/*keycloak.init({ onLoad: initOptions.onLoad }).success((auth) => {\n\n    if (!auth) {\n        window.location.reload();\n    } else {\n        console.info(\"Authenticated\");\n    }*/\n\nconst app = React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}));\nconsole.log(\"React\");\nReactDOM.render(app, document.getElementById('root'));\n/*    localStorage.setItem(\"react-token\", keycloak.token);\n    localStorage.setItem(\"react-refresh-token\", keycloak.refreshToken);\n\n    setTimeout(() => {\n        keycloak.updateToken(70).success((refreshed) => {\n            if (refreshed) {\n                console.debug('Token refreshed' + refreshed);\n            } else {\n                console.warn('Token not refreshed, valid for '\n                    + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n            }\n        }).error(() => {\n            console.error('Failed to refresh token');\n        });\n    }, 60000)\n\n}).error(() => {\n    console.error(\"Authenticated Failed\");\n});*/","map":{"version":3,"sources":["/home/acanosa/React_arranger_template/src/index.js"],"names":["React","ReactDOM","BrowserRouter","App","Keycloak","initOptions","url","realm","clientId","onLoad","keycloak","app","console","log","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AAEA,IAAIC,WAAW,GAAG;AACdC,EAAAA,GAAG,EAAE,0BADS;AACmBC,EAAAA,KAAK,EAAE,KAD1B;AACiCC,EAAAA,QAAQ,EAAE,kBAD3C;AAC+DC,EAAAA,MAAM,EAAE;AADvE,CAAlB;AAIA,IAAIC,QAAQ,GAAGN,QAAQ,CAACC,WAAD,CAAvB;AAEA;;;;;;;;AAQI,MAAMM,GAAG,GACL,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;AAMAC,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAZ,QAAQ,CAACa,MAAT,CAAgBH,GAAhB,EAAqBI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AAEJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as Keycloak from 'keycloak-js';\n\nlet initOptions = {\n    url: 'https://inb.bsc.es/auth/', realm: 'IPC', clientId: 'ipc-react-portal', onLoad: 'login-required'\n}\n\nlet keycloak = Keycloak(initOptions);\n\n/*keycloak.init({ onLoad: initOptions.onLoad }).success((auth) => {\n\n    if (!auth) {\n        window.location.reload();\n    } else {\n        console.info(\"Authenticated\");\n    }*/\n\n    const app = (\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    );\n\n    console.log(\"React\");\n\n    ReactDOM.render(app, document.getElementById('root'));\n\n/*    localStorage.setItem(\"react-token\", keycloak.token);\n    localStorage.setItem(\"react-refresh-token\", keycloak.refreshToken);\n\n    setTimeout(() => {\n        keycloak.updateToken(70).success((refreshed) => {\n            if (refreshed) {\n                console.debug('Token refreshed' + refreshed);\n            } else {\n                console.warn('Token not refreshed, valid for '\n                    + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n            }\n        }).error(() => {\n            console.error('Failed to refresh token');\n        });\n    }, 60000)\n\n}).error(() => {\n    console.error(\"Authenticated Failed\");\n});*/\n"]},"metadata":{},"sourceType":"module"}