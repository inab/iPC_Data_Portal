{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _utils = require(\"../SQONView/utils\");\n\nvar _Location = _interopRequireDefault(require(\"../Location\"));\n\nvar _TermAgg = _interopRequireDefault(require(\"./TermAgg\"));\n\nvar _AggsQuery = _interopRequireDefault(require(\"./AggsQuery\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _default = function _default(_ref) {\n  var index = _ref.index,\n      _ref$aggs = _ref.aggs,\n      aggs = _ref$aggs === void 0 ? [] : _ref$aggs,\n      props = _objectWithoutProperties(_ref, [\"index\", \"aggs\"]);\n\n  return !aggs.length ? null : _react.default.createElement(_AggsQuery.default, _extends({\n    index: index,\n    aggs: aggs,\n    render: function render(_ref2) {\n      var data = _ref2.data,\n          loading = _ref2.loading;\n      return loading ? 'loading' : _react.default.createElement(\"div\", {\n        className: \"remainder\"\n      }, Object.entries(data[index].aggregations).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            field = _ref4[0],\n            data = _ref4[1];\n\n        return _react.default.createElement(_Location.default, {\n          key: field,\n          render: function render(search) {\n            return _react.default.createElement(_TermAgg.default, {\n              field: field,\n              buckets: data.buckets,\n              isActive: function isActive(d) {\n                return (0, _utils.inCurrentFilters)({\n                  key: d.value,\n                  dotField: d.field,\n                  currentFilters: (search.filters || {}).content\n                });\n              },\n              handleFieldClick: function handleFieldClick(d) {// history.push({\n                //   search: stringify({\n                //     filters: JSON.stringify({\n                //       op: 'and',\n                //       content: [\n                //         {\n                //           op: 'in',\n                //           content: {\n                //             field: d.field,\n                //             value: [d.value],\n                //           },\n                //         },\n                //       ],\n                //     }),\n                //   }),\n                // });\n              }\n            });\n          }\n        });\n      }));\n    }\n  }, props));\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}