version: 2.1

workflows:
  test-and-publish-permissions-API:
    jobs:
      - run-tests:
          name: test-api
      - hold:
          type: approval
          requires:
            - test-api
      - publish:
          requires:
            - test-api
            - hold
          filters:
            branches:
              only: master
jobs:
  run-tests:
    machine:
      image: ubuntu-1604:202007-01
    steps:
      - checkout
      - run:
          name: Start KEYCLOAK
          command: |
            docker-compose -f docker-compose.tests.yml --env-file .env-tests up -d keycloak
            docker-compose -f docker-compose.tests.yml logs
            #sleep 60
      - run:
          name: Start Elasticsearch
          command: |
            docker-compose -f docker-compose.tests.yml up -d elasticsearch
            docker-compose -f docker-compose.tests.yml logs
            #sleep 60
      - run:
          name: Run Catalogue
          command: |
            docker-compose -f docker-compose.tests.yml up -d catalogue
            docker-compose -f docker-compose.tests.yml logs
            #sleep 60
      - run:
          name: Start MONGO
          command: |
            docker-compose -f docker-compose.tests.yml --env-file .env-tests up -d mongo
            docker-compose -f docker-compose.tests.yml logs
            #sleep 30
      - run:
          name: Start Permissions-API
          command: |
            docker-compose -f docker-compose.tests.yml up -d permissions-api
            docker-compose -f docker-compose.tests.yml logs
            #sleep 10
      - run:
          name: Start Outbox-API
          command: |
            docker-compose -f docker-compose.tests.yml up -d outbox-api
            docker-compose -f docker-compose.tests.yml logs
            #sleep 10
      - run:
          name: Run tests with Cypress
          command: docker-compose -f docker-compose.tests.yml exec catalogue npm run cypress:run
  publish:
    docker:
      - image: cimg/node:16.4.1
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      - run: 
          command: | 
            TAG=0.1.${CIRCLE_BUILD_NUM} 
            docker build -f Dockerfile.production -t acavalls/ipc-data-catalogue:$TAG -t acavalls/ipc-data-catalogue:latest .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push acavalls/ipc-data-catalogue:$TAG
            docker push acavalls/ipc-data-catalogue:latest
